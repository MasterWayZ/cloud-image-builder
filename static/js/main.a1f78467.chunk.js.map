{"version":3,"sources":["CommitMessage.js","Image.js","Images.js","StatusBadgeVariantMap.js","Run.js","Runs.js","Task.js","Tasks.js","Status.js","Statuses.js","Commit.js","Commits.js","App.js","serviceWorker.js","index.js"],"names":["CommitMessage","this","props","message","filter","line","match","RegExp","map","some","instruction","Badge","style","marginRight","variant","includes","inex","type","startsWith","replace","split","item","title","slice","React","Component","Image","re","state","domain","pool","region","sha","bootstrap","disk","matches","image","substring","lastIndexOf","setState","href","target","rel","Images","images","key","StatusBadgeVariantMap","completed","failed","exception","running","pending","unscheduled","Run","summary","task","artifacts","appendToSummary","bind","combined","appender","fetch","rootUrl","taskId","run","runId","then","responseArtifactsApi","json","container","length","a","name","endsWith","artifact","find","responseArtifactApi","launchConfigs","imageIds","launchConfig","storageProfile","imageReference","id","reduce","imageId","i","console","log","catch","Button","size","marginLeft","Runs","runs","Task","metadata","status","Array","from","Set","r","margin","Tasks","tasks","sort","b","Status","taskGroupId","taskCount","builds","travisApiResponse","travisBuildResults","context","pathname","URL","target_url","buildId","responseBuildsApi","matrix","x","result","finished_at","o","k","v","taskGroupHtmlUrl","tasksApi","hostname","responseTasksApi","resolved","Intl","DateTimeFormat","year","month","day","hour","minute","timeZoneName","format","Date","updated_at","description","toLowerCase","Object","keys","t","settings","showAllTasks","Statuses","contexts","cI","padding","listStyle","backgroundImage","statuses","s","avatar_url","backgroundRepeat","backgroundPosition","backgroundSize","Commit","expanded","expand","interval","Math","floor","random","setInterval","getBuildStatuses","clearInterval","window","location","commit","responseGithubApiStatuses","githubCommitStatuses","localeCompare","Card","width","marginTop","Header","Accordion","Toggle","as","eventKey","onClick","committer","date","url","Spinner","animation","src","author","avatar","alt","rounded","height","className","username","Body","Collapse","Commits","commits","defaultActiveKey","textAlign","App","cookies","Cookies","fluid","get","set","path","getCommits","responseGithubApiCommits","githubCommits","c","html_url","login","verification","latest","Container","Row","icon","faCloud","faImage","faHammer","Col","sm","display","Form","Check","label","checked","onChange","Boolean","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"4XAqFeA,E,uKAhFH,IAAD,OACP,OACE,6BAEIC,KAAKC,MAAMC,QAAQC,QAAO,SAAAC,GAAI,OAC3BA,EAAKC,MAAO,IAAIC,OAAQ,yDAA0D,QAElFF,EAAKC,MAAO,IAAIC,OAAQ,+EAAgF,SACxGC,KAAI,SAAAH,GAAI,OACT,gCACGA,EAAK,iCAKTJ,KAAKC,MAAMC,QAAQM,MAAK,SAAAJ,GAAI,OAC3BA,EAAKC,MAAM,4DAEXD,EAAKC,MAAM,oFAGNL,KAAKC,MAAMC,QAAQC,QAAO,SAAAC,GAAI,OAAKA,EAAKC,MAAM,oFAAoFE,KAAI,SAAAE,GAAW,OAChJ,kBAACC,EAAA,EAAD,CACEC,MAAO,CAAEC,YAAa,SACtBC,QAAU,CAAC,cAAe,2BAA2BC,SAASL,GAAgB,UAAY,QAEvE,gBAAhBA,EACG,GAEE,8BACE,kBAAC,IAAD,MADF,QAMPA,MAKL,kBAACC,EAAA,EAAD,CAAOG,QAAQ,WAAf,oCAMN,CAAC,UAAW,WAAWN,KAAI,SAAAQ,GAAI,OAC5B,EAAKd,MAAMC,QAAQM,MAAK,SAAAJ,GAAI,OAAIA,EAAKC,MAAO,IAAIC,OAAQ,IAAMS,EAAO,uCAAwC,SAExG,8BAEI,CAAC,eAAgB,eAAgB,OAAQ,QAAS,WAAWR,KAAI,SAAAS,GAAI,OACnE,EAAKf,MAAMC,QAAQC,QAAO,SAAAC,GAAI,OAAIA,EAAKa,WAAWF,EAAO,IAAMC,EAAO,SAAOT,KAAI,SAAAH,GAAI,OACnFA,EAAKc,QAAQH,EAAO,IAAMC,EAAO,KAAM,IAAIG,MAAM,MAAMZ,KAAI,SAAAa,GAAI,OAC7D,kBAACV,EAAA,EAAD,CACEC,MAAO,CAAEC,YAAa,SACtBC,QAAmB,YAATE,EAAsB,OAAS,OACzCM,MAAON,EAAO,IAAMC,EAAKM,MAAM,GAAI,GAAK,KAAOF,GAEnC,YAATL,EACG,kBAAC,IAAD,MACA,kBAAC,IAAD,MAPR,OASSK,YAMjB,8BAGJ,W,GAzEYG,IAAMC,W,gBCwCnBC,E,4MAxCbC,GAAK,8G,EACLC,MAAQ,CACNC,OAAQ,KACRC,KAAM,KACNC,OAAQ,KACRC,IAAK,CACHC,UAAW,KACXC,KAAM,O,kEAKR,IACIC,EADOlC,KAAKC,MAAMkC,MAAMC,UAAUpC,KAAKC,MAAMkC,MAAME,YAAY,KAAO,GACvDhC,MAAML,KAAK0B,IAC9B1B,KAAKsC,UAAS,SAAAX,GAAK,MAAK,CACtBC,OAAQM,EAAQ,GAChBL,KAAMK,EAAQ,GACdJ,OAAQI,EAAQ,GAChBH,IAAK,CACHC,UAAWE,EAAQ,GACnBD,KAAMC,EAAQ,U,+BAMlB,OACE,4BACE,uBAAGK,KAAM,iFAAmFvC,KAAKC,MAAMkC,MAAOK,OAAO,SAASC,IAAI,uBAC/HzC,KAAK2B,MAAMG,OADd,IAEI9B,KAAK2B,MAAMC,OAFf,IAGI5B,KAAK2B,MAAME,KAHf,IAII7B,KAAK2B,MAAMI,IAAIE,KAJnB,IAKIjC,KAAK2B,MAAMI,IAAIC,gB,GAlCPT,IAAMC,WCiBXkB,E,uKAfX,OACE,6BACE,mEACA,4BAEI1C,KAAKC,MAAM0C,OAAOpC,KAAI,SAAA4B,GAAK,OACzB,kBAAC,EAAD,CAAOA,MAAOA,EAAOS,IAAKT,a,GARnBZ,IAAMC,WCKZqB,EARe,CAC5BC,UAAW,UACXC,OAAQ,SACRC,UAAW,UACXC,QAAS,UACTC,QAAS,OACTC,YAAa,aC+GAC,E,kDA7Fb,WAAYnD,GAAQ,IAAD,8BACjB,cAAMA,IAjBR0B,MAAQ,CACN0B,QAAS,CACPC,KAAM,CACJR,UAAW,GACXC,OAAQ,GACRC,UAAW,GACXC,QAAS,GACTC,QAAS,GACTC,YAAa,IAEfhB,MAAO,IAEToB,UAAW,GACXZ,OAAQ,IAKR,EAAKa,gBAAkB,EAAKA,gBAAgBC,KAArB,gBAFN,E,4DAKHJ,GAAU,IAAD,OACvBrD,KAAKsC,UAAS,SAAAX,GACZ,IAAI+B,EAAW,CACbJ,KAAM,CACJR,UAAU,2BAAMnB,EAAM0B,QAAQC,KAAKR,WAAcO,EAAQC,KAAKR,WAC9DC,OAAO,2BAAMpB,EAAM0B,QAAQC,KAAKP,QAAWM,EAAQC,KAAKP,QACxDC,UAAU,2BAAMrB,EAAM0B,QAAQC,KAAKN,WAAcK,EAAQC,KAAKN,WAC9DC,QAAQ,2BAAMtB,EAAM0B,QAAQC,KAAKL,SAAYI,EAAQC,KAAKL,SAC1DC,QAAQ,2BAAMvB,EAAM0B,QAAQC,KAAKJ,SAAYG,EAAQC,KAAKJ,SAC1DC,YAAY,2BAAMxB,EAAM0B,QAAQC,KAAKH,aAAgBE,EAAQC,KAAKH,cAEpEhB,MAAM,2BAAMR,EAAM0B,QAAQlB,OAAUkB,EAAQlB,QAG9C,OADA,EAAKlC,MAAM0D,SAASD,GACb,CAAEL,QAASK,Q,0CAID,IAAD,OAClBE,MAAM5D,KAAKC,MAAM4D,QAAU,sBAAwB7D,KAAKC,MAAM6D,OAAS,SAAW9D,KAAKC,MAAM8D,IAAIC,MAAQ,cACxGC,MAAK,SAAAC,GAAoB,OAAIA,EAAqBC,UAClDF,MAAK,SAACG,GACL,GAAIA,EAAUb,WAAaa,EAAUb,UAAUc,QAI7C,GAHA,EAAK/B,UAAS,SAAAX,GAAK,MAAK,CACtB4B,UAAWa,EAAUb,cAEnBa,EAAUb,UAAU/C,MAAK,SAAA8D,GAAC,OAAIA,EAAEC,KAAKtD,WAAW,YAAcqD,EAAEC,KAAKC,SAAS,YAAW,CAC3F,IAAIC,EAAWL,EAAUb,UAAUmB,MAAK,SAAAJ,GAAC,OAAIA,EAAEC,KAAKtD,WAAW,YAAcqD,EAAEC,KAAKC,SAAS,YAC7FZ,MAAM,EAAK3D,MAAM4D,QAAU,sBAAwB,EAAK5D,MAAM6D,OAAS,SAAW,EAAK7D,MAAM8D,IAAIC,MAAQ,cAAgBS,EAASF,MACjIN,MAAK,SAAAU,GAAmB,OAAIA,EAAoBR,UAChDF,MAAK,SAACG,GACL,GAAIA,EAAUQ,eAAiBR,EAAUQ,cAAcP,OAAQ,CAC7D,IAAIQ,EAAWT,EAAUQ,cAAcrE,KAAI,SAAAuE,GAAY,OAAIA,EAAaC,eAAeC,eAAeC,MACtG,EAAK3C,UAAS,SAAAX,GAAK,MAAK,CACtBgB,OAAQkC,MAEV,IAAInD,EAAK,oHACT,EAAK8B,gBAAgB,CACnBF,KAAM,CACJR,UAAW,EACXC,OAAQ,EACRC,UAAW,EACXC,QAAS,EACTC,QAAS,EACTC,YAAa,GAEfhB,MAAO0C,EAASK,QAAO,SAASZ,EAAGa,EAASC,GAC1C,IACIlD,EADQiD,EAAQ/C,UAAU+C,EAAQ9C,YAAY,KAAO,GACrChC,MAAMqB,GACtBG,EAAOK,EAAQ,GAAK,IAAMA,EAAQ,GAEtC,OADAoC,EAAEzC,IAASyC,EAAEzC,IAAS,GAAK,EACpByC,IACN,WAGLe,QAAQC,IAAIlB,MAGfmB,MAAMF,QAAQC,WAGjBD,QAAQC,IAAIlB,MAGfmB,MAAMF,QAAQC,O,+BAIf,OACE,4BACE,kBAACE,EAAA,EAAD,CACEC,KAAK,KACLlD,KAAMvC,KAAKC,MAAM4D,QAAU,UAAY7D,KAAKC,MAAM6D,OAAS,SAAW9D,KAAKC,MAAM8D,IAAIC,MACrFrD,MAAO,CAAE+E,WAAY,SACrB7E,QAAS,WAAagC,EAAsB7C,KAAKC,MAAM8D,IAAIpC,OAC3DN,MAAO,QAAUrB,KAAKC,MAAM6D,OAAS,SAAW9D,KAAKC,MAAM8D,IAAIC,MAAQ,KAAOhE,KAAKC,MAAM8D,IAAIpC,OAC5F,QAAU3B,KAAKC,MAAM6D,OAAS,SAAW9D,KAAKC,MAAM8D,IAAIC,OAG/B,cAAzBhE,KAAKC,MAAM8D,IAAIpC,OAAyB3B,KAAK2B,MAAMgB,OAAO0B,OACtD,kBAAC,EAAD,CAAQ1B,OAAQ3C,KAAK2B,MAAMgB,SAC5B,Q,GAvGIpB,IAAMC,WC+CTmE,E,kDApCb,WAAY1F,GAAQ,IAAD,8BACjB,cAAMA,IAfR0B,MAAQ,CACN0B,QAAS,CACPC,KAAM,CACJR,UAAW,GACXC,OAAQ,GACRC,UAAW,GACXC,QAAS,GACTC,QAAS,GACTC,YAAa,IAEfhB,MAAO,KAMT,EAAKqB,gBAAkB,EAAKA,gBAAgBC,KAArB,gBAFN,E,4DAKHJ,GAAU,IAAD,OACvBrD,KAAKsC,UAAS,SAAAX,GACZ,IAAI+B,EAAW,CACbJ,KAAM,CACJR,UAAU,2BAAMnB,EAAM0B,QAAQC,KAAKR,WAAcO,EAAQC,KAAKR,WAC9DC,OAAO,2BAAMpB,EAAM0B,QAAQC,KAAKP,QAAWM,EAAQC,KAAKP,QACxDC,UAAU,2BAAMrB,EAAM0B,QAAQC,KAAKN,WAAcK,EAAQC,KAAKN,WAC9DC,QAAQ,2BAAMtB,EAAM0B,QAAQC,KAAKL,SAAYI,EAAQC,KAAKL,SAC1DC,QAAQ,2BAAMvB,EAAM0B,QAAQC,KAAKJ,SAAYG,EAAQC,KAAKJ,SAC1DC,YAAY,2BAAMxB,EAAM0B,QAAQC,KAAKH,aAAgBE,EAAQC,KAAKH,cAEpEhB,MAAM,2BAAMR,EAAM0B,QAAQlB,OAAUkB,EAAQlB,QAG9C,OADA,EAAKlC,MAAM0D,SAASD,GACb,CAAEL,QAASK,Q,+BAIZ,IAAD,OACP,OACE,4BAEI1D,KAAKC,MAAM2F,KAAKrF,KAAI,SAAAwD,GAAG,OACrB,kBAAC,EAAD,CAAKA,IAAKA,EAAKnB,IAAKmB,EAAIC,MAAOF,OAAQ,EAAK7D,MAAM6D,OAAQD,QAAS,EAAK5D,MAAM4D,QAASF,SAAU,EAAKH,0B,GA3C/FjC,IAAMC,WCgEVqE,E,kDA/Cb,WAAY5F,GAAQ,IAAD,8BACjB,cAAMA,IAfR0B,MAAQ,CACN0B,QAAS,CACPC,KAAM,CACJR,UAAW,GACXC,OAAQ,GACRC,UAAW,GACXC,QAAS,GACTC,QAAS,GACTC,YAAa,IAEfhB,MAAO,KAMT,EAAKqB,gBAAkB,EAAKA,gBAAgBC,KAArB,gBAFN,E,4DAKHJ,GAAU,IAAD,OACvBrD,KAAKsC,UAAS,SAAAX,GACZ,IAAI+B,EAAW,CACbJ,KAAM,CACJR,UAAU,2BAAMnB,EAAM0B,QAAQC,KAAKR,WAAcO,EAAQC,KAAKR,WAC9DC,OAAO,2BAAMpB,EAAM0B,QAAQC,KAAKP,QAAWM,EAAQC,KAAKP,QACxDC,UAAU,2BAAMrB,EAAM0B,QAAQC,KAAKN,WAAcK,EAAQC,KAAKN,WAC9DC,QAAQ,2BAAMtB,EAAM0B,QAAQC,KAAKL,SAAYI,EAAQC,KAAKL,SAC1DC,QAAQ,2BAAMvB,EAAM0B,QAAQC,KAAKJ,SAAYG,EAAQC,KAAKJ,SAC1DC,YAAY,2BAAMxB,EAAM0B,QAAQC,KAAKH,aAAgBE,EAAQC,KAAKH,cAEpEhB,MAAM,2BAAMR,EAAM0B,QAAQlB,OAAUkB,EAAQlB,QAG9C,OADA,EAAKlC,MAAM0D,SAASD,GACb,CAAEL,QAASK,Q,+BAIZ,IAAD,OACP,OACE,4BACG1D,KAAKC,MAAMqD,KAAKA,KAAKwC,SAASvB,KADjC,OAGE,uBAAGhC,KAAMvC,KAAKC,MAAM4D,QAAU,UAAY7D,KAAKC,MAAMqD,KAAKyC,OAAOjC,OAAQzC,MAAOrB,KAAKC,MAAMqD,KAAKyC,OAAOjC,QACpG9D,KAAKC,MAAMqD,KAAKyC,OAAOjC,OAAO1B,UAAU,EAAG,GAD9C,OAIE4D,MAAMC,KAAK,IAAIC,IAAIlG,KAAKC,MAAMqD,KAAKyC,OAAOH,KAAKrF,KAAI,SAAA4F,GAAC,OAAIA,EAAExE,WAASpB,KAAI,SAAAoB,GAAK,OAC1E,kBAACjB,EAAA,EAAD,CACEC,MAAO,CAAEyF,OAAQ,SACjBvF,QAASgC,EAAsBlB,GAC/BN,MAAOM,EAAQ,KAAO,EAAK1B,MAAMqD,KAAKyC,OAAOH,KAAKzF,QAAO,SAAAgG,GAAC,OAAIA,EAAExE,QAAUA,KAAO0C,QAChF,EAAKpE,MAAMqD,KAAKyC,OAAOH,KAAKzF,QAAO,SAAAgG,GAAC,OAAIA,EAAExE,QAAUA,KAAO0C,WAIlE,kBAAC,EAAD,CAAMuB,KAAM5F,KAAKC,MAAMqD,KAAKyC,OAAOH,KAAM9B,OAAQ9D,KAAKC,MAAMqD,KAAKyC,OAAOjC,OAAQD,QAAS7D,KAAKC,MAAM4D,QAASF,SAAU3D,KAAKwD,uB,GAxDjHjC,IAAMC,WCiDV6E,E,kDApCb,WAAYpG,GAAQ,IAAD,8BACjB,cAAMA,IAfR0B,MAAQ,CACN0B,QAAS,CACPC,KAAM,CACJR,UAAW,GACXC,OAAQ,GACRC,UAAW,GACXC,QAAS,GACTC,QAAS,GACTC,YAAa,IAEfhB,MAAO,KAMT,EAAKqB,gBAAkB,EAAKA,gBAAgBC,KAArB,gBAFN,E,4DAKHJ,GAAU,IAAD,OACvBrD,KAAKsC,UAAS,SAAAX,GACZ,IAAI+B,EAAW,CACbJ,KAAM,CACJR,UAAU,2BAAMnB,EAAM0B,QAAQC,KAAKR,WAAcO,EAAQC,KAAKR,WAC9DC,OAAO,2BAAMpB,EAAM0B,QAAQC,KAAKP,QAAWM,EAAQC,KAAKP,QACxDC,UAAU,2BAAMrB,EAAM0B,QAAQC,KAAKN,WAAcK,EAAQC,KAAKN,WAC9DC,QAAQ,2BAAMtB,EAAM0B,QAAQC,KAAKL,SAAYI,EAAQC,KAAKL,SAC1DC,QAAQ,2BAAMvB,EAAM0B,QAAQC,KAAKJ,SAAYG,EAAQC,KAAKJ,SAC1DC,YAAY,2BAAMxB,EAAM0B,QAAQC,KAAKH,aAAgBE,EAAQC,KAAKH,cAEpEhB,MAAM,2BAAMR,EAAM0B,QAAQlB,OAAUkB,EAAQlB,QAG9C,OADA,EAAKlC,MAAM0D,SAASD,GACb,CAAEL,QAASK,Q,+BAIZ,IAAD,OACP,OACE,4BAEI1D,KAAKC,MAAMqG,MAAMC,MAAK,SAACjC,EAAGkC,GAAJ,OAAYlC,EAAEhB,KAAKwC,SAASvB,KAAOiC,EAAElD,KAAKwC,SAASvB,MAAS,EAAKD,EAAEhB,KAAKwC,SAASvB,KAAOiC,EAAElD,KAAKwC,SAASvB,KAAQ,EAAI,KAAIhE,KAAI,SAAA+C,GAAI,OACpJ,kBAAC,EAAD,CAAMA,KAAMA,EAAMV,IAAKU,EAAKyC,OAAOjC,OAAQD,QAAS,EAAK5D,MAAM4D,QAASF,SAAU,EAAKH,0B,GA3C/EjC,IAAMC,WC6LXiF,E,kDAlKb,WAAYxG,GAAQ,IAAD,8BACjB,cAAMA,IAxBR0B,MAAQ,CACN0B,QAAS,CACPC,KAAM,CACJR,UAAW,GACXC,OAAQ,GACRC,UAAW,GACXC,QAAS,GACTC,QAAS,GACTC,YAAa,IAEfhB,MAAO,IAETuE,YAAa,KACbC,UAAW,EACXL,MAAO,GACPM,OAAQ,GACRC,kBAAmB,IAOF,EALnBC,mBAAqB,CACnB,YACA,UAKA,EAAKtD,gBAAkB,EAAKA,gBAAgBC,KAArB,gBAFN,E,4DAKHJ,GAAU,IAAD,OACvBrD,KAAKsC,UAAS,SAAAX,GACZ,IAAI+B,EAAW,CACbJ,KAAM,CACJR,UAAU,2BAAMnB,EAAM0B,QAAQC,KAAKR,WAAcO,EAAQC,KAAKR,WAC9DC,OAAO,2BAAMpB,EAAM0B,QAAQC,KAAKP,QAAWM,EAAQC,KAAKP,QACxDC,UAAU,2BAAMrB,EAAM0B,QAAQC,KAAKN,WAAcK,EAAQC,KAAKN,WAC9DC,QAAQ,2BAAMtB,EAAM0B,QAAQC,KAAKL,SAAYI,EAAQC,KAAKL,SAC1DC,QAAQ,2BAAMvB,EAAM0B,QAAQC,KAAKJ,SAAYG,EAAQC,KAAKJ,SAC1DC,YAAY,2BAAMxB,EAAM0B,QAAQC,KAAKH,aAAgBE,EAAQC,KAAKH,cAEpEhB,MAAM,2BAAMR,EAAM0B,QAAQlB,OAAUkB,EAAQlB,QAG9C,OADA,EAAKlC,MAAM0D,SAASD,GACb,CAAEL,QAASK,Q,0CAID,IAAD,OAClB,OAAQ1D,KAAKC,MAAM8F,OAAOgB,SACxB,IAAK,wCACH,IAAIC,EAAY,IAAIC,IAAIjH,KAAKC,MAAM8F,OAAOmB,YAAaF,SACnDG,EAAUH,EAAS5E,UAAU4E,EAAS3E,YAAY,KAAO,GAC7DrC,KAAKsC,UAAS,SAAAX,GAAK,MAAK,CACtB+E,YAAaS,MAGfvD,MADgB,mFAAqFuD,GAEpGlD,MAAK,SAAAmD,GAAiB,OAAIA,EAAkBjD,UAC5CF,MAAK,SAACG,GACDA,EAAUiD,SACZ,EAAK/E,UAAS,SAAAX,GAAK,MAAK,CACtBgF,UAAWvC,EAAUiD,OAAOhD,OAC5BuC,OAAQxC,EAAUiD,OAClBR,kBAAmBzC,MAErB,EAAKZ,gBAAgB,CACnBF,KAAM,CACJR,UAAU,eAAMsB,EAAUiD,OAAOlH,QAAO,SAAAmH,GAAC,OAAiB,IAAbA,EAAEC,UAAchH,KAAI,SAAA+G,GAAC,MAAI,CAACA,EAAErC,GAAIqC,EAAEE,gBAActC,QAAO,SAACuC,EAAD,0BAAKC,EAAL,KAAQC,EAAR,wBAAC,eAAmBF,GAApB,kBAAwBC,EAAIC,MAAK,KACrI5E,OAAO,eAAMqB,EAAUiD,OAAOlH,QAAO,SAAAmH,GAAC,OAAiB,OAAbA,EAAEC,QAAgC,IAAbD,EAAEC,UAAchH,KAAI,SAAA+G,GAAC,MAAI,CAACA,EAAErC,GAAIqC,EAAEE,gBAActC,QAAO,SAACuC,EAAD,0BAAKC,EAAL,KAAQC,EAAR,wBAAC,eAAmBF,GAApB,kBAAwBC,EAAIC,MAAK,KACvJ3E,UAAW,GACXC,QAAS,GACTC,QAAQ,eAAMkB,EAAUiD,OAAOlH,QAAO,SAAAmH,GAAC,OAAiB,OAAbA,EAAEC,UAAiBhH,KAAI,SAAA+G,GAAC,MAAI,CAACA,EAAErC,GAAIqC,EAAEE,gBAActC,QAAO,SAACuC,EAAD,0BAAKC,EAAL,KAAQC,EAAR,wBAAC,eAAmBF,GAApB,kBAAwBC,EAAIC,MAAK,KACtIxE,YAAa,IAEfhB,MAAO,SAIZoD,MAAMF,QAAQC,KACf,MACF,QACE,IAAIsC,EAAmB,IAAIX,IAAIjH,KAAKC,MAAM8F,OAAOmB,YAC7CR,EAAc1G,KAAKC,MAAM8F,OAAOmB,WAAW9E,UAAUpC,KAAKC,MAAM8F,OAAOmB,WAAW7E,YAAY,KAAO,GACzGrC,KAAKsC,UAAS,SAAAX,GAAK,MAAK,CACtB+E,YAAaA,MAEf,IAAImB,EAAW,WAAaD,EAAiBE,SAAW,4BAA8BpB,EAAc,QACpG9C,MAAMiE,GACL5D,MAAK,SAAA8D,GAAgB,OAAIA,EAAiB5D,UAC1CF,MAAK,SAACG,GACDA,EAAUkC,OAASlC,EAAUkC,MAAMjC,SACrC,EAAK/B,UAAS,SAAAX,GAAK,MAAK,CACtBgF,UAAWvC,EAAUkC,MAAMjC,OAC3BiC,MAAOlC,EAAUkC,UAEnB,EAAK9C,gBAAgB,CACnBF,KAAM,CACJR,UAAU,eAAMsB,EAAUkC,MAAMnG,QAAO,SAAAmH,GAAC,MAAuB,cAAnBA,EAAEvB,OAAOpE,SAAuBpB,KAAI,SAAA+G,GAAC,MAAI,CAACA,EAAEvB,OAAOjC,OAAQwD,EAAEvB,OAAOH,KAAK0B,EAAEvB,OAAOH,KAAKvB,OAAS,GAAG2D,aAAW9C,QAAO,SAACuC,EAAD,0BAAKC,EAAL,KAAQC,EAAR,wBAAC,eAAmBF,GAApB,kBAAwBC,EAAIC,MAAK,KAClM5E,OAAO,eAAMqB,EAAUkC,MAAMnG,QAAO,SAAAmH,GAAC,MAAuB,WAAnBA,EAAEvB,OAAOpE,SAAoBpB,KAAI,SAAA+G,GAAC,MAAI,CAACA,EAAEvB,OAAOjC,OAAQwD,EAAEvB,OAAOH,KAAK0B,EAAEvB,OAAOH,KAAKvB,OAAS,GAAG2D,aAAW9C,QAAO,SAACuC,EAAD,0BAAKC,EAAL,KAAQC,EAAR,wBAAC,eAAmBF,GAApB,kBAAwBC,EAAIC,MAAK,KAC5L3E,UAAU,eAAMoB,EAAUkC,MAAMnG,QAAO,SAAAmH,GAAC,MAAuB,cAAnBA,EAAEvB,OAAOpE,SAAuBpB,KAAI,SAAA+G,GAAC,MAAI,CAACA,EAAEvB,OAAOjC,OAAQwD,EAAEvB,OAAOH,KAAK0B,EAAEvB,OAAOH,KAAKvB,OAAS,GAAG2D,aAAW9C,QAAO,SAACuC,EAAD,0BAAKC,EAAL,KAAQC,EAAR,wBAAC,eAAmBF,GAApB,kBAAwBC,EAAIC,MAAK,KAClM1E,QAAQ,eAAMmB,EAAUkC,MAAMnG,QAAO,SAAAmH,GAAC,MAAuB,YAAnBA,EAAEvB,OAAOpE,SAAqBpB,KAAI,SAAA+G,GAAC,MAAI,CAACA,EAAEvB,OAAOjC,OAAQ,SAAOoB,QAAO,SAACuC,EAAD,0BAAKC,EAAL,KAAQC,EAAR,wBAAC,eAAmBF,GAApB,kBAAwBC,EAAIC,MAAK,KAClJzE,QAAQ,eAAMkB,EAAUkC,MAAMnG,QAAO,SAAAmH,GAAC,MAAuB,YAAnBA,EAAEvB,OAAOpE,SAAqBpB,KAAI,SAAA+G,GAAC,MAAI,CAACA,EAAEvB,OAAOjC,OAAQ,SAAOoB,QAAO,SAACuC,EAAD,0BAAKC,EAAL,KAAQC,EAAR,wBAAC,eAAmBF,GAApB,kBAAwBC,EAAIC,MAAK,KAClJxE,YAAY,eAAMiB,EAAUkC,MAAMnG,QAAO,SAAAmH,GAAC,MAAuB,gBAAnBA,EAAEvB,OAAOpE,SAAyBpB,KAAI,SAAA+G,GAAC,MAAI,CAACA,EAAEvB,OAAOjC,OAAQ,SAAOoB,QAAO,SAACuC,EAAD,0BAAKC,EAAL,KAAQC,EAAR,wBAAC,eAAmBF,GAApB,kBAAwBC,EAAIC,MAAK,MAE5JxF,MAAO,SAIZoD,MAAMF,QAAQC,Q,+BAKX,IAAD,OACP,OACE,4BAEI,IAAI2C,KAAKC,eAAe,QAAS,CAC/BC,KAAM,UACNC,MAAO,QACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,aAAc,UACbC,OAAO,IAAIC,KAAK1I,KAAKC,MAAM8F,OAAO4C,aATzC,OAYG3I,KAAKC,MAAM8F,OAAO6C,YAAYC,cAZjC,SAcI7I,KAAK2B,MAAMgF,UAdf,uBAgBE,uBAAGpE,KAAMvC,KAAKC,MAAM8F,OAAOmB,WAAY7F,MAAOrB,KAAK2B,MAAM+E,aAEpD1G,KAAK2B,MAAMiF,OAAOvC,OACfrE,KAAK2B,MAAM+E,aACV1G,KAAK2B,MAAM+E,aAAe1G,KAAK2B,MAAM+E,YAAYpF,MAAM,EAAG,IAAM,OApB3E,OAyBIwH,OAAOC,KAAKlG,GAAuBtC,KAAI,SAAAwF,GAAM,OAC1C,EAAKpE,MAAM2E,MAAMnG,QAAO,SAAA6I,GAAC,OAAIA,EAAEjD,OAAOpE,QAAUoE,KAAQ1B,OAEnD,kBAAC3D,EAAA,EAAD,CACEC,MAAO,CAAEyF,OAAQ,SACjBvF,QAASgC,EAAsBkD,GAC/B1E,MAAO0E,EAAS,KAAO,EAAKpE,MAAM2E,MAAMnG,QAAO,SAAA6I,GAAC,OAAIA,EAAEjD,OAAOpE,QAAUoE,KAAQ1B,QAC9E,EAAK1C,MAAM2E,MAAMnG,QAAO,SAAA6I,GAAC,OAAIA,EAAEjD,OAAOpE,QAAUoE,KAAQ1B,QAG7D,MAIN,CAAC,EAAG,EAAG,MAAM9D,KAAI,SAAAgH,GAAM,OACpB,EAAK5F,MAAMiF,OAAOzG,QAAO,SAAAqG,GAAC,OAAIA,EAAEe,SAAWA,KAAQlD,OAE9C,kBAAC3D,EAAA,EAAD,CACEC,MAAO,CAAEyF,OAAQ,SACjBvF,QAAqB,OAAX0G,EAAmB,OAAS1E,EAAsB,EAAKiE,mBAAmBS,IACpFlG,MAAO,EAAKyF,mBAAmBS,GAAU,KAAO,EAAK5F,MAAMiF,OAAOzG,QAAO,SAAAqG,GAAC,OAAIA,EAAEe,SAAWA,KAAQlD,QAClG,EAAK1C,MAAMiF,OAAOzG,QAAO,SAAAqG,GAAC,OAAIA,EAAEe,SAAWA,KAAQlD,QAGxD,MAjDV,IAsDKrE,KAAKC,MAAMgJ,SAASC,aACjB,kBAAC,EAAD,CAAO5C,MAAOtG,KAAK2B,MAAM2E,MAAOzC,QAAS,WAAc,IAAIoD,IAAIjH,KAAKC,MAAM8F,OAAOmB,YAAaY,SAAUnE,SAAU3D,KAAKwD,kBAErH,4BAEKxD,KAAK2B,MAAM2E,MAAMnG,QAAO,SAAA6I,GAAC,OAAIA,EAAE1F,KAAKwC,SAASvB,KAAKtD,WAAW,mBAAwC,cAAnB+H,EAAEjD,OAAOpE,SAAuBpB,KAAI,SAAA+C,GAAI,OACzH,kBAAC,EAAD,CAAMA,KAAMA,EAAMO,QAAS,WAAc,IAAIoD,IAAI,EAAKhH,MAAM8F,OAAOmB,YAAaY,SAAUnE,SAAU,EAAKH,2B,GA/K1GjC,IAAMC,WCyEZ2H,E,kDA7Db,WAAYlJ,GAAQ,IAAD,8BACjB,cAAMA,IAfR0B,MAAQ,CACN0B,QAAS,CACPC,KAAM,CACJR,UAAW,GACXC,OAAQ,GACRC,UAAW,GACXC,QAAS,GACTC,QAAS,GACTC,YAAa,IAEfhB,MAAO,KAMT,EAAKqB,gBAAkB,EAAKA,gBAAgBC,KAArB,gBAFN,E,4DAKHJ,GAAU,IAAD,OACvBrD,KAAKsC,UAAS,SAAAX,GACZ,IAAI+B,EAAW,CACbJ,KAAM,CACJR,UAAU,2BAAMnB,EAAM0B,QAAQC,KAAKR,WAAcO,EAAQC,KAAKR,WAC9DC,OAAO,2BAAMpB,EAAM0B,QAAQC,KAAKP,QAAWM,EAAQC,KAAKP,QACxDC,UAAU,2BAAMrB,EAAM0B,QAAQC,KAAKN,WAAcK,EAAQC,KAAKN,WAC9DC,QAAQ,2BAAMtB,EAAM0B,QAAQC,KAAKL,SAAYI,EAAQC,KAAKL,SAC1DC,QAAQ,2BAAMvB,EAAM0B,QAAQC,KAAKJ,SAAYG,EAAQC,KAAKJ,SAC1DC,YAAY,2BAAMxB,EAAM0B,QAAQC,KAAKH,aAAgBE,EAAQC,KAAKH,cAEpEhB,MAAM,2BAAMR,EAAM0B,QAAQlB,OAAUkB,EAAQlB,QAG9C,OADA,EAAKlC,MAAM0D,SAASD,GACb,CAAEL,QAASK,Q,+BAIZ,IAAD,OACP,OACE,4BAEI1D,KAAKC,MAAMmJ,SAAS7I,KAAI,SAACwG,EAASsC,GAAV,OACtB,wBACEzG,IAAKyG,EACL1I,MAAO,CACLyF,OAAQ,aACRkD,QAAS,aACTC,UAAW,OACXC,gBAAiB,QAAU,EAAKvJ,MAAMwJ,SAAS/E,MAAK,SAAAgF,GAAC,OAAIA,EAAE3C,UAAYA,KAAS4C,WAAa,KAC7FC,iBAAkB,YAClBC,mBAAoB,WACpBC,eAAgB,SAEhB/C,EACF,4BAGG,EAAK9G,MAAMwJ,SAASjJ,MAAK,SAAAkJ,GAAC,OAAIA,EAAE3C,UAAYA,GAAuB,YAAZ2C,EAAE/H,SACtD,EAAK1B,MAAMwJ,SAAStJ,QAAO,SAAAuJ,GAAC,OAAIA,EAAE3C,UAAYA,GAAuB,YAAZ2C,EAAE/H,SAAqBpB,KAAI,SAACwF,GAAD,OACpF,kBAAC,EAAD,CAAQA,OAAQA,EAAQnD,IAAKmD,EAAOd,GAAItB,SAAU,EAAKH,gBAAiByF,SAAU,EAAKhJ,MAAMgJ,cAG7F,EAAKhJ,MAAMwJ,SAAStJ,QAAO,SAAAuJ,GAAC,OAAIA,EAAE3C,UAAYA,KAASxG,KAAI,SAACwF,GAAD,OAC3D,kBAAC,EAAD,CAAQA,OAAQA,EAAQnD,IAAKmD,EAAOd,GAAItB,SAAU,EAAKH,gBAAiByF,SAAU,EAAKhJ,MAAMgJ,wB,GAhE1F1H,IAAMC,WC2LduI,E,kDAvJb,WAAY9J,GAAQ,IAAD,8BACjB,cAAMA,IAlBR0B,MAAQ,CACN0B,QAAS,CACPC,KAAM,CACJR,UAAW,GACXC,OAAQ,GACRC,UAAW,GACXC,QAAS,GACTC,QAAS,GACTC,YAAa,IAEfhB,MAAO,IAETiH,SAAU,GACVK,SAAU,GACVO,UAAU,GAKV,EAAKxG,gBAAkB,EAAKA,gBAAgBC,KAArB,gBAFN,E,4DAKHJ,GACdrD,KAAKsC,UAAS,SAAAX,GAAK,MAAK,CACtB0B,QAAS,CACPC,KAAM,CACJR,UAAU,2BAAMnB,EAAM0B,QAAQC,KAAKR,WAAcO,EAAQC,KAAKR,WAC9DC,OAAO,2BAAMpB,EAAM0B,QAAQC,KAAKP,QAAWM,EAAQC,KAAKP,QACxDC,UAAU,2BAAMrB,EAAM0B,QAAQC,KAAKN,WAAcK,EAAQC,KAAKN,WAC9DC,QAAQ,2BAAMtB,EAAM0B,QAAQC,KAAKL,SAAYI,EAAQC,KAAKL,SAC1DC,QAAQ,2BAAMvB,EAAM0B,QAAQC,KAAKJ,SAAYG,EAAQC,KAAKJ,SAC1DC,YAAY,2BAAMxB,EAAM0B,QAAQC,KAAKH,aAAgBE,EAAQC,KAAKH,cAEpEhB,MAAM,2BAAMR,EAAM0B,QAAQlB,OAAUkB,EAAQlB,c,0CAe7B,IAAD,OAClBnC,KAAKsC,UAAS,SAAAX,GAAK,MAAK,CAAEqI,SAAU,EAAK/J,MAAMgK,WAM/C,IAAIC,EAAWC,KAAKC,MAAM,KAAAD,KAAKE,UA9Db,IA+DlBrK,KAAKkK,SAAWI,YAAYtK,KAAKuK,iBAAiB9G,KAAKzD,MAAOkK,K,6CAS9DM,cAAcxK,KAAKkK,Y,yCAGD,IAAD,OACjBtG,MACgC,cAA7B6G,OAAOC,SAAS5C,SACb,sFAAwF9H,KAAKC,MAAM0K,OAAO5I,IAAM,YAChH,0HAA4H/B,KAAKC,MAAM0K,OAAO5I,IAAM,aAEzJkC,MAAK,SAAA2G,GAAyB,OAAIA,EAA0BzG,UAC5DF,MAAK,SAAC4G,GACDA,EAAqBxG,QACvB,EAAK/B,UAAS,SAAAX,GAAK,MAAK,CACtByH,SAAU,YAAI,IAAIlD,IAAI2E,EAAqBtK,KAAI,SAAAmJ,GAAC,OAAIA,EAAE3C,aAAWR,MAAK,SAACjC,EAAGkC,GAAJ,OAAUlC,EAAEuE,cAAciC,cAActE,EAAEqC,kBAChHY,SAAUoB,SAIftF,MAAMF,QAAQC,O,+BAGP,IAAD,OACP,OACE,kBAACyF,EAAA,EAAD,CAAMpK,MAAO,CAAEqK,MAAO,OAAQC,UAAW,SACvC,kBAACF,EAAA,EAAKG,OAAN,KACE,kBAACC,EAAA,EAAUC,OAAX,CAAkBC,GAAI7F,IAAQ3E,QAAQ,OAAOyK,SAAUtL,KAAKC,MAAM0K,OAAO5I,IAAKwJ,QAAS,WACrF,EAAKjJ,UAAS,SAAAX,GAAK,MAAK,CAACqI,UAAWrI,EAAMqI,eAExChK,KAAK2B,MAAMqI,SAAY,kBAAC,IAAD,MAAgB,kBAAC,IAAD,OAGzC,IAAI/B,KAAKC,eAAe,QAAS,CAC/BC,KAAM,UACNC,MAAO,QACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,aAAc,UACbC,OAAO,IAAIC,KAAK1I,KAAKC,MAAM0K,OAAOa,UAAUC,OAdnD,OAiBE,uBAAGlJ,KAAMvC,KAAKC,MAAM0K,OAAOe,KACvB1L,KAAKC,MAAM0K,OAAO5I,IAAIK,UAAU,EAAG,IAGpC0G,OAAOC,KAAK/I,KAAK2B,MAAM0B,QAAQC,MAAM9C,MAAK,SAAAkH,GAAC,OAAKoB,OAAOC,KAAK,EAAKpH,MAAM0B,QAAQC,KAAKoE,IAAIrD,OAAS,KAE5FyE,OAAOC,KAAK/I,KAAK2B,MAAM0B,QAAQC,MAAMnD,QAAO,SAAAuH,GAAC,OAAIoB,OAAOC,KAAK,EAAKpH,MAAM0B,QAAQC,KAAKoE,IAAIrD,OAAS,KAAG9D,KAAI,SAAAmH,GAAC,OACxG,kBAAChH,EAAA,EAAD,CACEC,MAAO,CAAE+E,WAAY,SACrB7E,QAASgC,EAAsB6E,IAC9BoB,OAAOC,KAAK,EAAKpH,MAAM0B,QAAQC,KAAKoE,IAAIrD,WAK7C,kBAACsH,EAAA,EAAD,CACEhL,MAAO,CAAE+E,WAAY,SACrBkG,UAAU,SACVnG,KAAK,KACL5E,QAAQ,SAGlB,kBAAC,IAAD,CACEgL,IAAK7L,KAAKC,MAAM0K,OAAOmB,OAAOC,OAC9BC,IAAKhM,KAAKC,MAAM0K,OAAOmB,OAAOvH,KAC9BlD,MAAOrB,KAAKC,MAAM0K,OAAOmB,OAAOvH,KAChC0H,SAAS,EACTtL,MAAO,CAAEqK,MAAO,OAAQkB,OAAQ,OAAQxG,WAAY,QACpDyG,UAAU,gBACZ,0BAAMA,UAAU,eACZnM,KAAKC,MAAM0K,OAAOmB,OAAOM,WAI5BtD,OAAOC,KAAK/I,KAAK2B,MAAM0B,QAAQlB,OAAOkC,OAEnC,kBAAC0G,EAAA,EAAKsB,KAAN,KAEIvD,OAAOC,KAAK/I,KAAK2B,MAAM0B,QAAQlB,OAAOoE,OAAOhG,KAAI,SAAAsB,GAAI,OACnD,kBAAC2D,EAAA,EAAD,CACE7E,MAAO,CAAE+E,WAAY,SACrB7E,QAAQ,eACR4E,KAAK,MACJ5D,EAJH,IAIS,kBAACnB,EAAA,EAAD,CAAOG,QAAQ,QAAQ,EAAKc,MAAM0B,QAAQlB,MAAMN,SAMjE,GAEJ,kBAACsJ,EAAA,EAAUmB,SAAX,CAAoBhB,SAAUtL,KAAKC,MAAM0K,OAAO5I,KAC9C,kBAACgJ,EAAA,EAAKsB,KAAN,KACE,kBAAC,EAAD,CAAenM,QAASF,KAAKC,MAAM0K,OAAOzK,UAC1C,kBAAC,EAAD,CAAUkJ,SAAUpJ,KAAK2B,MAAMyH,SAAUK,SAAUzJ,KAAK2B,MAAM8H,SAAU9F,SAAU3D,KAAKwD,gBAAiByF,SAAUjJ,KAAKC,MAAMgJ,kB,GApKpH1H,IAAMC,WCoBZ+K,E,uKArBH,IAAD,OACP,OACGvM,KAAKC,MAAMuM,QAAQnI,OAEd,kBAAC8G,EAAA,EAAD,CAAWsB,iBAAkB,MAEzBzM,KAAKC,MAAMuM,QAAQjM,KAAI,SAAAoK,GAAM,OAC3B,kBAAC,EAAD,CAAQA,OAAQA,EAAQ/H,IAAK+H,EAAO5I,IAAKkI,QAAQ,EAA6ChB,SAAU,EAAKhJ,MAAMgJ,eAMzH,yBAAKtI,MAAO,CAAC+L,UAAW,SAAU1B,MAAO,OAAQ1B,QAAS,UACxD,kBAACqC,EAAA,EAAD,CAASC,UAAU,gB,GA1BXrK,IAAMC,W,wCCoJbmL,E,4MAxIbC,QAAU,IAAIC,I,EACdlL,MAAQ,CACN6K,QAAS,GACTvD,SAAU,CACR6D,MAAO,EAAKF,QAAQG,IAAI,SACxB7D,aAAc,EAAK0D,QAAQG,IAAI,kB,kEAcC,OAA9B/M,KAAK4M,QAAQG,IAAI,UACnB/M,KAAK4M,QAAQI,IAAI,SAAS,EAAM,CAAEC,KAAM,MAE1CjN,KAAKkN,aAKLlN,KAAKkK,SAAWI,YAAYtK,KAAKkN,WAAWzJ,KAAKzD,MAD/B,O,6CAKlBwK,cAAcxK,KAAKkK,Y,mCAGP,IAAD,OACXtG,MACgC,cAA7B6G,OAAOC,SAAS5C,SACb,qFACA,0HAEL7D,MAAK,SAAAkJ,GAAwB,OAAIA,EAAyBhJ,UAC1DF,MAAK,SAACmJ,GACDA,EAAc/I,OAChB,EAAK/B,UAAS,SAAAX,GAAK,MAAK,CACtB6K,QAASY,EAAc7M,KAAI,SAAA8M,GAAC,MAAK,CAC/BtL,IAAKsL,EAAEtL,IACP2J,IAAK2B,EAAEC,SACPxB,OAAO,2BAAKuB,EAAE1C,OAAOmB,QAAW,CAAE7G,GAAIoI,EAAEvB,OAAO7G,GAAImH,SAAUiB,EAAEvB,OAAOyB,MAAOxB,OAAQsB,EAAEvB,OAAOnC,aAC9F6B,UAAU,2BAAK6B,EAAE1C,OAAOa,WAAc,CAAEvG,GAAIoI,EAAE7B,UAAUvG,GAAImH,SAAUiB,EAAE7B,UAAU+B,MAAOxB,OAAQsB,EAAE7B,UAAU7B,aAC7GzJ,QAASmN,EAAE1C,OAAOzK,QAAQiB,MAAM,MAAMhB,QAAO,SAAAC,GAAI,MAAa,KAATA,KACrDoN,aAAcH,EAAE1C,OAAO6C,iBAEzBC,OAAQL,EAAc,GAAGrL,QAG3BsD,QAAQC,IAAI8H,MAGf7H,MAAMF,QAAQC,O,+BAGP,IAAD,OACP,OACE,kBAACoI,EAAA,EAAD,CAAWZ,MAAO9M,KAAK2B,MAAMsH,SAAS6D,OACpC,kBAACa,EAAA,EAAD,KACE,wBAAIhN,MAAO,CAAE2I,QAAS,UACpB,kBAAC,IAAD,CAAiB3I,MAAO,CAAEC,YAAa,SAAWgN,KAAMC,MACxD,kBAAC,IAAD,CAAiBlN,MAAO,CAAEC,YAAa,SAAWgN,KAAME,MACxD,kBAAC,IAAD,CAAiBnN,MAAO,CAAEC,YAAa,SAAWgN,KAAMG,MAH1D,8BAOF,kBAACJ,EAAA,EAAD,KACE,kBAACK,EAAA,EAAD,KACE,kBAAC,EAAD,CAASxB,QAASxM,KAAK2B,MAAM6K,QAASiB,OAAQzN,KAAK2B,MAAM8L,OAAQxE,SAAUjJ,KAAK2B,MAAMsH,YAExF,kBAAC+E,EAAA,EAAD,CAAKC,GAAG,KACN,0CAGA,wBAAItN,MAAO,CAAEsK,UAAW,UAJ1B,eAOInC,OAAOC,KAAKlG,GAAuBtC,KAAI,SAAAwF,GAAM,OAC3C,kBAACrF,EAAA,EAAD,CACEC,MAAO,CAAEuN,QAAS,QAAS9H,OAAQ,aACnCvF,QAASgC,EAAsBkD,IAC9BA,MAXT,oBAgBE,6BACA,kBAACP,EAAA,EAAD,CACE7E,MAAO,CAAE+E,WAAY,SACrB7E,QAAQ,eACR4E,KAAK,MAHP,eAIc,kBAAC/E,EAAA,EAAD,CAAOG,QAAQ,QAAf,iBAEd,6BACA,qDAGA,6BACA,kBAACsN,EAAA,EAAKC,MAAN,CACEpN,KAAK,SACLiE,GAAG,eACHoJ,MAAM,iBACNC,QAAStO,KAAK2B,MAAMsH,SAASC,aAC7BqF,SACE,WACE,EAAK3B,QAAQI,IAAI,gBAAkB,EAAKrL,MAAMsH,SAASC,aAAe,CAAE+D,KAAM,MAC9E,EAAK3K,UAAS,SAAAX,GAAK,MAAK,CAACsH,SAAU,CAAEC,cAAevH,EAAMsH,SAASC,aAAc4D,MAAOnL,EAAMsH,SAAS6D,cAI7G,6BACA,kBAACqB,EAAA,EAAKC,MAAN,CACEpN,KAAK,SACLiE,GAAG,QACHoJ,MAAM,QACNC,QAAStO,KAAK2B,MAAMsH,SAAS6D,MAC7ByB,SACE,WACE,EAAK3B,QAAQI,IAAI,SAAW,EAAKrL,MAAMsH,SAAS6D,MAAQ,CAAEG,KAAM,MAChE,EAAK3K,UAAS,SAAAX,GAAK,MAAK,CAACsH,SAAU,CAAE6D,OAAQnL,EAAMsH,SAAS6D,MAAO5D,aAAcvH,EAAMsH,SAASC,4B,GAjIhG3H,IAAMC,WCDJgN,QACW,cAA7B/D,OAAOC,SAAS5C,UAEe,UAA7B2C,OAAOC,SAAS5C,UAEhB2C,OAAOC,SAAS5C,SAASzH,MACvB,2DCXNoO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/K,MAAK,SAAAgL,GACJA,EAAaC,gBAEd3J,OAAM,SAAA4J,GACL9J,QAAQ8J,MAAMA,EAAMjP,c","file":"static/js/main.a1f78467.chunk.js","sourcesContent":["import React from 'react';\nimport Badge from 'react-bootstrap/Badge';\nimport { DashCircleFill, PlusCircleFill } from 'react-bootstrap-icons';\n\nclass CommitMessage extends React.Component {\n  render() {\n    return (\n      <div>\n        {\n          this.props.message.filter(line => (\n            !line.match((new RegExp ('^(include|exclude) (environment|key|pool|region)s: .*$', 'i')))\n            &&\n            !line.match((new RegExp ('^(pool-deploy|overwrite-machine-image|no-ci|no-taskcluster-ci|no-travis-ci)$', 'i')))\n          )).map(line => (\n            <strong>\n              {line}<br />\n            </strong>\n          ))\n        }\n        {\n          (this.props.message.some(line => (\n            line.match(/^(include|exclude) (environment|key|pool|region)s: .*$/i)\n            ||\n            line.match(/^(pool-deploy|overwrite-machine-image|no-ci|no-taskcluster-ci|no-travis-ci)$/i)\n          )))\n            ? (\n                (this.props.message.filter(line => (line.match(/^(pool-deploy|overwrite-machine-image|no-ci|no-taskcluster-ci|no-travis-ci)$/i)))).map(instruction => (\n                  <Badge\n                    style={{ marginRight: '0.7em' }}\n                    variant={(['pool-deploy', 'overwrite-machine-image'].includes(instruction)) ? 'primary' : 'dark'}>\n                    {\n                      (instruction === 'pool-deploy')\n                        ? ''\n                        : (\n                            <span>\n                              <DashCircleFill />\n                              &nbsp;\n                            </span>\n                          )\n                    }\n                    {instruction}\n                  </Badge>\n                ))\n              )\n            : (\n                <Badge variant=\"warning\">\n                  no commit syntax ci instructions\n                </Badge>\n              )\n        }\n        {\n          ['include', 'exclude'].map(inex => (\n            (this.props.message.some(line => line.match((new RegExp ('^' + inex + ' (environment|key|pool|region)s: .*$', 'i')))))\n              ? (\n                  <span>\n                    {\n                      ['environments', 'integrations', 'keys', 'pools', 'regions'].map(type => (\n                        this.props.message.filter(line => line.startsWith(inex + ' ' + type + ': ')).map(line => (\n                          line.replace(inex + ' ' + type + ': ', '').split(', ').map(item => (\n                            <Badge\n                              style={{ marginRight: '0.7em' }}\n                              variant={(inex === 'include') ? 'info' : 'dark'}\n                              title={inex + ' ' + type.slice(0, -1) + ': ' + item}>\n                              {\n                                (inex === 'include')\n                                  ? <PlusCircleFill />\n                                  : <DashCircleFill />\n                              }\n                              &nbsp;{item}\n                            </Badge>\n                          ))\n                        ))\n                      ))\n                    }\n                    <br />\n                  </span>\n                )\n              : ''\n          ))\n        }\n      </div>\n    );\n  }\n}\n\nexport default CommitMessage;\n","import React from 'react'\n\n\nclass Image extends React.Component {\n  re = /^((north|south|east|west|(north-|south-|west-)?central)-us(-2)?)-(.*)-(win.*)-([a-f0-9]{7})-([a-f0-9]{7})$/i;\n  state = {\n    domain: null,\n    pool: null,\n    region: null,\n    sha: {\n      bootstrap: null,\n      disk: null\n    }\n  }\n\n  componentDidMount() {\n    let name = this.props.image.substring(this.props.image.lastIndexOf('/') + 1);\n    let matches = name.match(this.re);\n    this.setState(state => ({\n      domain: matches[5],\n      pool: matches[6],\n      region: matches[1],\n      sha: {\n        bootstrap: matches[8],\n        disk: matches[7]\n      }\n    }));\n  }\n\n  render() {\n    return (\n      <li>\n        <a href={'https://portal.azure.com/#@taskclusteraccountsmozilla.onmicrosoft.com/resource' + this.props.image} target=\"_blank\" rel=\"noopener noreferrer\">\n          {this.state.region}\n          -{this.state.domain}\n          -{this.state.pool}\n          -{this.state.sha.disk}\n          -{this.state.sha.bootstrap}\n        </a>\n      </li>\n    );\n  }\n}\n\nexport default Image;","import React from 'react'\nimport Image from './Image';\n\nclass Images extends React.Component {\n  render() {\n    return (\n      <div>\n        <span>worker manager image deployments:</span>\n        <ul>\n          {\n            this.props.images.map(image => (\n              <Image image={image} key={image} />\n            ))\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Images;","const StatusBadgeVariantMap = {\n  completed: 'success',\n  failed: 'danger',\n  exception: 'warning',\n  running: 'primary',\n  pending: 'info',\n  unscheduled: 'secondary'\n};\nexport default StatusBadgeVariantMap;\n","import React from 'react'\n//import Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport Images from './Images';\nimport StatusBadgeVariantMap from './StatusBadgeVariantMap';\n//import { Server } from 'react-bootstrap-icons';\n\nclass Run extends React.Component {\n  state = {\n    summary: {\n      task: {\n        completed: {},\n        failed: {},\n        exception: {},\n        running: {},\n        pending: {},\n        unscheduled: {}\n      },\n      image: {}\n    },\n    artifacts: [],\n    images: []\n  };\n\n  constructor(props) {\n    super(props);\n    this.appendToSummary = this.appendToSummary.bind(this);\n  }\n\n  appendToSummary(summary) {\n    this.setState(state => {\n      let combined = {\n        task: {\n          completed: { ...state.summary.task.completed, ...summary.task.completed },\n          failed: { ...state.summary.task.failed, ...summary.task.failed },\n          exception: { ...state.summary.task.exception, ...summary.task.exception },\n          running: { ...state.summary.task.running, ...summary.task.running },\n          pending: { ...state.summary.task.pending, ...summary.task.pending },\n          unscheduled: { ...state.summary.task.unscheduled, ...summary.task.unscheduled }\n        },\n        image: { ...state.summary.image, ...summary.image }\n      };\n      this.props.appender(combined);\n      return { summary: combined };\n    });\n  }\n\n  componentDidMount() {\n    fetch(this.props.rootUrl + '/api/queue/v1/task/' + this.props.taskId + '/runs/' + this.props.run.runId + '/artifacts')\n    .then(responseArtifactsApi => responseArtifactsApi.json())\n    .then((container) => {\n      if (container.artifacts && container.artifacts.length) {\n        this.setState(state => ({\n          artifacts: container.artifacts\n        }));\n        if (container.artifacts.some(a => a.name.startsWith('public/') && a.name.endsWith('.json'))) {\n          let artifact = container.artifacts.find(a => a.name.startsWith('public/') && a.name.endsWith('.json'))\n          fetch(this.props.rootUrl + '/api/queue/v1/task/' + this.props.taskId + '/runs/' + this.props.run.runId + '/artifacts/' + artifact.name)\n          .then(responseArtifactApi => responseArtifactApi.json())\n          .then((container) => {\n            if (container.launchConfigs && container.launchConfigs.length) {\n              let imageIds = container.launchConfigs.map(launchConfig => launchConfig.storageProfile.imageReference.id);\n              this.setState(state => ({\n                images: imageIds\n              }));\n              let re = /^((north|south|east|west|(north-|south-|east-|west-)?central)-us(-2)?)-(.*)-(win.*)-([a-f0-9]{7})-([a-f0-9]{7})$/i;\n              this.appendToSummary({\n                task: {\n                  completed: 0,\n                  failed: 0,\n                  exception: 0,\n                  running: 0,\n                  pending: 0,\n                  unscheduled: 0\n                },\n                image: imageIds.reduce(function(a, imageId, i) {\n                  let image = imageId.substring(imageId.lastIndexOf('/') + 1);\n                  let matches = image.match(re);\n                  let pool = matches[5] + '/' + matches[6];\n                  a[pool] = (a[pool] || 0) + 1;\n                  return a;\n                }, {})\n              });\n            } else {\n              console.log(container);\n            }\n          })\n          .catch(console.log);\n        }\n      } else {\n        console.log(container);\n      }\n    })\n    .catch(console.log);\n  }\n\n  render() {\n    return (\n      <li>\n        <Button\n          size=\"sm\"\n          href={this.props.rootUrl + '/tasks/' + this.props.taskId + '/runs/' + this.props.run.runId}\n          style={{ marginLeft: '0.7em' }}\n          variant={'outline-' + StatusBadgeVariantMap[this.props.run.state]}\n          title={'task ' + this.props.taskId + ', run ' + this.props.run.runId + ': ' + this.props.run.state}>\n          {'task ' + this.props.taskId + ', run ' + this.props.run.runId}\n        </Button>\n        {\n          (this.props.run.state === 'completed' && this.state.images.length)\n            ? (<Images images={this.state.images} /> )\n            : ''\n        }\n      </li>\n    );\n  }\n}\n\nexport default Run;\n","import React from 'react'\nimport Run from './Run';\n\nclass Runs extends React.Component {\n  state = {\n    summary: {\n      task: {\n        completed: {},\n        failed: {},\n        exception: {},\n        running: {},\n        pending: {},\n        unscheduled: {}\n      },\n      image: {}\n    }\n  };\n\n  constructor(props) {\n    super(props);\n    this.appendToSummary = this.appendToSummary.bind(this);\n  }\n\n  appendToSummary(summary) {\n    this.setState(state => {\n      let combined = {\n        task: {\n          completed: { ...state.summary.task.completed, ...summary.task.completed },\n          failed: { ...state.summary.task.failed, ...summary.task.failed },\n          exception: { ...state.summary.task.exception, ...summary.task.exception },\n          running: { ...state.summary.task.running, ...summary.task.running },\n          pending: { ...state.summary.task.pending, ...summary.task.pending },\n          unscheduled: { ...state.summary.task.unscheduled, ...summary.task.unscheduled }\n        },\n        image: { ...state.summary.image, ...summary.image }\n      };\n      this.props.appender(combined);\n      return { summary: combined };\n    });\n  }\n\n  render() {\n    return (\n      <ul>\n        {\n          this.props.runs.map(run => (\n            <Run run={run} key={run.runId} taskId={this.props.taskId} rootUrl={this.props.rootUrl} appender={this.appendToSummary} />\n          ))\n        }\n      </ul>\n    );\n  }\n}\n\nexport default Runs;\n","import React from 'react'\nimport Runs from './Runs';\nimport StatusBadgeVariantMap from './StatusBadgeVariantMap';\nimport Badge from 'react-bootstrap/Badge';\n\nclass Task extends React.Component {\n  state = {\n    summary: {\n      task: {\n        completed: {},\n        failed: {},\n        exception: {},\n        running: {},\n        pending: {},\n        unscheduled: {}\n      },\n      image: {}\n    }\n  };\n\n  constructor(props) {\n    super(props);\n    this.appendToSummary = this.appendToSummary.bind(this);\n  }\n\n  appendToSummary(summary) {\n    this.setState(state => {\n      let combined = {\n        task: {\n          completed: { ...state.summary.task.completed, ...summary.task.completed },\n          failed: { ...state.summary.task.failed, ...summary.task.failed },\n          exception: { ...state.summary.task.exception, ...summary.task.exception },\n          running: { ...state.summary.task.running, ...summary.task.running },\n          pending: { ...state.summary.task.pending, ...summary.task.pending },\n          unscheduled: { ...state.summary.task.unscheduled, ...summary.task.unscheduled }\n        },\n        image: { ...state.summary.image, ...summary.image }\n      };\n      this.props.appender(combined);\n      return { summary: combined };\n    });\n  }\n\n  render() {\n    return (\n      <li>\n        {this.props.task.task.metadata.name}\n        &nbsp;\n        <a href={this.props.rootUrl + '/tasks/' + this.props.task.status.taskId} title={this.props.task.status.taskId}>\n          {this.props.task.status.taskId.substring(0, 7)}...\n        </a>\n        {\n          Array.from(new Set(this.props.task.status.runs.map(r => r.state))).map(state => (\n            <Badge\n              style={{ margin: '0 1px' }}\n              variant={StatusBadgeVariantMap[state]}\n              title={state + ': ' + this.props.task.status.runs.filter(r => r.state === state).length}>\n              {this.props.task.status.runs.filter(r => r.state === state).length}\n            </Badge>\n          ))\n        }\n        <Runs runs={this.props.task.status.runs} taskId={this.props.task.status.taskId} rootUrl={this.props.rootUrl} appender={this.appendToSummary} />\n      </li>\n    );\n  }\n}\n\nexport default Task;\n","import React from 'react'\nimport Task from './Task';\n\nclass Tasks extends React.Component {\n  state = {\n    summary: {\n      task: {\n        completed: {},\n        failed: {},\n        exception: {},\n        running: {},\n        pending: {},\n        unscheduled: {}\n      },\n      image: {}\n    }\n  };\n\n  constructor(props) {\n    super(props);\n    this.appendToSummary = this.appendToSummary.bind(this);\n  }\n\n  appendToSummary(summary) {\n    this.setState(state => {\n      let combined = {\n        task: {\n          completed: { ...state.summary.task.completed, ...summary.task.completed },\n          failed: { ...state.summary.task.failed, ...summary.task.failed },\n          exception: { ...state.summary.task.exception, ...summary.task.exception },\n          running: { ...state.summary.task.running, ...summary.task.running },\n          pending: { ...state.summary.task.pending, ...summary.task.pending },\n          unscheduled: { ...state.summary.task.unscheduled, ...summary.task.unscheduled }\n        },\n        image: { ...state.summary.image, ...summary.image }\n      };\n      this.props.appender(combined);\n      return { summary: combined };\n    });\n  }\n\n  render() {\n    return (\n      <ul>\n        {\n          this.props.tasks.sort((a, b) => ((a.task.metadata.name < b.task.metadata.name) ? -1 : (a.task.metadata.name > b.task.metadata.name) ? 1 : 0)).map(task => (\n            <Task task={task} key={task.status.taskId} rootUrl={this.props.rootUrl} appender={this.appendToSummary} />\n          ))\n        }\n      </ul>\n    );\n  }\n}\n\nexport default Tasks;\n","import React from 'react'\nimport Task from './Task';\nimport Tasks from './Tasks';\nimport StatusBadgeVariantMap from './StatusBadgeVariantMap';\nimport Badge from 'react-bootstrap/Badge';\n\nclass Status extends React.Component {\n  state = {\n    summary: {\n      task: {\n        completed: {},\n        failed: {},\n        exception: {},\n        running: {},\n        pending: {},\n        unscheduled: {}\n      },\n      image: {}\n    },\n    taskGroupId: null,\n    taskCount: 0,\n    tasks: [],\n    builds: [],\n    travisApiResponse: {}\n  };\n  travisBuildResults = [\n    'completed',\n    'failed',\n  ];\n\n  constructor(props) {\n    super(props);\n    this.appendToSummary = this.appendToSummary.bind(this);\n  }\n\n  appendToSummary(summary) {\n    this.setState(state => {\n      let combined = {\n        task: {\n          completed: { ...state.summary.task.completed, ...summary.task.completed },\n          failed: { ...state.summary.task.failed, ...summary.task.failed },\n          exception: { ...state.summary.task.exception, ...summary.task.exception },\n          running: { ...state.summary.task.running, ...summary.task.running },\n          pending: { ...state.summary.task.pending, ...summary.task.pending },\n          unscheduled: { ...state.summary.task.unscheduled, ...summary.task.unscheduled }\n        },\n        image: { ...state.summary.image, ...summary.image }\n      };\n      this.props.appender(combined);\n      return { summary: combined };\n    });\n  }\n\n  componentDidMount() {\n    switch (this.props.status.context) {\n      case 'continuous-integration/travis-ci/push':\n        let pathname = (new URL(this.props.status.target_url)).pathname;\n        let buildId = pathname.substring(pathname.lastIndexOf('/') + 1);\n        this.setState(state => ({\n          taskGroupId: buildId\n        }));\n        let buildsApi = 'https://api.travis-ci.org/repos/mozilla-platform-ops/cloud-image-builder/builds/' + buildId;\n        fetch(buildsApi)\n        .then(responseBuildsApi => responseBuildsApi.json())\n        .then((container) => {\n          if (container.matrix) {\n            this.setState(state => ({\n              taskCount: container.matrix.length,\n              builds: container.matrix,\n              travisApiResponse: container\n            }));\n            this.appendToSummary({\n              task: {\n                completed: { ...container.matrix.filter(x => x.result === 0).map(x => [x.id, x.finished_at]).reduce((o, [k, v]) => ({...o, [k]: v}), {}) },\n                failed: { ...container.matrix.filter(x => x.result !== null && x.result !== 0).map(x => [x.id, x.finished_at]).reduce((o, [k, v]) => ({...o, [k]: v}), {}) },\n                exception: {},\n                running: {},\n                pending: { ...container.matrix.filter(x => x.result === null).map(x => [x.id, x.finished_at]).reduce((o, [k, v]) => ({...o, [k]: v}), {}) },\n                unscheduled: {}\n              },\n              image: []\n            });\n          }\n        })\n        .catch(console.log);\n        break;\n      default:\n        let taskGroupHtmlUrl = new URL(this.props.status.target_url);\n        let taskGroupId = this.props.status.target_url.substring(this.props.status.target_url.lastIndexOf('/') + 1);\n        this.setState(state => ({\n          taskGroupId: taskGroupId\n        }));\n        let tasksApi = 'https://' + taskGroupHtmlUrl.hostname + '/api/queue/v1/task-group/' + taskGroupId + '/list';\n        fetch(tasksApi)\n        .then(responseTasksApi => responseTasksApi.json())\n        .then((container) => {\n          if (container.tasks && container.tasks.length) {\n            this.setState(state => ({\n              taskCount: container.tasks.length,\n              tasks: container.tasks//.sort((a, b) => a.task.metadata.name.localeCompare(b.task.metadata.name))\n            }));\n            this.appendToSummary({\n              task: {\n                completed: { ...container.tasks.filter(x => x.status.state === 'completed').map(x => [x.status.taskId, x.status.runs[x.status.runs.length - 1].resolved]).reduce((o, [k, v]) => ({...o, [k]: v}), {}) },\n                failed: { ...container.tasks.filter(x => x.status.state === 'failed').map(x => [x.status.taskId, x.status.runs[x.status.runs.length - 1].resolved]).reduce((o, [k, v]) => ({...o, [k]: v}), {}) },\n                exception: { ...container.tasks.filter(x => x.status.state === 'exception').map(x => [x.status.taskId, x.status.runs[x.status.runs.length - 1].resolved]).reduce((o, [k, v]) => ({...o, [k]: v}), {}) },\n                running: { ...container.tasks.filter(x => x.status.state === 'running').map(x => [x.status.taskId, null]).reduce((o, [k, v]) => ({...o, [k]: v}), {}) },\n                pending: { ...container.tasks.filter(x => x.status.state === 'pending').map(x => [x.status.taskId, null]).reduce((o, [k, v]) => ({...o, [k]: v}), {}) },\n                unscheduled: { ...container.tasks.filter(x => x.status.state === 'unscheduled').map(x => [x.status.taskId, null]).reduce((o, [k, v]) => ({...o, [k]: v}), {}) },\n              },\n              image: []\n            });\n          }\n        })\n        .catch(console.log);\n        break;\n    }\n  }\n\n  render() {\n    return (\n      <li>\n        {\n          new Intl.DateTimeFormat('en-GB', {\n            year: 'numeric',\n            month: 'short',\n            day: '2-digit',\n            hour: 'numeric',\n            minute: 'numeric',\n            timeZoneName: 'short'\n          }).format(new Date(this.props.status.updated_at))\n        }\n        &nbsp;\n        {this.props.status.description.toLowerCase()}\n        &nbsp;\n        ({this.state.taskCount} tasks in group\n        &nbsp;\n        <a href={this.props.status.target_url} title={this.state.taskGroupId}>\n          {\n            (this.state.builds.length)\n              ? this.state.taskGroupId\n              : (this.state.taskGroupId && this.state.taskGroupId.slice(0, 7)) + '...'\n          }\n        </a>\n        &nbsp;\n        {\n          Object.keys(StatusBadgeVariantMap).map(status => (\n            (this.state.tasks.filter(t => t.status.state === status).length)\n              ? (\n                  <Badge\n                    style={{ margin: '0 1px' }}\n                    variant={StatusBadgeVariantMap[status]}\n                    title={status + ': ' + this.state.tasks.filter(t => t.status.state === status).length}>\n                    {this.state.tasks.filter(t => t.status.state === status).length}\n                  </Badge>\n                )\n              : ''\n          ))\n        }\n        {\n          [0, 1, null].map(result => (\n            (this.state.builds.filter(b => b.result === result).length)\n              ? (\n                  <Badge\n                    style={{ margin: '0 1px' }}\n                    variant={(result === null) ? 'info' : StatusBadgeVariantMap[this.travisBuildResults[result]]}\n                    title={this.travisBuildResults[result] + ': ' + this.state.builds.filter(b => b.result === result).length}>\n                    {this.state.builds.filter(b => b.result === result).length}\n                  </Badge>\n                )\n              : ''\n          ))\n        }\n        )\n        {\n          (this.props.settings.showAllTasks)\n            ? <Tasks tasks={this.state.tasks} rootUrl={'https://' + (new URL(this.props.status.target_url)).hostname} appender={this.appendToSummary} />\n            : (\n                <ul>\n                  {\n                    (this.state.tasks.filter(t => t.task.metadata.name.startsWith('04 :: generate') && t.status.state === 'completed').map(task => (\n                      <Task task={task} rootUrl={'https://' + (new URL(this.props.status.target_url)).hostname} appender={this.appendToSummary} />\n                    )))\n                  }\n                </ul>\n              )\n        }\n      </li>\n    );\n  }\n}\n\nexport default Status;\n","import React from 'react'\nimport Status from './Status';\n\nclass Statuses extends React.Component {\n  state = {\n    summary: {\n      task: {\n        completed: {},\n        failed: {},\n        exception: {},\n        running: {},\n        pending: {},\n        unscheduled: {}\n      },\n      image: {}\n    }\n  };\n\n  constructor(props) {\n    super(props);\n    this.appendToSummary = this.appendToSummary.bind(this);\n  }\n\n  appendToSummary(summary) {\n    this.setState(state => {\n      let combined = {\n        task: {\n          completed: { ...state.summary.task.completed, ...summary.task.completed },\n          failed: { ...state.summary.task.failed, ...summary.task.failed },\n          exception: { ...state.summary.task.exception, ...summary.task.exception },\n          running: { ...state.summary.task.running, ...summary.task.running },\n          pending: { ...state.summary.task.pending, ...summary.task.pending },\n          unscheduled: { ...state.summary.task.unscheduled, ...summary.task.unscheduled }\n        },\n        image: { ...state.summary.image, ...summary.image }\n      };\n      this.props.appender(combined);\n      return { summary: combined };\n    });\n  }\n\n  render() {\n    return (\n      <ul>\n        {\n          this.props.contexts.map((context, cI) => (\n            <li\n              key={cI}\n              style={{\n                margin: '10px 0 0 0',\n                padding: '0 0 0 40px',\n                listStyle: 'none',\n                backgroundImage: 'url(\"' + this.props.statuses.find(s => s.context === context).avatar_url + '\")',\n                backgroundRepeat: 'no-repeat',\n                backgroundPosition: 'left top',\n                backgroundSize: '30px'\n              }}>\n              { context }\n              <ul>\n              {\n                // only show pending statuses if there are no others (eg: failed/completed)\n                (this.props.statuses.some(s => s.context === context && s.state !== 'pending'))\n                  ? this.props.statuses.filter(s => s.context === context && s.state !== 'pending').map((status) => (\n                    <Status status={status} key={status.id} appender={this.appendToSummary} settings={this.props.settings} />\n                  ))\n                  // todo: add a reducer below to remove duplicate pending statuses\n                  : this.props.statuses.filter(s => s.context === context).map((status) => (\n                    <Status status={status} key={status.id} appender={this.appendToSummary} settings={this.props.settings} />\n                  ))\n              }\n              </ul>\n            </li>\n          ))\n        }\n      </ul>\n    );\n  }\n}\n\nexport default Statuses;\n","import React from 'react'\n\nimport Card from 'react-bootstrap/Card';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\nimport Spinner from 'react-bootstrap/Spinner';\n\nimport CommitMessage from './CommitMessage';\nimport Statuses from './Statuses';\nimport StatusBadgeVariantMap from './StatusBadgeVariantMap';\n//import { useInterval } from './useInterval';\nimport { CaretDown, CaretRight } from 'react-bootstrap-icons';\n\nconst minIntervalMs = 5000; // minimum random refresh interval in milliseconds\nconst maxIntervalMs = 60000; // maximum random refresh interval in milliseconds\n\nclass Commit extends React.Component {\n\n  interval;\n\n  state = {\n    summary: {\n      task: {\n        completed: {},\n        failed: {},\n        exception: {},\n        running: {},\n        pending: {},\n        unscheduled: {}\n      },\n      image: {}\n    },\n    contexts: [],\n    statuses: [],\n    expanded: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.appendToSummary = this.appendToSummary.bind(this);\n  }\n\n  appendToSummary(summary) {\n    this.setState(state => ({\n      summary: {\n        task: {\n          completed: { ...state.summary.task.completed, ...summary.task.completed },\n          failed: { ...state.summary.task.failed, ...summary.task.failed },\n          exception: { ...state.summary.task.exception, ...summary.task.exception },\n          running: { ...state.summary.task.running, ...summary.task.running },\n          pending: { ...state.summary.task.pending, ...summary.task.pending },\n          unscheduled: { ...state.summary.task.unscheduled, ...summary.task.unscheduled }\n        },\n        image: { ...state.summary.image, ...summary.image }\n      }\n    }));\n  }\n\n  /*\n  note: to run locally, a cors proxy is required.\n\n  to install a local cors proxy:\n  $ sudo npm install -g local-cors-proxy\n\n  to run a local cors proxy with authenticated github requests:\n  $ lcp --proxyUrl https://grenade:$(pass github/grenade/token/cloud-image-builder)@api.github.com\n  */\n\n  componentDidMount() {\n    this.setState(state => ({ expanded: this.props.expand }));\n    \n\n    // refresh data in this component at a random interval, in\n    // order to prevent all components updating simultaneously\n    // https://blog.stvmlbrn.com/2019/02/20/automatically-refreshing-data-in-react.html\n    let interval = Math.floor(Math.random() * (maxIntervalMs - minIntervalMs)) + minIntervalMs;\n    this.interval = setInterval(this.getBuildStatuses.bind(this), interval);\n    /*\n    useInterval(async () => {\n      this.getBuildStatuses();\n    }, interval);\n    */\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getBuildStatuses() {\n    fetch(\n      (window.location.hostname === 'localhost')\n        ? 'http://localhost:8010/proxy/repos/mozilla-platform-ops/cloud-image-builder/commits/' + this.props.commit.sha + '/statuses'\n        : 'https://grenade-cors-proxy.herokuapp.com/https://api.github.com/repos/mozilla-platform-ops/cloud-image-builder/commits/' + this.props.commit.sha + '/statuses'\n    )\n    .then(responseGithubApiStatuses => responseGithubApiStatuses.json())\n    .then((githubCommitStatuses) => {\n      if (githubCommitStatuses.length) {\n        this.setState(state => ({\n          contexts: [...new Set(githubCommitStatuses.map(s => s.context))].sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase())),\n          statuses: githubCommitStatuses//.filter(s => s.state !== 'pending')\n        }));\n      }\n    })\n    .catch(console.log);\n  }\n\n  render() {\n    return (\n      <Card style={{ width: '100%', marginTop: '10px' }}>\n        <Card.Header>\n          <Accordion.Toggle as={Button} variant=\"link\" eventKey={this.props.commit.sha} onClick={() => {\n            this.setState(state => ({expanded: !state.expanded}))\n          }}>\n            {(this.state.expanded) ? <CaretDown /> : <CaretRight />}\n          </Accordion.Toggle>\n          {\n            new Intl.DateTimeFormat('en-GB', {\n              year: 'numeric',\n              month: 'short',\n              day: '2-digit',\n              hour: 'numeric',\n              minute: 'numeric',\n              timeZoneName: 'short'\n            }).format(new Date(this.props.commit.committer.date))\n          }\n          &nbsp;\n          <a href={this.props.commit.url}>\n            { this.props.commit.sha.substring(0, 7) }\n          </a>\n          {\n            (Object.keys(this.state.summary.task).some(k => (Object.keys(this.state.summary.task[k]).length > 0)))\n              ? (\n                  Object.keys(this.state.summary.task).filter(k => Object.keys(this.state.summary.task[k]).length > 0).map(k => (\n                    <Badge\n                      style={{ marginLeft: '0.3em' }}\n                      variant={StatusBadgeVariantMap[k]}>\n                      {Object.keys(this.state.summary.task[k]).length}\n                    </Badge>\n                  ))\n                )\n              : (\n                  <Spinner\n                    style={{ marginLeft: '0.3em' }}\n                    animation=\"border\"\n                    size=\"sm\"\n                    variant=\"info\" />\n                )\n          }\n          <Image\n            src={this.props.commit.author.avatar}\n            alt={this.props.commit.author.name}\n            title={this.props.commit.author.name}\n            rounded={true}\n            style={{ width: '30px', height: '30px', marginLeft: '10px' }}\n            className=\"float-right\" />\n          <span className=\"float-right\">\n            { this.props.commit.author.username }\n          </span>\n        </Card.Header>\n        {\n          (Object.keys(this.state.summary.image).length)\n          ? (\n              <Card.Body>\n                {\n                  Object.keys(this.state.summary.image).sort().map(pool => (\n                    <Button\n                      style={{ marginLeft: '0.3em' }}\n                      variant=\"outline-info\"\n                      size=\"sm\">\n                      {pool} <Badge variant=\"info\">{this.state.summary.image[pool]}</Badge>\n                    </Button>\n                  ))\n                }\n              </Card.Body>\n            )\n          : ''\n        }\n        <Accordion.Collapse eventKey={this.props.commit.sha}>\n          <Card.Body>\n            <CommitMessage message={this.props.commit.message} />\n            <Statuses contexts={this.state.contexts} statuses={this.state.statuses} appender={this.appendToSummary} settings={this.props.settings} />\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    );\n  }\n}\n\nexport default Commit;\n","import React from 'react'\nimport Commit from './Commit';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Spinner from 'react-bootstrap/Spinner';\n\nclass Commits extends React.Component {\n  /*\n  constructor(props) {\n    super(props);\n    this.state = {\n      defaultActiveKey: props.latest\n    };\n  }\n  componentDidMount() {\n    this.setState(state => ({ defaultActiveKey: (this.props.commits && this.props.commits.length) ? this.props.commits[0].sha : null }));\n  }\n  */\n  render() {\n    return (\n      (this.props.commits.length)\n        ? (\n            <Accordion defaultActiveKey={null/*this.props.latest*/}>\n              {\n                this.props.commits.map(commit => (\n                  <Commit commit={commit} key={commit.sha} expand={false/*(commit.sha === this.props.latest)*/} settings={this.props.settings} />\n                ))\n              }\n            </Accordion>\n          )\n        : (\n            <div style={{textAlign: 'center', width: '100%', padding: '100px'}}>\n              <Spinner animation=\"border\" />\n            </div>\n          )\n    );\n  }\n}\n\nexport default Commits;\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCloud, faImage, faHammer } from '@fortawesome/free-solid-svg-icons'\nimport Commits from './Commits';\nimport Badge from  'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Cookies from 'universal-cookie';\nimport StatusBadgeVariantMap from './StatusBadgeVariantMap';\n\nclass App extends React.Component {\n\n  interval;\n\n  cookies = new Cookies();\n  state = {\n    commits: [],\n    settings: {\n      fluid: this.cookies.get('fluid'),\n      showAllTasks: this.cookies.get('showAllTasks')\n    }\n  };\n  /*\n  note: to run locally, a cors proxy is required.\n\n  to install a local cors proxy:\n  $ sudo npm install -g local-cors-proxy\n\n  to run a local cors proxy with authenticated github requests:\n  $ lcp --proxyUrl https://grenade:$(pass github/grenade/token/cloud-image-builder)@api.github.com\n  */\n\n  componentDidMount() {\n    if (this.cookies.get('fluid') === null) {\n      this.cookies.set('fluid', true, { path: '/' });\n    }\n    this.getCommits();\n\n    // refresh commit list every 5 minutes\n    // https://blog.stvmlbrn.com/2019/02/20/automatically-refreshing-data-in-react.html\n    let intervalMs = (5 * 60 * 1000);\n    this.interval = setInterval(this.getCommits.bind(this), intervalMs);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getCommits() {\n    fetch(\n      (window.location.hostname === 'localhost')\n        ? 'http://localhost:8010/proxy/repos/mozilla-platform-ops/cloud-image-builder/commits'\n        : 'https://grenade-cors-proxy.herokuapp.com/https://api.github.com/repos/mozilla-platform-ops/cloud-image-builder/commits'\n    )\n    .then(responseGithubApiCommits => responseGithubApiCommits.json())\n    .then((githubCommits) => {\n      if (githubCommits.length) {\n        this.setState(state => ({\n          commits: githubCommits.map(c => ({\n            sha: c.sha,\n            url: c.html_url,\n            author: {...c.commit.author, ...{ id: c.author.id, username: c.author.login, avatar: c.author.avatar_url }},\n            committer: {...c.commit.committer, ...{ id: c.committer.id, username: c.committer.login, avatar: c.committer.avatar_url }},\n            message: c.commit.message.split('\\n').filter(line => line !== ''),\n            verification: c.commit.verification\n          })),\n          latest: githubCommits[0].sha\n        }));\n      } else {\n        console.log(githubCommits)\n      }\n    })\n    .catch(console.log);\n  }\n\n  render() {\n    return (\n      <Container fluid={this.state.settings.fluid}>\n        <Row>\n          <h1 style={{ padding: '0 1em' }}>\n            <FontAwesomeIcon style={{ marginRight: '0.4em' }} icon={faCloud} />\n            <FontAwesomeIcon style={{ marginRight: '0.4em' }} icon={faImage} />\n            <FontAwesomeIcon style={{ marginRight: '0.4em' }} icon={faHammer} />\n            recent commits and builds\n          </h1>\n        </Row>\n        <Row>\n          <Col>\n            <Commits commits={this.state.commits} latest={this.state.latest} settings={this.state.settings} />\n          </Col>\n          <Col sm=\"2\">\n            <strong>\n              legend\n            </strong>\n            <br style={{ marginTop: '20px' }} />\n            task status:\n            {\n              Object.keys(StatusBadgeVariantMap).map(status => (\n                <Badge\n                  style={{ display: 'block', margin: '10px 20px' }}\n                  variant={StatusBadgeVariantMap[status]}>\n                  {status}\n                </Badge>\n              ))\n            }\n            image deployment:\n            <br />\n            <Button\n              style={{ marginLeft: '0.3em' }}\n              variant=\"outline-info\"\n              size=\"sm\">\n              worker pool <Badge variant=\"info\">region count</Badge>\n            </Button>\n            <hr />\n            <strong>\n              display settings:\n            </strong>\n            <br />\n            <Form.Check \n              type=\"switch\"\n              id=\"showAllTasks\"\n              label=\"show all tasks\"\n              checked={this.state.settings.showAllTasks}\n              onChange={\n                () => {\n                  this.cookies.set('showAllTasks', (!this.state.settings.showAllTasks), { path: '/' });\n                  this.setState(state => ({settings: { showAllTasks: !state.settings.showAllTasks, fluid: state.settings.fluid }}));\n                }\n              }\n            />\n            <br />\n            <Form.Check \n              type=\"switch\"\n              id=\"fluid\"\n              label=\"fluid\"\n              checked={this.state.settings.fluid}\n              onChange={\n                () => {\n                  this.cookies.set('fluid', (!this.state.settings.fluid), { path: '/' });\n                  this.setState(state => ({settings: { fluid: !state.settings.fluid, showAllTasks: state.settings.showAllTasks }}));\n                }\n              }\n            />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}