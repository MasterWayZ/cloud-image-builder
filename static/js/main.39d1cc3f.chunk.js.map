{"version":3,"sources":["CommitMessage.js","Image.js","Images.js","StatusBadgeVariantMap.js","Run.js","Runs.js","Task.js","Tasks.js","Status.js","Statuses.js","Commit.js","Commits.js","App.js","serviceWorker.js","index.js"],"names":["CommitMessage","this","props","message","filter","line","match","RegExp","map","some","instruction","Badge","style","marginRight","variant","inex","type","startsWith","replace","split","item","title","slice","React","Component","Image","re","state","domain","pool","region","sha","bootstrap","disk","matches","image","substring","lastIndexOf","setState","Images","images","key","StatusBadgeVariantMap","completed","failed","exception","running","pending","unscheduled","Run","summary","task","artifacts","appendToSummary","bind","combined","appender","fetch","rootUrl","taskId","run","runId","then","responseArtifactsApi","json","container","length","a","name","endsWith","artifact","find","responseArtifactApi","launchConfigs","imageIds","launchConfig","storageProfile","imageReference","id","reduce","imageId","i","console","log","catch","Button","size","href","marginLeft","Runs","runs","Task","metadata","status","Tasks","tasks","Status","taskGroupId","taskCount","builds","travisApiResponse","travisBuildResults","context","pathname","URL","target_url","buildId","responseBuildsApi","matrix","x","result","taskGroupHtmlUrl","tasksApi","hostname","responseTasksApi","Intl","DateTimeFormat","year","month","day","hour","minute","timeZoneName","format","Date","updated_at","description","toLowerCase","Object","keys","t","margin","b","settings","showAllTasks","Statuses","contexts","cI","statuses","s","Commit","expanded","expand","window","location","commit","responseGithubApiStatuses","githubCommitStatuses","Set","sort","localeCompare","Card","width","marginTop","Header","Accordion","Toggle","as","eventKey","onClick","committer","date","url","k","src","author","avatar","alt","rounded","height","className","username","Body","Collapse","Commits","defaultActiveKey","commits","App","cookies","Cookies","fluid","get","responseGithubApiCommits","githubCommits","c","html_url","login","avatar_url","verification","latest","Container","Row","Col","sm","Form","Check","label","checked","onChange","set","path","Boolean","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.39d1cc3f.chunk.js","sourcesContent":["import React from 'react';\nimport Badge from 'react-bootstrap/Badge';\nimport { DashCircleFill, PlusCircleFill } from 'react-bootstrap-icons';\n\nclass CommitMessage extends React.Component {\n  render() {\n    return (\n      <div>\n        {\n          this.props.message.filter(line => (\n            !line.match((new RegExp ('^(include|exclude) (environment|key|pool|region)s: .*$', 'i')))\n            &&\n            !line.match((new RegExp ('^(pool-deploy|no-ci|no-taskcluster-ci|no-travis-ci)$', 'i')))\n          )).map(line => (\n            <strong>\n              {line}<br />\n            </strong>\n          ))\n        }\n        {\n          (this.props.message.some(line => (\n            line.match(/^(include|exclude) (environment|key|pool|region)s: .*$/i)\n            ||\n            line.match(/^(pool-deploy|no-ci|no-taskcluster-ci|no-travis-ci)$/i)\n          )))\n            ? (\n                (this.props.message.filter(line => (line.match(/^(pool-deploy|no-ci|no-taskcluster-ci|no-travis-ci)$/i)))).map(instruction => (\n                  <Badge\n                    style={{ marginRight: '0.7em' }}\n                    variant={(instruction === 'pool-deploy') ? 'primary' : 'dark'}>\n                    {\n                      (instruction === 'pool-deploy')\n                        ? ''\n                        : (\n                            <span>\n                              <DashCircleFill />\n                              &nbsp;\n                            </span>\n                          )\n                    }\n                    {instruction}\n                  </Badge>\n                ))\n              )\n            : (\n                <Badge variant=\"warning\">\n                  no commit syntax ci instructions\n                </Badge>\n              )\n        }\n        {\n          ['include', 'exclude'].map(inex => (\n            (this.props.message.some(line => line.match((new RegExp ('^' + inex + ' (environment|key|pool|region)s: .*$', 'i')))))\n              ? (\n                  <span>\n                    {\n                      ['environments', 'integrations', 'keys', 'pools', 'regions'].map(type => (\n                        this.props.message.filter(line => line.startsWith(inex + ' ' + type + ': ')).map(line => (\n                          line.replace(inex + ' ' + type + ': ', '').split(', ').map(item => (\n                            <Badge\n                              style={{ marginRight: '0.7em' }}\n                              variant={(inex === 'include') ? 'info' : 'dark'}\n                              title={inex + ' ' + type.slice(0, -1) + ': ' + item}>\n                              {\n                                (inex === 'include')\n                                  ? <PlusCircleFill />\n                                  : <DashCircleFill />\n                              }\n                              &nbsp;{item}\n                            </Badge>\n                          ))\n                        ))\n                      ))\n                    }\n                    <br />\n                  </span>\n                )\n              : ''\n          ))\n        }\n      </div>\n    );\n  }\n}\n\nexport default CommitMessage;\n","import React from 'react'\n\n\nclass Image extends React.Component {\n  re = /^((north|south|east|west|(north-|south-|west-)?central)-us(-2)?)-(.*)-(win.*)-([a-f0-9]{7})-([a-f0-9]{7})$/i;\n  state = {\n    domain: null,\n    pool: null,\n    region: null,\n    sha: {\n      bootstrap: null,\n      disk: null\n    }\n  }\n\n  componentDidMount() {\n    let name = this.props.image.substring(this.props.image.lastIndexOf('/') + 1);\n    let matches = name.match(this.re);\n    this.setState(state => ({\n      domain: matches[5],\n      pool: matches[6],\n      region: matches[1],\n      sha: {\n        bootstrap: matches[8],\n        disk: matches[7]\n      }\n    }));\n  }\n\n  render() {\n    return (\n      <li>\n        {this.state.region}\n        -{this.state.domain}\n        -{this.state.pool}\n        -{this.state.sha.disk}\n        -{this.state.sha.bootstrap}\n      </li>\n    );\n  }\n}\n\nexport default Image;","import React from 'react'\nimport Image from './Image';\n\nclass Images extends React.Component {\n  render() {\n    return (\n      <div>\n        <span>worker manager image deployments:</span>\n        <ul>\n          {\n            this.props.images.map(image => (\n              <Image image={image} key={image} />\n            ))\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Images;","const StatusBadgeVariantMap = {\n  completed: 'success',\n  failed: 'danger',\n  exception: 'warning',\n  running: 'primary',\n  pending: 'info',\n  unscheduled: 'secondary'\n};\nexport default StatusBadgeVariantMap;\n","import React from 'react'\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport Images from './Images';\nimport StatusBadgeVariantMap from './StatusBadgeVariantMap';\n//import { Server } from 'react-bootstrap-icons';\n\nclass Run extends React.Component {\n  state = {\n    summary: {\n      task: {\n        completed: 0,\n        failed: 0,\n        exception: 0,\n        running: 0,\n        pending: 0,\n        unscheduled: 0\n      },\n      image: {}\n    },\n    artifacts: [],\n    images: []\n  };\n\n  constructor(props) {\n    super(props);\n    this.appendToSummary = this.appendToSummary.bind(this);\n  }\n\n  appendToSummary(summary) {\n    this.setState(state => {\n      let combined = {\n        task: {\n          completed: state.summary.task.completed + summary.task.completed,\n          failed: state.summary.task.failed + summary.task.failed,\n          exception: state.summary.task.exception + summary.task.exception,\n          running: state.summary.task.running + summary.task.running,\n          pending: state.summary.task.pending + summary.task.pending,\n          unscheduled: state.summary.task.unscheduled + summary.task.unscheduled\n        },\n        image: { ...state.summary.image, ...summary.image }\n      };\n      this.props.appender(combined);\n      return { summary: combined };\n    });\n  }\n\n  componentDidMount() {\n    fetch(this.props.rootUrl + '/api/queue/v1/task/' + this.props.taskId + '/runs/' + this.props.run.runId + '/artifacts')\n    .then(responseArtifactsApi => responseArtifactsApi.json())\n    .then((container) => {\n      if (container.artifacts && container.artifacts.length) {\n        this.setState(state => ({\n          artifacts: container.artifacts\n        }));\n        if (container.artifacts.some(a => a.name.startsWith('public/') && a.name.endsWith('.json'))) {\n          let artifact = container.artifacts.find(a => a.name.startsWith('public/') && a.name.endsWith('.json'))\n          fetch(this.props.rootUrl + '/api/queue/v1/task/' + this.props.taskId + '/runs/' + this.props.run.runId + '/artifacts/' + artifact.name)\n          .then(responseArtifactApi => responseArtifactApi.json())\n          .then((container) => {\n            if (container.launchConfigs && container.launchConfigs.length) {\n              let imageIds = container.launchConfigs.map(launchConfig => launchConfig.storageProfile.imageReference.id);\n              this.setState(state => ({\n                images: imageIds\n              }));\n              let re = /^((north|south|east|west|(north-|south-|east-|west-)?central)-us(-2)?)-(.*)-(win.*)-([a-f0-9]{7})-([a-f0-9]{7})$/i;\n              this.appendToSummary({\n                task: {\n                  completed: 0,\n                  failed: 0,\n                  exception: 0,\n                  running: 0,\n                  pending: 0,\n                  unscheduled: 0\n                },\n                image: imageIds.reduce(function(a, imageId, i) {\n                  let image = imageId.substring(imageId.lastIndexOf('/') + 1);\n                  let matches = image.match(re);\n                  let pool = matches[5] + '/' + matches[6];\n                  a[pool] = (a[pool] || 0) + 1;\n                  return a;\n                }, {})\n              });\n            } else {\n              console.log(container);\n            }\n          })\n          .catch(console.log);\n        }\n      } else {\n        console.log(container);\n      }\n    })\n    .catch(console.log);\n  }\n\n  render() {\n    return (\n      <li>\n        <Button\n          size=\"sm\"\n          href={this.props.rootUrl + '/tasks/' + this.props.taskId + '/runs/' + this.props.run.runId}\n          style={{ marginLeft: '0.7em' }}\n          variant={'outline-' + StatusBadgeVariantMap[this.props.run.state]}\n          title={'task ' + this.props.taskId + ', run ' + this.props.run.runId + ': ' + this.props.run.state}>\n          {'task ' + this.props.taskId + ', run ' + this.props.run.runId}\n        </Button>\n        {\n          (this.props.run.state === 'completed' && this.state.images.length)\n            ? (<Images images={this.state.images} /> )\n            : ''\n        }\n      </li>\n    );\n  }\n}\n\nexport default Run;\n","import React from 'react'\nimport Run from './Run';\n\nclass Runs extends React.Component {\n  state = {\n    summary: {\n      task: {\n        completed: 0,\n        failed: 0,\n        exception: 0,\n        running: 0,\n        pending: 0,\n        unscheduled: 0\n      },\n      image: {}\n    }\n  };\n\n  constructor(props) {\n    super(props);\n    this.appendToSummary = this.appendToSummary.bind(this);\n  }\n\n  appendToSummary(summary) {\n    this.setState(state => {\n      let combined = {\n        task: {\n          completed: state.summary.task.completed + summary.task.completed,\n          failed: state.summary.task.failed + summary.task.failed,\n          exception: state.summary.task.exception + summary.task.exception,\n          running: state.summary.task.running + summary.task.running,\n          pending: state.summary.task.pending + summary.task.pending,\n          unscheduled: state.summary.task.unscheduled + summary.task.unscheduled\n        },\n        image: { ...state.summary.image, ...summary.image }\n      };\n      this.props.appender(combined);\n      return { summary: combined };\n    });\n  }\n\n  render() {\n    return (\n      <ul>\n        {\n          this.props.runs.map(run => (\n            <Run run={run} key={run.runId} taskId={this.props.taskId} rootUrl={this.props.rootUrl} appender={this.appendToSummary} />\n          ))\n        }\n      </ul>\n    );\n  }\n}\n\nexport default Runs;\n","import React from 'react'\nimport Runs from './Runs';\n\nclass Task extends React.Component {\n  state = {\n    summary: {\n      task: {\n        completed: 0,\n        failed: 0,\n        exception: 0,\n        running: 0,\n        pending: 0,\n        unscheduled: 0\n      },\n      image: {}\n    }\n  };\n\n  constructor(props) {\n    super(props);\n    this.appendToSummary = this.appendToSummary.bind(this);\n  }\n\n  appendToSummary(summary) {\n    this.setState(state => {\n      let combined = {\n        task: {\n          completed: state.summary.task.completed + summary.task.completed,\n          failed: state.summary.task.failed + summary.task.failed,\n          exception: state.summary.task.exception + summary.task.exception,\n          running: state.summary.task.running + summary.task.running,\n          pending: state.summary.task.pending + summary.task.pending,\n          unscheduled: state.summary.task.unscheduled + summary.task.unscheduled\n        },\n        image: { ...state.summary.image, ...summary.image }\n      };\n      this.props.appender(combined);\n      return { summary: combined };\n    });\n  }\n\n  render() {\n    return (\n      <li>\n        {this.props.task.task.metadata.name}\n        &nbsp;\n        <a href={this.props.rootUrl + '/tasks/' + this.props.task.status.taskId} title={this.props.task.status.taskId}>\n          {this.props.task.status.taskId.substring(0, 7)}...\n        </a>\n        <Runs runs={this.props.task.status.runs} taskId={this.props.task.status.taskId} rootUrl={this.props.rootUrl} appender={this.appendToSummary} />\n      </li>\n    );\n  }\n}\n\nexport default Task;\n","import React from 'react'\nimport Task from './Task';\n\nclass Tasks extends React.Component {\n  state = {\n    summary: {\n      task: {\n        completed: 0,\n        failed: 0,\n        exception: 0,\n        running: 0,\n        pending: 0,\n        unscheduled: 0\n      },\n      image: {}\n    }\n  };\n\n  constructor(props) {\n    super(props);\n    this.appendToSummary = this.appendToSummary.bind(this);\n  }\n\n  appendToSummary(summary) {\n    this.setState(state => {\n      let combined = {\n        task: {\n          completed: state.summary.task.completed + summary.task.completed,\n          failed: state.summary.task.failed + summary.task.failed,\n          exception: state.summary.task.exception + summary.task.exception,\n          running: state.summary.task.running + summary.task.running,\n          pending: state.summary.task.pending + summary.task.pending,\n          unscheduled: state.summary.task.unscheduled + summary.task.unscheduled\n        },\n        image: { ...state.summary.image, ...summary.image }\n      };\n      this.props.appender(combined);\n      return { summary: combined };\n    });\n  }\n\n  render() {\n    return (\n      <ul>\n        {\n          this.props.tasks.map(task => (\n            <Task task={task} key={task.status.taskId} rootUrl={this.props.rootUrl} appender={this.appendToSummary} />\n          ))\n        }\n      </ul>\n    );\n  }\n}\n\nexport default Tasks;\n","import React from 'react'\nimport Task from './Task';\nimport Tasks from './Tasks';\nimport StatusBadgeVariantMap from './StatusBadgeVariantMap';\nimport Badge from 'react-bootstrap/Badge';\n\nclass Status extends React.Component {\n  state = {\n    summary: {\n      task: {\n        completed: 0,\n        failed: 0,\n        exception: 0,\n        running: 0,\n        pending: 0,\n        unscheduled: 0\n      },\n      image: {}\n    },\n    taskGroupId: null,\n    taskCount: 0,\n    tasks: [],\n    builds: [],\n    travisApiResponse: {}\n  };\n  travisBuildResults = [\n    'completed',\n    'failed',\n  ];\n\n  constructor(props) {\n    super(props);\n    this.appendToSummary = this.appendToSummary.bind(this);\n  }\n\n  appendToSummary(summary) {\n    this.setState(state => {\n      let combined = {\n        task: {\n          completed: state.summary.task.completed + summary.task.completed,\n          failed: state.summary.task.failed + summary.task.failed,\n          exception: state.summary.task.exception + summary.task.exception,\n          running: state.summary.task.running + summary.task.running,\n          pending: state.summary.task.pending + summary.task.pending,\n          unscheduled: state.summary.task.unscheduled + summary.task.unscheduled\n        },\n        image: { ...state.summary.image, ...summary.image }\n      };\n      this.props.appender(combined);\n      return { summary: combined };\n    });\n  }\n\n  componentDidMount() {\n    switch (this.props.status.context) {\n      case 'continuous-integration/travis-ci/push':\n        let pathname = (new URL(this.props.status.target_url)).pathname;\n        let buildId = pathname.substring(pathname.lastIndexOf('/') + 1);\n        this.setState(state => ({\n          taskGroupId: buildId\n        }));\n        let buildsApi = 'https://api.travis-ci.org/repos/mozilla-platform-ops/cloud-image-builder/builds/' + buildId;\n        fetch(buildsApi)\n        .then(responseBuildsApi => responseBuildsApi.json())\n        .then((container) => {\n          if (container.matrix) {\n            this.setState(state => ({\n              taskCount: container.matrix.length,\n              builds: container.matrix,\n              travisApiResponse: container\n            }));\n            this.appendToSummary({\n              task: {\n                completed: container.matrix.filter(x => this.travisBuildResults[x.result] === 'completed').length,\n                failed: container.matrix.filter(x => this.travisBuildResults[x.result] === 'failed').length,\n                exception: 0,\n                running: 0,\n                pending: 0,\n                unscheduled: 0\n              },\n              image: []\n            });\n          }\n        })\n        .catch(console.log);\n        break;\n      default:\n        let taskGroupHtmlUrl = new URL(this.props.status.target_url);\n        let taskGroupId = this.props.status.target_url.substring(this.props.status.target_url.lastIndexOf('/') + 1);\n        this.setState(state => ({\n          taskGroupId: taskGroupId\n        }));\n        let tasksApi = 'https://' + taskGroupHtmlUrl.hostname + '/api/queue/v1/task-group/' + taskGroupId + '/list';\n        fetch(tasksApi)\n        .then(responseTasksApi => responseTasksApi.json())\n        .then((container) => {\n          if (container.tasks && container.tasks.length) {\n            this.setState(state => ({\n              taskCount: container.tasks.length,\n              tasks: container.tasks//.sort((a, b) => a.task.metadata.name.localeCompare(b.task.metadata.name))\n            }));\n            this.appendToSummary({\n              task: {\n                completed: container.tasks.filter(x => x.status.state === 'completed').length,\n                failed: container.tasks.filter(x => x.status.state === 'failed').length,\n                exception: container.tasks.filter(x => x.status.state === 'exception').length,\n                running: container.tasks.filter(x => x.status.state === 'running').length,\n                pending: container.tasks.filter(x => x.status.state === 'pending').length,\n                unscheduled: container.tasks.filter(x => x.status.state === 'unscheduled').length\n              },\n              image: []\n            });\n          }\n        })\n        .catch(console.log);\n        break;\n    }\n  }\n\n  render() {\n    return (\n      <li>\n        {\n          new Intl.DateTimeFormat('en-GB', {\n            year: 'numeric',\n            month: 'short',\n            day: '2-digit',\n            hour: 'numeric',\n            minute: 'numeric',\n            timeZoneName: 'short'\n          }).format(new Date(this.props.status.updated_at))\n        }\n        &nbsp;\n        {this.props.status.description.toLowerCase()}\n        &nbsp;\n        ({this.state.taskCount} tasks in group\n        &nbsp;\n        <a href={this.props.status.target_url} title={this.state.taskGroupId}>\n          {\n            (this.state.builds.length)\n              ? this.state.taskGroupId\n              : (this.state.taskGroupId && this.state.taskGroupId.slice(0, 7)) + '...'\n          }\n        </a>\n        &nbsp;\n        {\n          Object.keys(StatusBadgeVariantMap).map(status => (\n            (this.state.tasks.filter(t => t.status.state === status).length)\n              ? (\n                  <Badge\n                    style={{ margin: '0 1px' }}\n                    variant={StatusBadgeVariantMap[status]}\n                    title={status + ': ' + this.state.tasks.filter(t => t.status.state === status).length}>\n                    {this.state.tasks.filter(t => t.status.state === status).length}\n                  </Badge>\n                )\n              : ''\n          ))\n        }\n        {\n          [0, 1].map(result => (\n            (this.state.builds.filter(b => b.result === result).length)\n              ? (\n                  <Badge\n                    style={{ margin: '0 1px' }}\n                    variant={StatusBadgeVariantMap[this.travisBuildResults[result]]}\n                    title={this.travisBuildResults[result] + ': ' + this.state.builds.filter(b => b.result === result).length}>\n                    {this.state.builds.filter(b => b.result === result).length}\n                  </Badge>\n                )\n              : ''\n          ))\n        }\n        )\n        {\n          (this.props.settings.showAllTasks)\n            ? <Tasks tasks={this.state.tasks} rootUrl={'https://' + (new URL(this.props.status.target_url)).hostname} appender={this.appendToSummary} />\n            : (\n                <ul>\n                  {\n                    (this.state.tasks.filter(t => t.task.metadata.name.startsWith('04 :: generate') && t.status.state === 'completed').map(task => (\n                      <Task task={task} rootUrl={'https://' + (new URL(this.props.status.target_url)).hostname} appender={this.appendToSummary} />\n                    )))\n                  }\n                </ul>\n              )\n        }\n      </li>\n    );\n  }\n}\n\nexport default Status;\n","import React from 'react'\nimport Status from './Status';\n\nclass Statuses extends React.Component {\n  state = {\n    summary: {\n      task: {\n        completed: 0,\n        failed: 0,\n        exception: 0,\n        running: 0,\n        pending: 0,\n        unscheduled: 0\n      },\n      image: {}\n    }\n  };\n\n  constructor(props) {\n    super(props);\n    this.appendToSummary = this.appendToSummary.bind(this);\n  }\n\n  appendToSummary(summary) {\n    this.setState(state => {\n      let combined = {\n        task: {\n          completed: state.summary.task.completed + summary.task.completed,\n          failed: state.summary.task.failed + summary.task.failed,\n          exception: state.summary.task.exception + summary.task.exception,\n          running: state.summary.task.running + summary.task.running,\n          pending: state.summary.task.pending + summary.task.pending,\n          unscheduled: state.summary.task.unscheduled + summary.task.unscheduled\n        },\n        image: { ...state.summary.image, ...summary.image }\n      };\n      this.props.appender(combined);\n      return { summary: combined };\n    });\n  }\n\n  render() {\n    return (\n      <ul>\n        {\n          this.props.contexts.map((context, cI) => (\n            <li key={cI}>\n              { context }\n              <ul>\n              {\n                // only show pending statuses if there are no others (eg: failed/completed)\n                (this.props.statuses.some(s => s.context === context && s.state !== 'pending'))\n                  ? this.props.statuses.filter(s => s.context === context && s.state !== 'pending').map((status) => (\n                    <Status status={status} key={status.id} appender={this.appendToSummary} settings={this.props.settings} />\n                  ))\n                  : this.props.statuses.filter(s => s.context === context).map((status) => (\n                    <Status status={status} key={status.id} appender={this.appendToSummary} settings={this.props.settings} />\n                  ))\n              }\n              </ul>\n            </li>\n          ))\n        }\n      </ul>\n    );\n  }\n}\n\nexport default Statuses;\n","import React from 'react'\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\nimport CommitMessage from './CommitMessage';\nimport Statuses from './Statuses';\nimport StatusBadgeVariantMap from './StatusBadgeVariantMap';\nimport { CaretDown, CaretRight } from 'react-bootstrap-icons';\n\nclass Commit extends React.Component {\n  state = {\n    summary: {\n      task: {\n        completed: 0,\n        failed: 0,\n        exception: 0,\n        running: 0,\n        pending: 0,\n        unscheduled: 0\n      },\n      image: {}\n    },\n    contexts: [],\n    statuses: [],\n    expanded: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.appendToSummary = this.appendToSummary.bind(this);\n  }\n\n  appendToSummary(summary) {\n    this.setState(state => ({\n      summary: {\n        task: {\n          completed: state.summary.task.completed + summary.task.completed,\n          failed: state.summary.task.failed + summary.task.failed,\n          exception: state.summary.task.exception + summary.task.exception,\n          running: state.summary.task.running + summary.task.running,\n          pending: state.summary.task.pending + summary.task.pending,\n          unscheduled: state.summary.task.unscheduled + summary.task.unscheduled\n        },\n        image: { ...state.summary.image, ...summary.image }\n      }\n    }));\n  }\n\n  /*\n  note: to run locally, a cors proxy is required.\n\n  to install a local cors proxy:\n  $ sudo npm install -g local-cors-proxy\n\n  to run a local cors proxy with authenticated github requests:\n  $ lcp --proxyUrl https://grenade:$(pass github/grenade/token/cloud-image-builder)@api.github.com\n  */\n\n  componentDidMount() {\n    this.setState(state => ({ expanded: this.props.expand }));\n    fetch(\n      (window.location.hostname === 'localhost')\n        ? 'http://localhost:8010/proxy/repos/mozilla-platform-ops/cloud-image-builder/commits/' + this.props.commit.sha + '/statuses'\n        : 'https://grenade-cors-proxy.herokuapp.com/https://api.github.com/repos/mozilla-platform-ops/cloud-image-builder/commits/' + this.props.commit.sha + '/statuses'\n    )\n    .then(responseGithubApiStatuses => responseGithubApiStatuses.json())\n    .then((githubCommitStatuses) => {\n      if (githubCommitStatuses.length) {\n        this.setState(state => ({\n          contexts: [...new Set(githubCommitStatuses.map(s => s.context))].sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase())),\n          statuses: githubCommitStatuses//.filter(s => s.state !== 'pending')\n        }));\n      }\n    })\n    .catch(console.log);\n  }\n\n  render() {\n    return (\n      <Card style={{ width: '100%', marginTop: '10px' }}>\n        <Card.Header>\n          <Accordion.Toggle as={Button} variant=\"link\" eventKey={this.props.commit.sha} onClick={() => {\n            this.setState(state => ({expanded: !state.expanded}))\n          }}>\n            {(this.state.expanded) ? <CaretDown /> : <CaretRight />}\n          </Accordion.Toggle>\n          {\n            new Intl.DateTimeFormat('en-GB', {\n              year: 'numeric',\n              month: 'short',\n              day: '2-digit',\n              hour: 'numeric',\n              minute: 'numeric',\n              timeZoneName: 'short'\n            }).format(new Date(this.props.commit.committer.date))\n          }\n          &nbsp;\n          <a href={this.props.commit.url}>\n            { this.props.commit.sha.substring(0, 7) }\n          </a>\n          {\n            Object.keys(this.state.summary.task).filter(k => this.state.summary.task[k] > 0).map(k => (\n              <Badge\n                style={{ marginLeft: '0.3em' }}\n                variant={StatusBadgeVariantMap[k]}>\n                {this.state.summary.task[k]}\n              </Badge>\n            ))\n          }\n          <Image\n            src={this.props.commit.author.avatar}\n            alt={this.props.commit.author.name}\n            title={this.props.commit.author.name}\n            rounded={true}\n            style={{ width: '30px', height: '30px', marginLeft: '10px' }}\n            className=\"float-right\" />\n          <span className=\"float-right\">\n            { this.props.commit.author.username }\n          </span>\n        </Card.Header>\n        {\n          (Object.keys(this.state.summary.image).length)\n          ? (\n              <Card.Body>\n                {\n                  Object.keys(this.state.summary.image).sort().map(pool => (\n                    <Button\n                      style={{ marginLeft: '0.3em' }}\n                      variant=\"outline-info\"\n                      size=\"sm\">\n                      {pool} <Badge variant=\"info\">{this.state.summary.image[pool]}</Badge>\n                    </Button>\n                  ))\n                }\n              </Card.Body>\n            )\n          : ''\n        }\n        <Accordion.Collapse eventKey={this.props.commit.sha}>\n          <Card.Body>\n            <CommitMessage message={this.props.commit.message} />\n            <Statuses contexts={this.state.contexts} statuses={this.state.statuses} appender={this.appendToSummary} settings={this.props.settings} />\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    );\n  }\n}\n\nexport default Commit;\n","import React from 'react'\nimport Commit from './Commit';\nimport Accordion from 'react-bootstrap/Accordion';\n\nclass Commits extends React.Component {\n  /*\n  constructor(props) {\n    super(props);\n    this.state = {\n      defaultActiveKey: props.latest\n    };\n  }\n  componentDidMount() {\n    this.setState(state => ({ defaultActiveKey: (this.props.commits && this.props.commits.length) ? this.props.commits[0].sha : null }));\n  }\n  */\n  render() {\n    return (\n      <Accordion defaultActiveKey={null/*this.props.latest*/}>\n        {\n          this.props.commits.map(commit => (\n            <Commit commit={commit} key={commit.sha} expand={false/*(commit.sha === this.props.latest)*/} settings={this.props.settings} />\n          ))\n        }\n      </Accordion>\n    );\n  }\n}\n\nexport default Commits;\n","import React from 'react'\nimport Commits from './Commits';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Cookies from 'universal-cookie';\nimport Badge from  'react-bootstrap/Badge';\nimport StatusBadgeVariantMap from './StatusBadgeVariantMap';\n\nclass App extends React.Component {\n  cookies = new Cookies();\n  state = {\n    commits: [],\n    settings: {\n      fluid: (this.cookies.get('fluid') !== null && this.cookies.get('fluid')),\n      showAllTasks: this.cookies.get('showAllTasks')\n    }\n  };\n  /*\n  note: to run locally, a cors proxy is required.\n\n  to install a local cors proxy:\n  $ sudo npm install -g local-cors-proxy\n\n  to run a local cors proxy with authenticated github requests:\n  $ lcp --proxyUrl https://grenade:$(pass github/grenade/token/cloud-image-builder)@api.github.com\n  */\n\n  componentDidMount() {\n    fetch(\n      (window.location.hostname === 'localhost')\n        ? 'http://localhost:8010/proxy/repos/mozilla-platform-ops/cloud-image-builder/commits'\n        : 'https://grenade-cors-proxy.herokuapp.com/https://api.github.com/repos/mozilla-platform-ops/cloud-image-builder/commits'\n    )\n    .then(responseGithubApiCommits => responseGithubApiCommits.json())\n    .then((githubCommits) => {\n      if (githubCommits.length) {\n        this.setState(state => ({\n          commits: githubCommits.map(c => ({\n            sha: c.sha,\n            url: c.html_url,\n            author: {...c.commit.author, ...{ id: c.author.id, username: c.author.login, avatar: c.author.avatar_url }},\n            committer: {...c.commit.committer, ...{ id: c.committer.id, username: c.committer.login, avatar: c.committer.avatar_url }},\n            message: c.commit.message.split('\\n').filter(line => line !== ''),\n            verification: c.commit.verification\n          })),\n          latest: githubCommits[0].sha\n        }));\n      } else {\n        console.log(githubCommits)\n      }\n    })\n    .catch(console.log);\n  }\n\n  render() {\n    return (\n      <Container fluid={this.state.settings.fluid}>\n        <Row>\n          <h1>recent cloud-image-builder commits and builds</h1>\n        </Row>\n        <Row>\n          <Col>\n            <Commits commits={this.state.commits} latest={this.state.latest} settings={this.state.settings} />\n          </Col>\n          <Col sm=\"2\">\n            <strong>\n              legend:\n            </strong>\n            <br />\n            {\n              Object.keys(StatusBadgeVariantMap).map(status => (\n                <Badge\n                  style={{ marginLeft: '0.3em' }}\n                  variant={StatusBadgeVariantMap[status]}>\n                  {status}\n                </Badge>\n              ))\n            }\n            <hr />\n            <strong>\n              display settings:\n            </strong>\n            <br />\n            <Form.Check \n              type=\"switch\"\n              id=\"showAllTasks\"\n              label=\"show all tasks\"\n              checked={this.state.settings.showAllTasks}\n              onChange={\n                () => {\n                  this.cookies.set('showAllTasks', (!this.state.settings.showAllTasks), { path: '/' });\n                  this.setState(state => ({settings: { showAllTasks: !state.settings.showAllTasks, fluid: state.settings.fluid }}));\n                }\n              }\n            />\n            <br />\n            <Form.Check \n              type=\"switch\"\n              id=\"fluid\"\n              label=\"fluid\"\n              checked={this.state.settings.fluid}\n              onChange={\n                () => {\n                  this.cookies.set('fluid', (!this.state.settings.fluid), { path: '/' });\n                  this.setState(state => ({settings: { fluid: !state.settings.fluid, showAllTasks: state.settings.showAllTasks }}));\n                }\n              }\n            />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}