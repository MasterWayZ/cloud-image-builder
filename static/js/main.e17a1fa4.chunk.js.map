{"version":3,"sources":["CommitMessage.js","Image.js","Images.js","InstanceLogs.js","Screenshots.js","StatusBadgeVariantMap.js","Run.js","Runs.js","Task.js","Tasks.js","Status.js","Statuses.js","Commit.js","Commits.js","App.js","serviceWorker.js","index.js"],"names":["CommitMessage","this","props","message","filter","line","match","RegExp","map","lI","key","href","target","rel","replace","some","instruction","Badge","style","marginRight","variant","includes","inex","type","startsWith","split","item","title","slice","React","Component","Image","re","state","domain","pool","region","sha","bootstrap","disk","matches","image","substring","lastIndexOf","setState","Images","images","InstanceLogs","logs","log","name","contentType","url","taskId","runId","Screenshots","screenshots","thumbnailPosition","window","innerWidth","galleryHeight","galleryWidth","updateDimensions","addEventListener","screenshot","alt","pop","reverse","join","dt","Intl","DateTimeFormat","year","month","day","hour","minute","timeZoneName","format","Date","original","originalAlt","originalTitle","thumbnail","thumbnailAlt","thumbnailTitle","removeEventListener","width","minHeight","items","startIndex","length","showIndex","StatusBadgeVariantMap","completed","failed","exception","running","pending","unscheduled","Run","summary","task","artifacts","unattend","appendToSummary","bind","combined","appender","fetch","rootUrl","run","then","responseArtifactsApi","json","container","a","endsWith","response","text","artifact","find","responseArtifactApi","launchConfigs","imageIds","launchConfig","storageProfile","imageReference","id","reduce","imageId","i","catch","console","Button","size","marginLeft","taskName","language","a11yDark","showLineNumbers","customStyle","maxHeight","fontSize","loading","Spinner","animation","Runs","runs","Task","metadata","listStyleType","margin","padding","status","Array","from","Set","r","Tasks","tasks","platforms","t","sort","Tabs","defaultActiveKey","platform","Tab","eventKey","b","platformRegions","platformRegion","TaskGroupPrefixMap","Status","taskGroupId","taskCount","builds","travisApiResponse","travisBuildResults","context","pathname","URL","target_url","buildId","responseBuildsApi","matrix","x","result","finished_at","o","k","v","taskGroupHtmlUrl","tasksApi","hostname","responseTasksApi","resolved","marginTop","className","updated_at","description","toLowerCase","Object","keys","rI","taskGroupPrefix","settings","Statuses","contexts","cI","height","src","statuses","s","avatar_url","Commit","expanded","expand","interval","Math","floor","random","setInterval","getBuildStatuses","clearInterval","location","commit","responseGithubApiStatuses","githubCommitStatuses","localeCompare","Card","Header","Accordion","Toggle","as","onClick","committer","date","author","avatar","rounded","username","Body","Collapse","Commits","commits","textAlign","App","cookies","Cookies","fluid","undefined","get","limit","set","path","sameSite","getCommits","responseGithubApiCommits","githubCommits","c","html_url","login","verification","latest","Container","Row","icon","faCloud","faImage","faHammer","Col","sm","display","defaultValue","min","max","onChange","commitLimit","marginBottom","Form","Check","label","checked","Boolean","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.e17a1fa4.chunk.js","sourcesContent":["import React from 'react';\nimport Badge from 'react-bootstrap/Badge';\nimport { DashCircleFill, PlusCircleFill } from 'react-bootstrap-icons';\n\nclass CommitMessage extends React.Component {\n  render() {\n    return (\n      <div>\n        {\n          this.props.message.filter(line => (\n            !line.match((new RegExp ('^(include|exclude) (environment|key|pool|region)s: .*$', 'i')))\n            &&\n            !line.match((new RegExp ('^(pool-deploy|overwrite-disk-image|overwrite-machine-image|disable-cleanup|purge-taskcluster-resources|no-ci|no-taskcluster-ci|no-travis-ci)$', 'i')))\n          )).map((line, lI) => (\n            (lI === 0)\n              ? (line.match(/bug ([0-9]{5,8})/i)) ? <span key={lI}><a href={'https://bugzilla.mozilla.org/show_bug.cgi?id=' + line.match(/bug ([0-9]{5,8})/i)[1] } target=\"_blank\" rel=\"noopener noreferrer\">{line.match(/bug ([0-9]{5,8})/i)[0]}</a> {line.replace(line.match(/bug ([0-9]{5,8})/i)[0], '')}<br /></span> : <strong key={lI}>{line}<br /></strong>\n              : (line.match(/bug ([0-9]{5,8})/i)) ? <span key={lI}><a href={'https://bugzilla.mozilla.org/show_bug.cgi?id=' + line.match(/bug ([0-9]{5,8})/i)[1] } target=\"_blank\" rel=\"noopener noreferrer\">{line.match(/bug ([0-9]{5,8})/i)[0]}</a> {line.replace(line.match(/bug ([0-9]{5,8})/i)[0], '')}<br /></span> : <span key={lI}>{line}<br /></span>\n          ))\n        }\n        {\n          (this.props.message.some(line => (\n            line.match(/^(include|exclude) (environment|key|pool|region)s: .*$/i)\n            ||\n            line.match(/^(pool-deploy|overwrite-disk-image|overwrite-machine-image|disable-cleanup|purge-taskcluster-resources|no-ci|no-taskcluster-ci|no-travis-ci)$/i)\n          )))\n            ? (\n                (this.props.message.filter(line => (line.match(/^(pool-deploy|overwrite-disk-image|overwrite-machine-image|disable-cleanup|purge-taskcluster-resources|no-ci|no-taskcluster-ci|no-travis-ci)$/i)))).map(instruction => (\n                  <Badge\n                    key={instruction}\n                    style={{ marginRight: '0.7em' }}\n                    variant={(['pool-deploy', 'overwrite-disk-image', 'overwrite-machine-image', 'disable-cleanup', 'purge-taskcluster-resources'].includes(instruction)) ? 'primary' : 'dark'}>\n                    {instruction}\n                  </Badge>\n                ))\n              )\n            : (\n                <Badge variant=\"warning\">\n                  no commit syntax ci instructions\n                </Badge>\n              )\n        }\n        {\n          ['include', 'exclude'].map(inex => (\n            (this.props.message.some(line => line.match((new RegExp ('^' + inex + ' (environment|key|pool|region)s: .*$', 'i')))))\n              ? (\n                  <span key={inex}>\n                    {\n                      ['environments', 'integrations', 'keys', 'pools', 'regions'].map(type => (\n                        this.props.message.filter(line => line.startsWith(inex + ' ' + type + ': ')).map((line, lI) => (\n                          line.replace(inex + ' ' + type + ': ', '').split(', ').map(item => (\n                            <Badge\n                              key={lI}\n                              style={{ marginRight: '0.7em' }}\n                              variant={(inex === 'include') ? 'info' : 'dark'}\n                              title={inex + ' ' + type.slice(0, -1) + ': ' + item}>\n                              {\n                                (inex === 'include')\n                                  ? <PlusCircleFill />\n                                  : <DashCircleFill />\n                              }\n                              &nbsp;{item}\n                            </Badge>\n                          ))\n                        ))\n                      ))\n                    }\n                    <br />\n                  </span>\n                )\n              : ''\n          ))\n        }\n      </div>\n    );\n  }\n}\n\nexport default CommitMessage;\n","import React from 'react'\n\n\nclass Image extends React.Component {\n  re = /^((north|south|east|west|(north-|south-|west-)?central)-us(-2)?)-(.*)-(win.*)-([a-f0-9]{7})-([a-f0-9]{7})$/i;\n  state = {\n    domain: null,\n    pool: null,\n    region: null,\n    sha: {\n      bootstrap: null,\n      disk: null\n    }\n  }\n\n  componentDidMount() {\n    let name = this.props.image.substring(this.props.image.lastIndexOf('/') + 1);\n    let matches = name.match(this.re);\n    this.setState(state => ({\n      domain: matches[5],\n      pool: matches[6],\n      region: matches[1],\n      sha: {\n        bootstrap: matches[8],\n        disk: matches[7]\n      }\n    }));\n  }\n\n  render() {\n    return (\n      <li>\n        <a href={'https://portal.azure.com/#@taskclusteraccountsmozilla.onmicrosoft.com/resource' + this.props.image} target=\"_blank\" rel=\"noopener noreferrer\">\n          {this.state.region}\n          -{this.state.domain}\n          -{this.state.pool}\n          -{this.state.sha.disk}\n          -{this.state.sha.bootstrap}\n        </a>\n      </li>\n    );\n  }\n}\n\nexport default Image;","import React from 'react'\nimport Image from './Image';\n\nclass Images extends React.Component {\n  render() {\n    return (\n      <div>\n        <span>worker manager image deployments:</span>\n        <ul>\n          {\n            this.props.images.map(image => (\n              <Image image={image} key={image} />\n            ))\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Images;","import React from 'react';\n\nclass InstanceLogs extends React.Component {\n  state = {\n    logs: []\n  };\n\n  componentDidMount() {\n    this.setState(state => ({\n      logs: this.props.logs.map(log => ({\n        name: log.name,\n        contentType: log.contentType,\n        url: ('https://artifacts.tcstage.mozaws.net/' + this.props.taskId + '/' + this.props.runId + '/' + log.name)\n      }))\n    }));\n  }\n\n  render() {\n    return (\n      <ul>\n        {\n          this.state.logs.map(log => (\n            <li key={log.name}>\n              <a href={log.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                {log.name}\n              </a>\n            </li>\n          ))\n        }\n      </ul>\n    );\n  }\n}\n\nexport default InstanceLogs;","import React from 'react';\nimport ImageGallery from 'react-image-gallery';\n//import Screenshot from './Screenshot';\n\nclass Screenshots extends React.Component {\n  state = {\n    screenshots: [],\n    thumbnailPosition: (window.innerWidth < 960) ? 'bottom' : 'left',\n    galleryHeight: (window.innerWidth < 960) ? (480 + 64 + 10) : 480,\n    galleryWidth: (window.innerWidth < 960) ? 640 : (640 + 48 + 10)\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', this.updateDimensions);\n    this.setState(state => ({\n      screenshots: this.props.screenshots.map(screenshot => {\n        let alt = (screenshot.name.split('/').pop().replace(/\\.[^/.]+$/, '').split('').reverse().join('').replace('-', ' ').split('').reverse().join(''));\n        let dt = alt.split(' ')[1];\n        let title = alt.split(' ')[0] + ' - ' + (\n          new Intl.DateTimeFormat('en-GB', {\n            year: 'numeric',\n            month: 'short',\n            day: '2-digit',\n            hour: 'numeric',\n            minute: 'numeric',\n            timeZoneName: 'short'\n          }).format(new Date(dt.slice(0, 4) + '-' + dt.slice(4, 6) + '-' + dt.slice(6, 8) + 'T' + dt.slice(9, 11) + ':' + dt.slice(11, 13) + ':00Z')));\n        return {\n          original: ('https://artifacts.tcstage.mozaws.net/' + this.props.taskId + '/' + this.props.runId + '/' + screenshot.name),\n          originalAlt: alt,\n          originalTitle: title,\n          thumbnail: ('https://artifacts.tcstage.mozaws.net/' + this.props.taskId + '/' + this.props.runId + '/' + screenshot.name.replace('/full/', '/thumbnail/').replace('.png', '-64x48.png')),\n          thumbnailAlt: alt,\n          thumbnailTitle: title\n        };\n      })\n    }));\n  }\n\n  updateDimensions = () => {\n    if (window.innerWidth < 960) {\n      this.setState(state => ({\n        thumbnailPosition: 'bottom',\n        galleryHeight: (480 + 64 + 10),\n        galleryWidth: 640\n      }));\n    } else {\n      this.setState(state => ({\n        thumbnailPosition: 'left',\n        galleryHeight: 480,\n        galleryWidth: (640 + 48 + 10)\n      }));\n    }\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateDimensions);\n  }\n\n  render() {\n    return (\n      <div style={{width: '' + this.state.galleryWidth + 'px', minHeight: '' + this.state.galleryHeight + 'px'}}>\n        <ImageGallery items={this.state.screenshots} startIndex={(this.state.screenshots.length - 1)} showIndex={true} thumbnailPosition={this.state.thumbnailPosition} />\n      </div>\n    );\n  }\n}\n\nexport default Screenshots;","const StatusBadgeVariantMap = {\n  completed: 'success',\n  failed: 'danger',\n  exception: 'warning',\n  running: 'primary',\n  pending: 'info',\n  unscheduled: 'secondary'\n};\nexport default StatusBadgeVariantMap;\n","import React from 'react'\n//import Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Images from './Images';\nimport InstanceLogs from './InstanceLogs';\nimport Screenshots from './Screenshots';\nimport StatusBadgeVariantMap from './StatusBadgeVariantMap';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { a11yDark } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nclass Run extends React.Component {\n  state = {\n    summary: {\n      task: {\n        completed: {},\n        failed: {},\n        exception: {},\n        running: {},\n        pending: {},\n        unscheduled: {}\n      },\n      image: {}\n    },\n    artifacts: [],\n    logs: [],\n    screenshots: [],\n    images: [],\n    unattend: null\n  };\n\n  constructor(props) {\n    super(props);\n    this.appendToSummary = this.appendToSummary.bind(this);\n  }\n\n  appendToSummary(summary) {\n    this.setState(state => {\n      let combined = {\n        task: {\n          completed: { ...state.summary.task.completed, ...summary.task.completed },\n          failed: { ...state.summary.task.failed, ...summary.task.failed },\n          exception: { ...state.summary.task.exception, ...summary.task.exception },\n          running: { ...state.summary.task.running, ...summary.task.running },\n          pending: { ...state.summary.task.pending, ...summary.task.pending },\n          unscheduled: { ...state.summary.task.unscheduled, ...summary.task.unscheduled }\n        },\n        image: { ...state.summary.image, ...summary.image }\n      };\n      this.props.appender(combined);\n      return { summary: combined };\n    });\n  }\n\n  componentDidMount() {\n    fetch(this.props.rootUrl + '/api/queue/v1/task/' + this.props.taskId + '/runs/' + this.props.run.runId + '/artifacts')\n    .then(responseArtifactsApi => responseArtifactsApi.json())\n    .then((container) => {\n      if (container.artifacts && container.artifacts.length) {\n        this.setState(state => ({\n          artifacts: container.artifacts,\n          logs: container.artifacts.filter(a => (a.contentType.startsWith('text/plain')) && a.name.startsWith('public/instance-logs/') && a.name.endsWith('.log')),\n          screenshots: container.artifacts.filter(a => (a.contentType === 'image/png') && a.name.startsWith('public/screenshot/full/') && a.name.endsWith('.png'))\n        }));\n        if (container.artifacts.some(a => a.name === 'public/unattend.xml')) {\n          fetch('https://artifacts.tcstage.mozaws.net/' + this.props.taskId + '/' + this.props.run.runId + '/public/unattend.xml')\n            .then(response => response.text())\n            .then(text => {\n              this.setState(state => ({\n                unattend: text\n              }));\n            })\n        }\n        if (container.artifacts.some(a => a.name.startsWith('public/') && a.name.endsWith('.json'))) {\n          let artifact = container.artifacts.find(a => a.name.startsWith('public/') && a.name.endsWith('.json'))\n          fetch(this.props.rootUrl + '/api/queue/v1/task/' + this.props.taskId + '/runs/' + this.props.run.runId + '/artifacts/' + artifact.name)\n          .then(responseArtifactApi => responseArtifactApi.json())\n          .then((container) => {\n            if (container.launchConfigs && container.launchConfigs.length) {\n              let imageIds = container.launchConfigs.map(launchConfig => launchConfig.storageProfile.imageReference.id);\n              this.setState(state => ({\n                images: imageIds\n              }));\n              let re = /^((north|south|east|west|(north-|south-|east-|west-)?central)-us(-2)?)-(.*)-(win.*)-([a-f0-9]{7})-([a-f0-9]{7})$/i;\n              this.appendToSummary({\n                task: {\n                  completed: 0,\n                  failed: 0,\n                  exception: 0,\n                  running: 0,\n                  pending: 0,\n                  unscheduled: 0\n                },\n                image: imageIds.reduce(function(a, imageId, i) {\n                  let image = imageId.substring(imageId.lastIndexOf('/') + 1);\n                  let matches = image.match(re);\n                  let pool = matches[5] + '/' + matches[6];\n                  a[pool] = (a[pool] || 0) + 1;\n                  return a;\n                }, {})\n              });\n            }\n          })\n          .catch(console.log);\n        }\n      }\n    })\n    .catch(console.log);\n  }\n\n  render() {\n    return (\n      <li>\n        <Button\n          size=\"sm\"\n          href={this.props.rootUrl + '/tasks/' + this.props.taskId + '/runs/' + this.props.run.runId}\n          style={{ marginLeft: '0.7em' }}\n          variant={'outline-' + StatusBadgeVariantMap[this.props.run.state]}\n          title={'task ' + this.props.taskId + ', run ' + this.props.run.runId + ': ' + this.props.run.state}>\n          {'task ' + this.props.taskId + ', run ' + this.props.run.runId}\n        </Button>\n        {\n          (this.props.taskName.startsWith('01') && this.state.unattend)\n            ? (\n                <SyntaxHighlighter language=\"xml\" style={a11yDark} showLineNumbers={true} customStyle={{maxHeight: '800px', fontSize: 'x-small'}}>\n                  {this.state.unattend}\n                </SyntaxHighlighter>\n              )\n            : null\n        }\n        {\n          (this.props.taskName.startsWith('02'))\n            ? (\n                (this.state.screenshots.length)\n                  ? (\n                      (this.props.run.state === 'completed' || this.props.run.state === 'failed')\n                        ? <Screenshots screenshots={this.state.screenshots} taskId={this.props.taskId} runId={this.props.run.runId} />\n                        : <a style={{marginLeft: '1em'}} href={'https://stage.taskcluster.nonprod.cloudops.mozgcp.net/tasks/' + this.props.taskId + '/runs/' + this.props.run.runId + '/#artifacts'} target=\"_blank\" rel=\"noopener noreferrer\">screenshots ({this.state.screenshots.length})</a>\n                    )\n                  : ((this.state.loading) ? <Spinner style={{marginLeft: '1em'}} animation=\"grow\" variant=\"secondary\" size=\"sm\" /> : null)\n              )\n            : null\n        }\n        {\n          (this.props.taskName.startsWith('02'))\n            ? ((this.state.logs.length) ? <InstanceLogs logs={this.state.logs} taskId={this.props.taskId} runId={this.props.run.runId} /> : null)\n            : null\n        }\n        { (this.props.taskName.startsWith('03') && this.state.images.length) ? <Images images={this.state.images} /> : null }\n      </li>\n    );\n  }\n}\n\nexport default Run;\n","import React from 'react'\nimport Run from './Run';\n\nclass Runs extends React.Component {\n  state = {\n    summary: {\n      task: {\n        completed: {},\n        failed: {},\n        exception: {},\n        running: {},\n        pending: {},\n        unscheduled: {}\n      },\n      image: {}\n    }\n  };\n\n  constructor(props) {\n    super(props);\n    this.appendToSummary = this.appendToSummary.bind(this);\n  }\n\n  appendToSummary(summary) {\n    this.setState(state => {\n      let combined = {\n        task: {\n          completed: { ...state.summary.task.completed, ...summary.task.completed },\n          failed: { ...state.summary.task.failed, ...summary.task.failed },\n          exception: { ...state.summary.task.exception, ...summary.task.exception },\n          running: { ...state.summary.task.running, ...summary.task.running },\n          pending: { ...state.summary.task.pending, ...summary.task.pending },\n          unscheduled: { ...state.summary.task.unscheduled, ...summary.task.unscheduled }\n        },\n        image: { ...state.summary.image, ...summary.image }\n      };\n      this.props.appender(combined);\n      return { summary: combined };\n    });\n  }\n\n  render() {\n    return (\n      <ul>\n        {\n          this.props.runs.map(run => (\n            <Run run={run} key={run.runId} taskId={this.props.taskId} taskName={this.props.taskName} rootUrl={this.props.rootUrl} appender={this.appendToSummary} />\n          ))\n        }\n      </ul>\n    );\n  }\n}\n\nexport default Runs;\n","import React from 'react'\nimport Runs from './Runs';\nimport StatusBadgeVariantMap from './StatusBadgeVariantMap';\nimport Badge from 'react-bootstrap/Badge';\n\nclass Task extends React.Component {\n  state = {\n    summary: {\n      task: {\n        completed: {},\n        failed: {},\n        exception: {},\n        running: {},\n        pending: {},\n        unscheduled: {}\n      },\n      image: {}\n    }\n  };\n\n  constructor(props) {\n    super(props);\n    this.appendToSummary = this.appendToSummary.bind(this);\n  }\n\n  appendToSummary(summary) {\n    this.setState(state => {\n      let combined = {\n        task: {\n          completed: { ...state.summary.task.completed, ...summary.task.completed },\n          failed: { ...state.summary.task.failed, ...summary.task.failed },\n          exception: { ...state.summary.task.exception, ...summary.task.exception },\n          running: { ...state.summary.task.running, ...summary.task.running },\n          pending: { ...state.summary.task.pending, ...summary.task.pending },\n          unscheduled: { ...state.summary.task.unscheduled, ...summary.task.unscheduled }\n        },\n        image: { ...state.summary.image, ...summary.image }\n      };\n      this.props.appender(combined);\n      return { summary: combined };\n    });\n  }\n\n  render() {\n    if (['01', '02'].includes(this.props.task.task.metadata.name.slice(0, 2))) {\n      return (\n        <li style={{listStyleType: 'none', margin: 0, padding: 0}}>\n          <h6>{this.props.task.task.metadata.name}</h6>\n          <a href={this.props.rootUrl + '/tasks/' + this.props.task.status.taskId} title={this.props.task.status.taskId}>\n            {this.props.task.status.taskId.substring(0, 7)}...\n          </a>\n          {\n            Array.from(new Set(this.props.task.status.runs.map(r => r.state))).map(state => (\n              <Badge\n                key={state}\n                style={{ margin: '0 1px' }}\n                variant={StatusBadgeVariantMap[state]}\n                title={state + ': ' + this.props.task.status.runs.filter(r => r.state === state).length}>\n                {this.props.task.status.runs.filter(r => r.state === state).length}\n              </Badge>\n            ))\n          }\n          <Runs runs={this.props.task.status.runs} taskId={this.props.task.status.taskId} taskName={this.props.task.task.metadata.name} rootUrl={this.props.rootUrl} appender={this.appendToSummary} />\n        </li>\n      );\n    } else {\n      return (\n        <li>\n          {this.props.task.task.metadata.name}\n          &nbsp;\n          <a href={this.props.rootUrl + '/tasks/' + this.props.task.status.taskId} title={this.props.task.status.taskId}>\n            {this.props.task.status.taskId.substring(0, 7)}...\n          </a>\n          {\n            Array.from(new Set(this.props.task.status.runs.map(r => r.state))).map(state => (\n              <Badge\n                key={state}\n                style={{ margin: '0 1px' }}\n                variant={StatusBadgeVariantMap[state]}\n                title={state + ': ' + this.props.task.status.runs.filter(r => r.state === state).length}>\n                {this.props.task.status.runs.filter(r => r.state === state).length}\n              </Badge>\n            ))\n          }\n          <Runs runs={this.props.task.status.runs} taskId={this.props.task.status.taskId} taskName={this.props.task.task.metadata.name} rootUrl={this.props.rootUrl} appender={this.appendToSummary} />\n        </li>\n      );\n    }\n  }\n}\n\nexport default Task;\n","import React from 'react';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Task from './Task';\n\nclass Tasks extends React.Component {\n  state = {\n    summary: {\n      task: {\n        completed: {},\n        failed: {},\n        exception: {},\n        running: {},\n        pending: {},\n        unscheduled: {}\n      },\n      image: {}\n    }\n  };\n\n  constructor(props) {\n    super(props);\n    this.appendToSummary = this.appendToSummary.bind(this);\n  }\n\n  appendToSummary(summary) {\n    this.setState(state => {\n      let combined = {\n        task: {\n          completed: { ...state.summary.task.completed, ...summary.task.completed },\n          failed: { ...state.summary.task.failed, ...summary.task.failed },\n          exception: { ...state.summary.task.exception, ...summary.task.exception },\n          running: { ...state.summary.task.running, ...summary.task.running },\n          pending: { ...state.summary.task.pending, ...summary.task.pending },\n          unscheduled: { ...state.summary.task.unscheduled, ...summary.task.unscheduled }\n        },\n        image: { ...state.summary.image, ...summary.image }\n      };\n      this.props.appender(combined);\n      return { summary: combined };\n    });\n  }\n\n  render() {\n    switch (this.props.tasks[0].task.metadata.name.slice(0, 2)) {\n      case '01': {\n        let platforms = [...new Set(this.props.tasks.map(t => t.task.metadata.name.split(' ')[3]))].sort().reverse();\n        if (platforms.length > 1) {\n          return (\n            <Tabs defaultActiveKey={platforms[0]}>\n              {\n                platforms.map(platform => (\n                  <Tab\n                    key={platform}\n                    eventKey={platform}\n                    title={\n                      <span>\n                        {platform}\n                      </span>\n                    }>\n                    <ul style={{listStyleType: 'none', margin: 0, padding: 0}}>\n                      {\n                        this.props.tasks.filter(t => t.task.metadata.name.includes(platform)).sort((a, b) => ((a.task.metadata.name < b.task.metadata.name) ? -1 : (a.task.metadata.name > b.task.metadata.name) ? 1 : 0)).map(task => (\n                          <Task task={task} key={task.status.taskId} rootUrl={this.props.rootUrl} appender={this.appendToSummary} />\n                        ))\n                      }\n                    </ul>\n                  </Tab>\n                ))\n              }\n            </Tabs>\n          );\n        }\n        return (\n          <ul>\n            {\n              this.props.tasks.sort((a, b) => ((a.task.metadata.name < b.task.metadata.name) ? -1 : (a.task.metadata.name > b.task.metadata.name) ? 1 : 0)).map(task => (\n                <Task task={task} key={task.status.taskId} rootUrl={this.props.rootUrl} appender={this.appendToSummary} />\n              ))\n            }\n          </ul>\n        );\n      }\n      case '02': {\n        let platformRegions = [...new Set(this.props.tasks.map(t => t.task.metadata.name.split(' ')[3] + '/' + t.task.metadata.name.split(' ').pop()))].sort();\n        if (platformRegions.length > 1) {\n          return (\n            <Tabs defaultActiveKey={platformRegions[0]}>\n              {\n                platformRegions.map(platformRegion => (\n                  <Tab\n                    key={platformRegion}\n                    eventKey={platformRegion}\n                    title={\n                      <span>\n                        {platformRegion}\n                      </span>\n                    }>\n                    <ul style={{listStyleType: 'none', margin: 0, padding: 0}}>\n                      {\n                        this.props.tasks.filter(t => t.task.metadata.name.includes(platformRegion.split('/')[0]) && t.task.metadata.name.endsWith(platformRegion.split('/').pop())).sort((a, b) => ((a.task.metadata.name < b.task.metadata.name) ? -1 : (a.task.metadata.name > b.task.metadata.name) ? 1 : 0)).map(task => (\n                          <Task task={task} key={task.status.taskId} rootUrl={this.props.rootUrl} appender={this.appendToSummary} />\n                        ))\n                      }\n                    </ul>\n                  </Tab>\n                ))\n              }\n            </Tabs>\n          );\n        }\n        return (\n          <ul>\n            {\n              this.props.tasks.sort((a, b) => ((a.task.metadata.name < b.task.metadata.name) ? -1 : (a.task.metadata.name > b.task.metadata.name) ? 1 : 0)).map(task => (\n                <Task task={task} key={task.status.taskId} rootUrl={this.props.rootUrl} appender={this.appendToSummary} />\n              ))\n            }\n          </ul>\n        );\n      }\n      default: {\n        return (\n          <ul>\n            {\n              this.props.tasks.sort((a, b) => ((a.task.metadata.name < b.task.metadata.name) ? -1 : (a.task.metadata.name > b.task.metadata.name) ? 1 : 0)).map(task => (\n                <Task task={task} key={task.status.taskId} rootUrl={this.props.rootUrl} appender={this.appendToSummary} />\n              ))\n            }\n          </ul>\n        );\n      }\n    }\n  }\n}\n\nexport default Tasks;\n","import React from 'react'\nimport Badge from 'react-bootstrap/Badge';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tasks from './Tasks';\nimport StatusBadgeVariantMap from './StatusBadgeVariantMap';\n\nconst TaskGroupPrefixMap = {\n  '00': 'setup and validation',\n  '01': 'disk image builds',\n  '02': 'machine image builds',\n  '03': 'worker pool deployments',\n  '04': 'worker pool tests'\n};\n\nclass Status extends React.Component {\n  state = {\n    summary: {\n      task: {\n        completed: {},\n        failed: {},\n        exception: {},\n        running: {},\n        pending: {},\n        unscheduled: {}\n      },\n      image: {}\n    },\n    taskGroupId: null,\n    taskCount: 0,\n    tasks: [],\n    builds: [],\n    travisApiResponse: {}\n  };\n  travisBuildResults = [\n    'completed',\n    'failed',\n  ];\n\n  constructor(props) {\n    super(props);\n    this.appendToSummary = this.appendToSummary.bind(this);\n  }\n\n  appendToSummary(summary) {\n    this.setState(state => {\n      let combined = {\n        task: {\n          completed: { ...state.summary.task.completed, ...summary.task.completed },\n          failed: { ...state.summary.task.failed, ...summary.task.failed },\n          exception: { ...state.summary.task.exception, ...summary.task.exception },\n          running: { ...state.summary.task.running, ...summary.task.running },\n          pending: { ...state.summary.task.pending, ...summary.task.pending },\n          unscheduled: { ...state.summary.task.unscheduled, ...summary.task.unscheduled }\n        },\n        image: { ...state.summary.image, ...summary.image }\n      };\n      this.props.appender(combined);\n      return { summary: combined };\n    });\n  }\n\n  componentDidMount() {\n    switch (this.props.status.context) {\n      case 'continuous-integration/travis-ci/push':\n        let pathname = (new URL(this.props.status.target_url)).pathname;\n        let buildId = pathname.substring(pathname.lastIndexOf('/') + 1);\n        this.setState(state => ({\n          taskGroupId: buildId\n        }));\n        let buildsApi = 'https://api.travis-ci.org/repos/mozilla-platform-ops/cloud-image-builder/builds/' + buildId;\n        fetch(buildsApi)\n        .then(responseBuildsApi => responseBuildsApi.json())\n        .then((container) => {\n          if (container.matrix) {\n            this.setState(state => ({\n              taskCount: container.matrix.length,\n              builds: container.matrix,\n              travisApiResponse: container\n            }));\n            this.appendToSummary({\n              task: {\n                completed: { ...container.matrix.filter(x => x.result === 0).map(x => [x.id, x.finished_at]).reduce((o, [k, v]) => ({...o, [k]: v}), {}) },\n                failed: { ...container.matrix.filter(x => x.result !== null && x.result !== 0).map(x => [x.id, x.finished_at]).reduce((o, [k, v]) => ({...o, [k]: v}), {}) },\n                exception: {},\n                running: {},\n                pending: { ...container.matrix.filter(x => x.result === null).map(x => [x.id, x.finished_at]).reduce((o, [k, v]) => ({...o, [k]: v}), {}) },\n                unscheduled: {}\n              },\n              image: []\n            });\n          }\n        })\n        .catch(console.log);\n        break;\n      default:\n        let taskGroupHtmlUrl = new URL(this.props.status.target_url);\n        let taskGroupId = this.props.status.target_url.substring(this.props.status.target_url.lastIndexOf('/') + 1);\n        this.setState(state => ({\n          taskGroupId: taskGroupId\n        }));\n        let tasksApi = 'https://' + taskGroupHtmlUrl.hostname + '/api/queue/v1/task-group/' + taskGroupId + '/list';\n        fetch(tasksApi)\n        .then(responseTasksApi => responseTasksApi.json())\n        .then((container) => {\n          if (container.tasks && container.tasks.length) {\n            this.setState(state => ({\n              taskCount: container.tasks.length,\n              tasks: container.tasks//.sort((a, b) => a.task.metadata.name.localeCompare(b.task.metadata.name))\n            }));\n            this.appendToSummary({\n              task: {\n                completed: { ...container.tasks.filter(x => x.status.state === 'completed').map(x => [x.status.taskId, x.status.runs[x.status.runs.length - 1].resolved]).reduce((o, [k, v]) => ({...o, [k]: v}), {}) },\n                failed: { ...container.tasks.filter(x => x.status.state === 'failed').map(x => [x.status.taskId, x.status.runs[x.status.runs.length - 1].resolved]).reduce((o, [k, v]) => ({...o, [k]: v}), {}) },\n                exception: { ...container.tasks.filter(x => x.status.state === 'exception').map(x => [x.status.taskId, x.status.runs[x.status.runs.length - 1].resolved]).reduce((o, [k, v]) => ({...o, [k]: v}), {}) },\n                running: { ...container.tasks.filter(x => x.status.state === 'running').map(x => [x.status.taskId, null]).reduce((o, [k, v]) => ({...o, [k]: v}), {}) },\n                pending: { ...container.tasks.filter(x => x.status.state === 'pending').map(x => [x.status.taskId, null]).reduce((o, [k, v]) => ({...o, [k]: v}), {}) },\n                unscheduled: { ...container.tasks.filter(x => x.status.state === 'unscheduled').map(x => [x.status.taskId, null]).reduce((o, [k, v]) => ({...o, [k]: v}), {}) },\n              },\n              image: []\n            });\n          }\n        })\n        .catch(console.log);\n        break;\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <h5 style={{marginTop: '1em'}} className=\"muted\">\n          {\n            new Intl.DateTimeFormat('en-GB', {\n              year: 'numeric',\n              month: 'short',\n              day: '2-digit',\n              hour: 'numeric',\n              minute: 'numeric',\n              timeZoneName: 'short'\n            }).format(new Date(this.props.status.updated_at))\n          }\n          &nbsp;\n          {this.props.status.description.toLowerCase()}\n        </h5>\n        <span style={{marginTop: '0.5em'}}>\n          (\n            {this.state.taskCount} tasks in group\n            &nbsp;\n            <a href={this.props.status.target_url} title={this.state.taskGroupId}>\n              {\n                (this.state.builds.length)\n                  ? this.state.taskGroupId\n                  : (this.state.taskGroupId && this.state.taskGroupId.slice(0, 7)) + '...'\n              }\n            </a>\n            &nbsp;\n            {\n              Object.keys(StatusBadgeVariantMap).map(status => (\n                (this.state.tasks.filter(t => t.status.state === status).length)\n                  ? (\n                      <Badge\n                        key={status}\n                        style={{ margin: '0 1px' }}\n                        variant={StatusBadgeVariantMap[status]}\n                        title={status + ': ' + this.state.tasks.filter(t => t.status.state === status).length}>\n                        {this.state.tasks.filter(t => t.status.state === status).length}\n                      </Badge>\n                    )\n                  : ''\n              ))\n            }\n            {\n              [0, 1, null].map((result, rI) => (\n                (this.state.builds.filter(b => b.result === result).length)\n                  ? (\n                      <Badge\n                        key={rI}\n                        style={{ margin: '0 1px' }}\n                        variant={(result === null) ? 'info' : StatusBadgeVariantMap[this.travisBuildResults[result]]}\n                        title={this.travisBuildResults[result] + ': ' + this.state.builds.filter(b => b.result === result).length}>\n                        {this.state.builds.filter(b => b.result === result).length}\n                      </Badge>\n                    )\n                  : ''\n              ))\n            }\n          )\n        </span>\n        {\n          <Tabs defaultActiveKey=\"02\">\n            {\n              [...new Set(this.state.tasks.map(t => t.task.metadata.name.slice(0, 2)))].sort().map(taskGroupPrefix => (\n                <Tab\n                  key={taskGroupPrefix}\n                  eventKey={taskGroupPrefix}\n                  title={\n                    <span>\n                      {taskGroupPrefix} :: {TaskGroupPrefixMap[taskGroupPrefix]}\n                    </span>\n                  }>\n                  <Tasks tasks={this.state.tasks.filter(t => t.task.metadata.name.startsWith(taskGroupPrefix))} rootUrl={'https://' + (new URL(this.props.status.target_url)).hostname} appender={this.appendToSummary} settings={this.props.settings} />\n                </Tab>\n              ))\n            }\n          </Tabs>\n        }\n      </>\n    );\n  }\n}\n\nexport default Status;\n","import React from 'react'\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Status from './Status';\n\nclass Statuses extends React.Component {\n  state = {\n    summary: {\n      task: {\n        completed: {},\n        failed: {},\n        exception: {},\n        running: {},\n        pending: {},\n        unscheduled: {}\n      },\n      image: {}\n    }\n  };\n\n  constructor(props) {\n    super(props);\n    this.appendToSummary = this.appendToSummary.bind(this);\n  }\n\n  appendToSummary(summary) {\n    this.setState(state => {\n      let combined = {\n        task: {\n          completed: { ...state.summary.task.completed, ...summary.task.completed },\n          failed: { ...state.summary.task.failed, ...summary.task.failed },\n          exception: { ...state.summary.task.exception, ...summary.task.exception },\n          running: { ...state.summary.task.running, ...summary.task.running },\n          pending: { ...state.summary.task.pending, ...summary.task.pending },\n          unscheduled: { ...state.summary.task.unscheduled, ...summary.task.unscheduled }\n        },\n        image: { ...state.summary.image, ...summary.image }\n      };\n      this.props.appender(combined);\n      return { summary: combined };\n    });\n  }\n\n  render() {\n    return (\n      <Tabs defaultActiveKey=\"0\">\n        {\n          this.props.contexts.reverse().map((context, cI) => (\n            <Tab\n              key={cI}\n              eventKey={cI}\n              title={\n                <>\n                  <img style={{width: '50px', height: '50px', marginRight: '10px'}} src={this.props.statuses.find(s => s.context === context).avatar_url} />\n                  <span>{context}</span>\n                </>\n              }>\n              {\n                // only show pending statuses if there are no others (eg: failed/completed)\n                (this.props.statuses.some(s => s.context === context && s.state !== 'pending'))\n                  ? this.props.statuses.filter(s => s.context === context && s.state !== 'pending').map((status) => (\n                    <Status status={status} key={status.id} appender={this.appendToSummary} settings={this.props.settings} />\n                  ))\n                  // todo: add a reducer below to remove duplicate pending statuses\n                  : this.props.statuses.filter(s => s.context === context).map((status) => (\n                    <Status status={status} key={status.id} appender={this.appendToSummary} settings={this.props.settings} />\n                  ))\n              }\n            </Tab>\n          ))\n        }\n      </Tabs>\n    );\n  }\n}\n\nexport default Statuses;\n","import React from 'react'\n\nimport Card from 'react-bootstrap/Card';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\nimport Spinner from 'react-bootstrap/Spinner';\n\nimport CommitMessage from './CommitMessage';\nimport Statuses from './Statuses';\nimport StatusBadgeVariantMap from './StatusBadgeVariantMap';\n//import { useInterval } from './useInterval';\nimport { CaretDown, CaretRight } from 'react-bootstrap-icons';\n\nconst minIntervalMs = 5000; // minimum random refresh interval in milliseconds\nconst maxIntervalMs = 60000; // maximum random refresh interval in milliseconds\n\nclass Commit extends React.Component {\n\n  interval;\n\n  state = {\n    summary: {\n      task: {\n        completed: {},\n        failed: {},\n        exception: {},\n        running: {},\n        pending: {},\n        unscheduled: {}\n      },\n      image: {}\n    },\n    contexts: [],\n    statuses: [],\n    expanded: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.appendToSummary = this.appendToSummary.bind(this);\n  }\n\n  appendToSummary(summary) {\n    this.setState(state => ({\n      summary: {\n        task: {\n          completed: { ...state.summary.task.completed, ...summary.task.completed },\n          failed: { ...state.summary.task.failed, ...summary.task.failed },\n          exception: { ...state.summary.task.exception, ...summary.task.exception },\n          running: { ...state.summary.task.running, ...summary.task.running },\n          pending: { ...state.summary.task.pending, ...summary.task.pending },\n          unscheduled: { ...state.summary.task.unscheduled, ...summary.task.unscheduled }\n        },\n        image: { ...state.summary.image, ...summary.image }\n      }\n    }));\n  }\n\n  /*\n  note: to run locally, a cors proxy is required.\n\n  to install a local cors proxy:\n  $ sudo npm install -g local-cors-proxy\n\n  to run a local cors proxy with authenticated github requests:\n  $ lcp --proxyUrl https://grenade:$(pass github/grenade/token/cloud-image-builder)@api.github.com\n  */\n\n  componentDidMount() {\n    this.setState(state => ({ expanded: this.props.expand }));\n    \n\n    // refresh data in this component at a random interval, in\n    // order to prevent all components updating simultaneously\n    // https://blog.stvmlbrn.com/2019/02/20/automatically-refreshing-data-in-react.html\n    let interval = Math.floor(Math.random() * (maxIntervalMs - minIntervalMs)) + minIntervalMs;\n    this.interval = setInterval(this.getBuildStatuses.bind(this), interval);\n    /*\n    useInterval(async () => {\n      this.getBuildStatuses();\n    }, interval);\n    */\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getBuildStatuses() {\n    fetch(\n      (window.location.hostname === 'localhost')\n        ? 'http://localhost:8010/proxy/repos/mozilla-platform-ops/cloud-image-builder/commits/' + this.props.commit.sha + '/statuses'\n        : 'https://grenade-cors-proxy.herokuapp.com/https://api.github.com/repos/mozilla-platform-ops/cloud-image-builder/commits/' + this.props.commit.sha + '/statuses'\n    )\n    .then(responseGithubApiStatuses => responseGithubApiStatuses.json())\n    .then((githubCommitStatuses) => {\n      if (githubCommitStatuses.length) {\n        this.setState(state => ({\n          contexts: [...new Set(githubCommitStatuses.map(s => s.context))].sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase())),\n          statuses: githubCommitStatuses//.filter(s => s.state !== 'pending')\n        }));\n      }\n    })\n    .catch(console.log);\n  }\n\n  render() {\n    return (\n      <Card style={{ width: '100%', marginTop: '10px' }}>\n        <Card.Header>\n          <Accordion.Toggle as={Button} variant=\"link\" eventKey={this.props.commit.sha} onClick={() => {\n            this.setState(state => ({expanded: !state.expanded}))\n          }}>\n            {(this.state.expanded) ? <CaretDown /> : <CaretRight />}\n          </Accordion.Toggle>\n          {\n            new Intl.DateTimeFormat('en-GB', {\n              year: 'numeric',\n              month: 'short',\n              day: '2-digit',\n              hour: 'numeric',\n              minute: 'numeric',\n              timeZoneName: 'short'\n            }).format(new Date(this.props.commit.committer.date))\n          }\n          &nbsp;\n          <a href={this.props.commit.url}>\n            { this.props.commit.sha.substring(0, 7) }\n          </a>\n          {\n            (Object.keys(this.state.summary.task).some(k => (Object.keys(this.state.summary.task[k]).length > 0)))\n              ? (\n                  Object.keys(this.state.summary.task).filter(k => Object.keys(this.state.summary.task[k]).length > 0).map(k => (\n                    <Badge\n                      key={k}\n                      style={{ marginLeft: '0.3em' }}\n                      variant={StatusBadgeVariantMap[k]}>\n                      {Object.keys(this.state.summary.task[k]).length}\n                    </Badge>\n                  ))\n                )\n              : (\n                  <Spinner\n                    style={{ marginLeft: '0.3em' }}\n                    animation=\"border\"\n                    size=\"sm\"\n                    variant=\"info\" />\n                )\n          }\n          <Image\n            src={this.props.commit.author.avatar}\n            alt={this.props.commit.author.name}\n            title={this.props.commit.author.name}\n            rounded={true}\n            style={{ width: '30px', height: '30px', marginLeft: '10px' }}\n            className=\"float-right\" />\n          <span className=\"float-right\">\n            { this.props.commit.author.username }\n          </span>\n        </Card.Header>\n        {\n          (Object.keys(this.state.summary.image).length)\n          ? (\n              <Card.Body>\n                {\n                  Object.keys(this.state.summary.image).sort().map(pool => (\n                    <Button\n                      key={pool}\n                      style={{ marginLeft: '0.3em' }}\n                      variant=\"outline-info\"\n                      size=\"sm\">\n                      {pool} <Badge variant=\"info\">{this.state.summary.image[pool]}</Badge>\n                    </Button>\n                  ))\n                }\n              </Card.Body>\n            )\n          : ''\n        }\n        <Accordion.Collapse eventKey={this.props.commit.sha}>\n          <Card.Body>\n            <CommitMessage message={this.props.commit.message} />\n            <Statuses contexts={this.state.contexts} statuses={this.state.statuses} appender={this.appendToSummary} settings={this.props.settings} />\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    );\n  }\n}\n\nexport default Commit;\n","import React from 'react'\nimport Commit from './Commit';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Spinner from 'react-bootstrap/Spinner';\n\nclass Commits extends React.Component {\n  /*\n  constructor(props) {\n    super(props);\n    this.state = {\n      defaultActiveKey: props.latest\n    };\n  }\n  componentDidMount() {\n    this.setState(state => ({ defaultActiveKey: (this.props.commits && this.props.commits.length) ? this.props.commits[0].sha : null }));\n  }\n  */\n  render() {\n    return (\n      (this.props.commits.length)\n        ? (\n            <Accordion defaultActiveKey={null/*this.props.latest*/}>\n              {\n                this.props.commits.map(commit => (\n                  <Commit commit={commit} key={commit.sha} expand={false/*(commit.sha === this.props.latest)*/} settings={this.props.settings} />\n                ))\n              }\n            </Accordion>\n          )\n        : (\n            <div style={{textAlign: 'center', width: '100%', padding: '100px'}}>\n              <Spinner animation=\"border\" />\n            </div>\n          )\n    );\n  }\n}\n\nexport default Commits;\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCloud, faImage, faHammer } from '@fortawesome/free-solid-svg-icons'\nimport Commits from './Commits';\nimport Badge from  'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Cookies from 'universal-cookie';\nimport StatusBadgeVariantMap from './StatusBadgeVariantMap';\nimport Slider from 'rc-slider';\n\nclass App extends React.Component {\n\n  interval;\n\n  cookies = new Cookies();\n  state = {\n    commits: [],\n    settings: {\n      fluid: (this.cookies.get('fluid') === undefined || this.cookies.get('fluid') === null) ? true : (this.cookies.get('fluid') === 'true'),\n      limit: (this.cookies.get('limit') === undefined || this.cookies.get('limit') === null) ? { commits: 1, tasks: ['03', '04'] } : this.cookies.get('limit')\n    }\n  };\n  /*\n  note: to run locally, a cors proxy is required.\n\n  to install a local cors proxy:\n  $ sudo npm install -g local-cors-proxy\n\n  to run a local cors proxy with authenticated github requests:\n  $ lcp --proxyUrl https://grenade:$(pass github/grenade/token/cloud-image-builder)@api.github.com\n  */\n\n  componentDidMount() {\n    if (this.cookies.get('fluid') === undefined || this.cookies.get('fluid') === null) {\n      this.cookies.set('fluid', true, { path: '/', sameSite: 'strict' });\n    }\n    if (this.cookies.get('limit') === undefined || this.cookies.get('limit') === null) {\n      this.cookies.set(\n        'limit',\n        this.state.settings.limit,\n        {\n          path: '/',\n          sameSite: 'strict'\n        });\n    }\n    this.getCommits(this.state.settings.limit.commits);\n\n    // refresh commit list every 5 minutes\n    // https://blog.stvmlbrn.com/2019/02/20/automatically-refreshing-data-in-react.html\n    let intervalMs = (5 * 60 * 1000);\n    this.interval = setInterval(this.getCommits.bind(this), intervalMs);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getCommits(limit) {\n    if (limit === null || limit === undefined) {\n      limit = (this.cookies.get('limit') === undefined || this.cookies.get('limit') === null) ? 1 : this.cookies.get('limit').commits;\n    }\n    fetch(\n      (window.location.hostname === 'localhost')\n        ? 'http://localhost:8010/proxy/repos/mozilla-platform-ops/cloud-image-builder/commits'\n        : 'https://grenade-cors-proxy.herokuapp.com/https://api.github.com/repos/mozilla-platform-ops/cloud-image-builder/commits'\n    )\n    .then(responseGithubApiCommits => responseGithubApiCommits.json())\n    .then((githubCommits) => {\n      if (githubCommits.length) {\n        this.setState(state => ({\n          commits: githubCommits.slice(0, limit).map(c => ({\n            sha: c.sha,\n            url: c.html_url,\n            author: {...c.commit.author, ...{ id: c.author.id, username: c.author.login, avatar: c.author.avatar_url }},\n            committer: {...c.commit.committer, ...{ id: c.committer.id, username: c.committer.login, avatar: c.committer.avatar_url }},\n            message: c.commit.message.split('\\n').filter(line => line !== ''),\n            verification: c.commit.verification\n          })),\n          latest: githubCommits[0].sha\n        }));\n      }\n    })\n    .catch(console.log);\n  }\n\n  render() {\n    return (\n      <Container fluid={(this.state.settings.fluid === undefined || this.state.settings.fluid === null) ? true : this.state.settings.fluid}>\n        <Row>\n          <h1 style={{ padding: '0 1em' }}>\n            <FontAwesomeIcon style={{ marginRight: '0.4em' }} icon={faCloud} />\n            <FontAwesomeIcon style={{ marginRight: '0.4em' }} icon={faImage} />\n            <FontAwesomeIcon style={{ marginRight: '0.4em' }} icon={faHammer} />\n            recent commits and builds\n          </h1>\n        </Row>\n        <Row>\n          <Col>\n            <Commits commits={this.state.commits} latest={this.state.latest} settings={this.state.settings} />\n          </Col>\n          <Col sm=\"2\">\n            <strong>\n              legend\n            </strong>\n            <br style={{ marginTop: '20px' }} />\n            task status:\n            {\n              Object.keys(StatusBadgeVariantMap).map(status => (\n                <Badge\n                  key={status}\n                  style={{ display: 'block', margin: '10px 20px' }}\n                  variant={StatusBadgeVariantMap[status]}>\n                  {status}\n                </Badge>\n              ))\n            }\n            image deployment:\n            <br />\n            <Button\n              style={{ marginLeft: '0.3em' }}\n              variant=\"outline-info\"\n              size=\"sm\">\n              worker pool <Badge variant=\"info\">region count</Badge>\n            </Button>\n            <hr />\n            <strong>\n              display settings:\n            </strong>\n            <br  />\n            <Slider\n              defaultValue={ this.state.settings.limit.commits }\n              min={1}\n              max={30}\n              onChange={\n                (commitLimit) => {\n                  let limit = { commits: commitLimit, tasks: this.state.settings.limit.tasks };\n                  this.cookies.set('limit', limit, { path: '/', sameSite: 'strict' });\n                  this.setState(state => ({ settings: { fluid: state.settings.fluid, limit: limit }}));\n                  this.getCommits(commitLimit);\n                }\n              }\n              style={{ marginTop: '20px' }} />\n            limit commits ({this.state.settings.limit.commits})\n            <br style={{ marginBottom: '20px' }} />\n            <Form.Check \n              type=\"switch\"\n              id=\"showAllTasks\"\n              label=\"all tasks\"\n              checked={(this.state.settings.limit.tasks.length > 2)}\n              onChange={\n                () => {\n                  let limit = { commits: this.state.settings.limit.commits, tasks: (!(this.state.settings.limit.tasks.length > 2)) ? ['00', '01', '02', '03', '04'] : ['03', '04'] };\n                  this.cookies.set('limit', limit, { path: '/', sameSite: 'strict' });\n                  this.setState(state => ({ settings: { fluid: state.settings.fluid, limit: limit }}));\n                }\n              }\n            />\n            <br />\n            <Form.Check \n              type=\"switch\"\n              id=\"fluid\"\n              label=\"fluid\"\n              checked={this.state.settings.fluid}\n              onChange={\n                () => {\n                  let fluid = !this.state.settings.fluid;\n                  this.cookies.set('fluid', fluid, { path: '/', sameSite: 'strict' });\n                  this.setState(state => ({ settings: { fluid: fluid, limit: state.settings.limit }}));\n                }\n              }\n            />\n            <hr />\n            <p className=\"text-muted\">\n              this page monitors <a href=\"https://github.com/mozilla-platform-ops/cloud-image-builder/commits/master\">commits</a> to the master branch\n              of the <a href=\"https://github.com/mozilla-platform-ops/cloud-image-builder\">mozilla-platform-ops/cloud-image-builder</a> repository and\n              the resulting <a href=\"https://travis-ci.org/github/mozilla-platform-ops/cloud-image-builder/builds\">travis-ci builds</a> and taskcluster\n              tasks (<a href=\"https://stage.taskcluster.nonprod.cloudops.mozgcp.net/tasks/index/project.relops.cloud-image-builder\">staging</a>,&nbsp;\n              <a href=\"https://firefox-ci-tc.services.mozilla.com/tasks/index/project.relops.cloud-image-builder\">production</a>) which produce cloud\n              machine images of the various windows operating system editions and configurations used by firefox ci to build and test gecko products on\n              the windows platform.\n            </p>\n            <p className=\"text-muted\">\n              the source code for this page is hosted in the <a href=\"https://github.com/mozilla-platform-ops/cloud-image-builder/tree/react\">react\n              branch</a> of the same repository.\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'rc-slider/assets/index.css';\nimport 'react-image-gallery/styles/css/image-gallery.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}