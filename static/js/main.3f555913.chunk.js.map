{"version":3,"sources":["CommitMessage.js","Image.js","Images.js","Screenshots.js","StatusBadgeVariantMap.js","Run.js","Runs.js","Task.js","Tasks.js","Status.js","Statuses.js","Commit.js","Commits.js","App.js","serviceWorker.js","index.js"],"names":["CommitMessage","this","props","message","filter","line","match","RegExp","map","lI","key","some","instruction","Badge","style","marginRight","variant","includes","inex","type","startsWith","replace","split","item","title","slice","React","Component","Image","re","state","domain","pool","region","sha","bootstrap","disk","matches","image","substring","lastIndexOf","setState","href","target","rel","Images","images","Screenshots","screenshots","screenshot","original","taskId","runId","name","originalAlt","pop","originalTitle","thumbnail","thumbnailAlt","thumbnailTitle","width","items","StatusBadgeVariantMap","completed","failed","exception","running","pending","unscheduled","Run","summary","task","artifacts","appendToSummary","bind","combined","appender","fetch","rootUrl","run","then","responseArtifactsApi","json","container","length","a","contentType","endsWith","artifact","find","responseArtifactApi","launchConfigs","imageIds","launchConfig","storageProfile","imageReference","id","reduce","imageId","i","catch","console","log","Button","size","marginLeft","Runs","runs","Task","metadata","status","Array","from","Set","r","margin","Tasks","tasks","sort","b","t","settings","limit","Status","taskGroupId","taskCount","builds","travisApiResponse","travisBuildResults","context","pathname","URL","target_url","buildId","responseBuildsApi","matrix","x","result","finished_at","o","k","v","taskGroupHtmlUrl","tasksApi","hostname","responseTasksApi","resolved","Intl","DateTimeFormat","year","month","day","hour","minute","timeZoneName","format","Date","updated_at","description","toLowerCase","Object","keys","rI","Statuses","contexts","cI","padding","listStyle","backgroundImage","statuses","s","avatar_url","backgroundRepeat","backgroundPosition","backgroundSize","Commit","expanded","expand","interval","Math","floor","random","setInterval","getBuildStatuses","clearInterval","window","location","commit","responseGithubApiStatuses","githubCommitStatuses","localeCompare","Card","marginTop","Header","Accordion","Toggle","as","eventKey","onClick","committer","date","url","Spinner","animation","src","author","avatar","alt","rounded","height","className","username","Body","Collapse","Commits","commits","defaultActiveKey","textAlign","App","cookies","Cookies","fluid","get","parseInt","commitLimit","undefined","set","path","sameSite","getCommits","responseGithubApiCommits","githubCommits","c","html_url","login","verification","latest","Container","Row","icon","faCloud","faImage","faHammer","Col","sm","display","defaultValue","min","max","onChange","showAllTasks","marginBottom","Form","Check","label","checked","Boolean","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.3f555913.chunk.js","sourcesContent":["import React from 'react';\nimport Badge from 'react-bootstrap/Badge';\nimport { DashCircleFill, PlusCircleFill } from 'react-bootstrap-icons';\n\nclass CommitMessage extends React.Component {\n  render() {\n    return (\n      <div>\n        {\n          this.props.message.filter(line => (\n            !line.match((new RegExp ('^(include|exclude) (environment|key|pool|region)s: .*$', 'i')))\n            &&\n            !line.match((new RegExp ('^(pool-deploy|overwrite-disk-image|overwrite-machine-image|disable-cleanup|purge-taskcluster-resources|no-ci|no-taskcluster-ci|no-travis-ci)$', 'i')))\n          )).map((line, lI) => (\n            (lI === 0)\n              ? <strong key={lI}>{line}<br /></strong>\n              : <span key={lI}>{line}<br /></span>\n          ))\n        }\n        {\n          (this.props.message.some(line => (\n            line.match(/^(include|exclude) (environment|key|pool|region)s: .*$/i)\n            ||\n            line.match(/^(pool-deploy|overwrite-disk-image|overwrite-machine-image|disable-cleanup|purge-taskcluster-resources|no-ci|no-taskcluster-ci|no-travis-ci)$/i)\n          )))\n            ? (\n                (this.props.message.filter(line => (line.match(/^(pool-deploy|overwrite-disk-image|overwrite-machine-image|disable-cleanup|purge-taskcluster-resources|no-ci|no-taskcluster-ci|no-travis-ci)$/i)))).map(instruction => (\n                  <Badge\n                    key={instruction}\n                    style={{ marginRight: '0.7em' }}\n                    variant={(['pool-deploy', 'overwrite-disk-image', 'overwrite-machine-image', 'disable-cleanup', 'purge-taskcluster-resources'].includes(instruction)) ? 'primary' : 'dark'}>\n                    {instruction}\n                  </Badge>\n                ))\n              )\n            : (\n                <Badge variant=\"warning\">\n                  no commit syntax ci instructions\n                </Badge>\n              )\n        }\n        {\n          ['include', 'exclude'].map(inex => (\n            (this.props.message.some(line => line.match((new RegExp ('^' + inex + ' (environment|key|pool|region)s: .*$', 'i')))))\n              ? (\n                  <span key={inex}>\n                    {\n                      ['environments', 'integrations', 'keys', 'pools', 'regions'].map(type => (\n                        this.props.message.filter(line => line.startsWith(inex + ' ' + type + ': ')).map((line, lI) => (\n                          line.replace(inex + ' ' + type + ': ', '').split(', ').map(item => (\n                            <Badge\n                              key={lI}\n                              style={{ marginRight: '0.7em' }}\n                              variant={(inex === 'include') ? 'info' : 'dark'}\n                              title={inex + ' ' + type.slice(0, -1) + ': ' + item}>\n                              {\n                                (inex === 'include')\n                                  ? <PlusCircleFill />\n                                  : <DashCircleFill />\n                              }\n                              &nbsp;{item}\n                            </Badge>\n                          ))\n                        ))\n                      ))\n                    }\n                    <br />\n                  </span>\n                )\n              : ''\n          ))\n        }\n      </div>\n    );\n  }\n}\n\nexport default CommitMessage;\n","import React from 'react'\n\n\nclass Image extends React.Component {\n  re = /^((north|south|east|west|(north-|south-|west-)?central)-us(-2)?)-(.*)-(win.*)-([a-f0-9]{7})-([a-f0-9]{7})$/i;\n  state = {\n    domain: null,\n    pool: null,\n    region: null,\n    sha: {\n      bootstrap: null,\n      disk: null\n    }\n  }\n\n  componentDidMount() {\n    let name = this.props.image.substring(this.props.image.lastIndexOf('/') + 1);\n    let matches = name.match(this.re);\n    this.setState(state => ({\n      domain: matches[5],\n      pool: matches[6],\n      region: matches[1],\n      sha: {\n        bootstrap: matches[8],\n        disk: matches[7]\n      }\n    }));\n  }\n\n  render() {\n    return (\n      <li>\n        <a href={'https://portal.azure.com/#@taskclusteraccountsmozilla.onmicrosoft.com/resource' + this.props.image} target=\"_blank\" rel=\"noopener noreferrer\">\n          {this.state.region}\n          -{this.state.domain}\n          -{this.state.pool}\n          -{this.state.sha.disk}\n          -{this.state.sha.bootstrap}\n        </a>\n      </li>\n    );\n  }\n}\n\nexport default Image;","import React from 'react'\nimport Image from './Image';\n\nclass Images extends React.Component {\n  render() {\n    return (\n      <div>\n        <span>worker manager image deployments:</span>\n        <ul>\n          {\n            this.props.images.map(image => (\n              <Image image={image} key={image} />\n            ))\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Images;","import React from 'react';\nimport ImageGallery from 'react-image-gallery';\n//import Screenshot from './Screenshot';\n\nclass Screenshots extends React.Component {\n  state = {\n    screenshots: [],\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.setState(state => ({\n      screenshots: this.props.screenshots.map(screenshot => ({\n        original: ('https://artifacts.tcstage.mozaws.net/' + this.props.taskId + '/' + this.props.runId + '/' + screenshot.name),\n        originalAlt: (screenshot.name.split('/').pop().replace(/\\.[^/.]+$/, '').replace('-', ' ')),\n        originalTitle: (screenshot.name.split('/').pop().replace(/\\.[^/.]+$/, '').replace('-', ' ')),\n        thumbnail: ('https://artifacts.tcstage.mozaws.net/' + this.props.taskId + '/' + this.props.runId + '/' + screenshot.name.replace('/full/', '/thumbnail/').replace('.png', '-64x48.png')),\n        thumbnailAlt: (screenshot.name.split('/').pop().replace(/\\.[^/.]+$/, '').replace('-', ' ')),\n        thumbnailTitle: (screenshot.name.split('/').pop().replace(/\\.[^/.]+$/, '').replace('-', ' '))\n      }))\n    }));\n  }\n\n  render() {\n    return (\n      <div style={{width: '640px'}}>\n        <ImageGallery items={this.state.screenshots} />\n      </div>\n    );\n  }\n}\n\nexport default Screenshots;","const StatusBadgeVariantMap = {\n  completed: 'success',\n  failed: 'danger',\n  exception: 'warning',\n  running: 'primary',\n  pending: 'info',\n  unscheduled: 'secondary'\n};\nexport default StatusBadgeVariantMap;\n","import React from 'react'\n//import Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport Images from './Images';\nimport Screenshots from './Screenshots';\nimport StatusBadgeVariantMap from './StatusBadgeVariantMap';\n//import { Server } from 'react-bootstrap-icons';\n\nclass Run extends React.Component {\n  state = {\n    summary: {\n      task: {\n        completed: {},\n        failed: {},\n        exception: {},\n        running: {},\n        pending: {},\n        unscheduled: {}\n      },\n      image: {}\n    },\n    artifacts: [],\n    screenshots: [],\n    images: []\n  };\n\n  constructor(props) {\n    super(props);\n    this.appendToSummary = this.appendToSummary.bind(this);\n  }\n\n  appendToSummary(summary) {\n    this.setState(state => {\n      let combined = {\n        task: {\n          completed: { ...state.summary.task.completed, ...summary.task.completed },\n          failed: { ...state.summary.task.failed, ...summary.task.failed },\n          exception: { ...state.summary.task.exception, ...summary.task.exception },\n          running: { ...state.summary.task.running, ...summary.task.running },\n          pending: { ...state.summary.task.pending, ...summary.task.pending },\n          unscheduled: { ...state.summary.task.unscheduled, ...summary.task.unscheduled }\n        },\n        image: { ...state.summary.image, ...summary.image }\n      };\n      this.props.appender(combined);\n      return { summary: combined };\n    });\n  }\n\n  componentDidMount() {\n    fetch(this.props.rootUrl + '/api/queue/v1/task/' + this.props.taskId + '/runs/' + this.props.run.runId + '/artifacts')\n    .then(responseArtifactsApi => responseArtifactsApi.json())\n    .then((container) => {\n      if (container.artifacts && container.artifacts.length) {\n        this.setState(state => ({\n          artifacts: container.artifacts,\n          screenshots: container.artifacts.filter(a => (a.contentType === 'image/png') && a.name.startsWith('public/screenshot/full/'))\n        }));\n        if (container.artifacts.some(a => a.name.startsWith('public/') && a.name.endsWith('.json'))) {\n          let artifact = container.artifacts.find(a => a.name.startsWith('public/') && a.name.endsWith('.json'))\n          fetch(this.props.rootUrl + '/api/queue/v1/task/' + this.props.taskId + '/runs/' + this.props.run.runId + '/artifacts/' + artifact.name)\n          .then(responseArtifactApi => responseArtifactApi.json())\n          .then((container) => {\n            if (container.launchConfigs && container.launchConfigs.length) {\n              let imageIds = container.launchConfigs.map(launchConfig => launchConfig.storageProfile.imageReference.id);\n              this.setState(state => ({\n                images: imageIds\n              }));\n              let re = /^((north|south|east|west|(north-|south-|east-|west-)?central)-us(-2)?)-(.*)-(win.*)-([a-f0-9]{7})-([a-f0-9]{7})$/i;\n              this.appendToSummary({\n                task: {\n                  completed: 0,\n                  failed: 0,\n                  exception: 0,\n                  running: 0,\n                  pending: 0,\n                  unscheduled: 0\n                },\n                image: imageIds.reduce(function(a, imageId, i) {\n                  let image = imageId.substring(imageId.lastIndexOf('/') + 1);\n                  let matches = image.match(re);\n                  let pool = matches[5] + '/' + matches[6];\n                  a[pool] = (a[pool] || 0) + 1;\n                  return a;\n                }, {})\n              });\n            } else {\n              //console.log(container);\n            }\n          })\n          .catch(console.log);\n        }\n      } else {\n        //console.log(container);\n      }\n    })\n    .catch(console.log);\n  }\n\n  render() {\n    return (\n      <li>\n        <Button\n          size=\"sm\"\n          href={this.props.rootUrl + '/tasks/' + this.props.taskId + '/runs/' + this.props.run.runId}\n          style={{ marginLeft: '0.7em' }}\n          variant={'outline-' + StatusBadgeVariantMap[this.props.run.state]}\n          title={'task ' + this.props.taskId + ', run ' + this.props.run.runId + ': ' + this.props.run.state}>\n          {'task ' + this.props.taskId + ', run ' + this.props.run.runId}\n        </Button>\n        <>\n          {\n            (this.props.run.state === 'completed' && this.state.images.length)\n              ? (<Images images={this.state.images} /> )\n              : ''\n          }\n          {\n            (this.props.run.state === 'completed' && this.state.screenshots.length)\n              ? (<Screenshots screenshots={this.state.screenshots} taskId={this.props.taskId} runId={this.props.run.runId} /> )\n              : ''\n          }\n        </>\n      </li>\n    );\n  }\n}\n\nexport default Run;\n","import React from 'react'\nimport Run from './Run';\n\nclass Runs extends React.Component {\n  state = {\n    summary: {\n      task: {\n        completed: {},\n        failed: {},\n        exception: {},\n        running: {},\n        pending: {},\n        unscheduled: {}\n      },\n      image: {}\n    }\n  };\n\n  constructor(props) {\n    super(props);\n    this.appendToSummary = this.appendToSummary.bind(this);\n  }\n\n  appendToSummary(summary) {\n    this.setState(state => {\n      let combined = {\n        task: {\n          completed: { ...state.summary.task.completed, ...summary.task.completed },\n          failed: { ...state.summary.task.failed, ...summary.task.failed },\n          exception: { ...state.summary.task.exception, ...summary.task.exception },\n          running: { ...state.summary.task.running, ...summary.task.running },\n          pending: { ...state.summary.task.pending, ...summary.task.pending },\n          unscheduled: { ...state.summary.task.unscheduled, ...summary.task.unscheduled }\n        },\n        image: { ...state.summary.image, ...summary.image }\n      };\n      this.props.appender(combined);\n      return { summary: combined };\n    });\n  }\n\n  render() {\n    return (\n      <ul>\n        {\n          this.props.runs.map(run => (\n            <Run run={run} key={run.runId} taskId={this.props.taskId} rootUrl={this.props.rootUrl} appender={this.appendToSummary} />\n          ))\n        }\n      </ul>\n    );\n  }\n}\n\nexport default Runs;\n","import React from 'react'\nimport Runs from './Runs';\nimport StatusBadgeVariantMap from './StatusBadgeVariantMap';\nimport Badge from 'react-bootstrap/Badge';\n\nclass Task extends React.Component {\n  state = {\n    summary: {\n      task: {\n        completed: {},\n        failed: {},\n        exception: {},\n        running: {},\n        pending: {},\n        unscheduled: {}\n      },\n      image: {}\n    }\n  };\n\n  constructor(props) {\n    super(props);\n    this.appendToSummary = this.appendToSummary.bind(this);\n  }\n\n  appendToSummary(summary) {\n    this.setState(state => {\n      let combined = {\n        task: {\n          completed: { ...state.summary.task.completed, ...summary.task.completed },\n          failed: { ...state.summary.task.failed, ...summary.task.failed },\n          exception: { ...state.summary.task.exception, ...summary.task.exception },\n          running: { ...state.summary.task.running, ...summary.task.running },\n          pending: { ...state.summary.task.pending, ...summary.task.pending },\n          unscheduled: { ...state.summary.task.unscheduled, ...summary.task.unscheduled }\n        },\n        image: { ...state.summary.image, ...summary.image }\n      };\n      this.props.appender(combined);\n      return { summary: combined };\n    });\n  }\n\n  render() {\n    return (\n      <li>\n        {this.props.task.task.metadata.name}\n        &nbsp;\n        <a href={this.props.rootUrl + '/tasks/' + this.props.task.status.taskId} title={this.props.task.status.taskId}>\n          {this.props.task.status.taskId.substring(0, 7)}...\n        </a>\n        {\n          Array.from(new Set(this.props.task.status.runs.map(r => r.state))).map(state => (\n            <Badge\n              key={state}\n              style={{ margin: '0 1px' }}\n              variant={StatusBadgeVariantMap[state]}\n              title={state + ': ' + this.props.task.status.runs.filter(r => r.state === state).length}>\n              {this.props.task.status.runs.filter(r => r.state === state).length}\n            </Badge>\n          ))\n        }\n        <Runs runs={this.props.task.status.runs} taskId={this.props.task.status.taskId} rootUrl={this.props.rootUrl} appender={this.appendToSummary} />\n      </li>\n    );\n  }\n}\n\nexport default Task;\n","import React from 'react'\nimport Task from './Task';\n\nclass Tasks extends React.Component {\n  state = {\n    summary: {\n      task: {\n        completed: {},\n        failed: {},\n        exception: {},\n        running: {},\n        pending: {},\n        unscheduled: {}\n      },\n      image: {}\n    }\n  };\n\n  constructor(props) {\n    super(props);\n    this.appendToSummary = this.appendToSummary.bind(this);\n  }\n\n  appendToSummary(summary) {\n    this.setState(state => {\n      let combined = {\n        task: {\n          completed: { ...state.summary.task.completed, ...summary.task.completed },\n          failed: { ...state.summary.task.failed, ...summary.task.failed },\n          exception: { ...state.summary.task.exception, ...summary.task.exception },\n          running: { ...state.summary.task.running, ...summary.task.running },\n          pending: { ...state.summary.task.pending, ...summary.task.pending },\n          unscheduled: { ...state.summary.task.unscheduled, ...summary.task.unscheduled }\n        },\n        image: { ...state.summary.image, ...summary.image }\n      };\n      this.props.appender(combined);\n      return { summary: combined };\n    });\n  }\n\n  render() {\n    return (\n      <ul>\n        {\n          this.props.tasks.sort((a, b) => ((a.task.metadata.name < b.task.metadata.name) ? -1 : (a.task.metadata.name > b.task.metadata.name) ? 1 : 0)).filter(t => (!this.props.settings.limit.tasks || this.props.settings.limit.tasks.includes(t.task.metadata.name.slice(0, 2)))).map(task => (\n            <Task task={task} key={task.status.taskId} rootUrl={this.props.rootUrl} appender={this.appendToSummary} />\n          ))\n        }\n      </ul>\n    );\n  }\n}\n\nexport default Tasks;\n","import React from 'react'\nimport Tasks from './Tasks';\nimport StatusBadgeVariantMap from './StatusBadgeVariantMap';\nimport Badge from 'react-bootstrap/Badge';\n\nclass Status extends React.Component {\n  state = {\n    summary: {\n      task: {\n        completed: {},\n        failed: {},\n        exception: {},\n        running: {},\n        pending: {},\n        unscheduled: {}\n      },\n      image: {}\n    },\n    taskGroupId: null,\n    taskCount: 0,\n    tasks: [],\n    builds: [],\n    travisApiResponse: {}\n  };\n  travisBuildResults = [\n    'completed',\n    'failed',\n  ];\n\n  constructor(props) {\n    super(props);\n    this.appendToSummary = this.appendToSummary.bind(this);\n  }\n\n  appendToSummary(summary) {\n    this.setState(state => {\n      let combined = {\n        task: {\n          completed: { ...state.summary.task.completed, ...summary.task.completed },\n          failed: { ...state.summary.task.failed, ...summary.task.failed },\n          exception: { ...state.summary.task.exception, ...summary.task.exception },\n          running: { ...state.summary.task.running, ...summary.task.running },\n          pending: { ...state.summary.task.pending, ...summary.task.pending },\n          unscheduled: { ...state.summary.task.unscheduled, ...summary.task.unscheduled }\n        },\n        image: { ...state.summary.image, ...summary.image }\n      };\n      this.props.appender(combined);\n      return { summary: combined };\n    });\n  }\n\n  componentDidMount() {\n    switch (this.props.status.context) {\n      case 'continuous-integration/travis-ci/push':\n        let pathname = (new URL(this.props.status.target_url)).pathname;\n        let buildId = pathname.substring(pathname.lastIndexOf('/') + 1);\n        this.setState(state => ({\n          taskGroupId: buildId\n        }));\n        let buildsApi = 'https://api.travis-ci.org/repos/mozilla-platform-ops/cloud-image-builder/builds/' + buildId;\n        fetch(buildsApi)\n        .then(responseBuildsApi => responseBuildsApi.json())\n        .then((container) => {\n          if (container.matrix) {\n            this.setState(state => ({\n              taskCount: container.matrix.length,\n              builds: container.matrix,\n              travisApiResponse: container\n            }));\n            this.appendToSummary({\n              task: {\n                completed: { ...container.matrix.filter(x => x.result === 0).map(x => [x.id, x.finished_at]).reduce((o, [k, v]) => ({...o, [k]: v}), {}) },\n                failed: { ...container.matrix.filter(x => x.result !== null && x.result !== 0).map(x => [x.id, x.finished_at]).reduce((o, [k, v]) => ({...o, [k]: v}), {}) },\n                exception: {},\n                running: {},\n                pending: { ...container.matrix.filter(x => x.result === null).map(x => [x.id, x.finished_at]).reduce((o, [k, v]) => ({...o, [k]: v}), {}) },\n                unscheduled: {}\n              },\n              image: []\n            });\n          }\n        })\n        .catch(console.log);\n        break;\n      default:\n        let taskGroupHtmlUrl = new URL(this.props.status.target_url);\n        let taskGroupId = this.props.status.target_url.substring(this.props.status.target_url.lastIndexOf('/') + 1);\n        this.setState(state => ({\n          taskGroupId: taskGroupId\n        }));\n        let tasksApi = 'https://' + taskGroupHtmlUrl.hostname + '/api/queue/v1/task-group/' + taskGroupId + '/list';\n        fetch(tasksApi)\n        .then(responseTasksApi => responseTasksApi.json())\n        .then((container) => {\n          if (container.tasks && container.tasks.length) {\n            this.setState(state => ({\n              taskCount: container.tasks.length,\n              tasks: container.tasks//.sort((a, b) => a.task.metadata.name.localeCompare(b.task.metadata.name))\n            }));\n            this.appendToSummary({\n              task: {\n                completed: { ...container.tasks.filter(x => x.status.state === 'completed').map(x => [x.status.taskId, x.status.runs[x.status.runs.length - 1].resolved]).reduce((o, [k, v]) => ({...o, [k]: v}), {}) },\n                failed: { ...container.tasks.filter(x => x.status.state === 'failed').map(x => [x.status.taskId, x.status.runs[x.status.runs.length - 1].resolved]).reduce((o, [k, v]) => ({...o, [k]: v}), {}) },\n                exception: { ...container.tasks.filter(x => x.status.state === 'exception').map(x => [x.status.taskId, x.status.runs[x.status.runs.length - 1].resolved]).reduce((o, [k, v]) => ({...o, [k]: v}), {}) },\n                running: { ...container.tasks.filter(x => x.status.state === 'running').map(x => [x.status.taskId, null]).reduce((o, [k, v]) => ({...o, [k]: v}), {}) },\n                pending: { ...container.tasks.filter(x => x.status.state === 'pending').map(x => [x.status.taskId, null]).reduce((o, [k, v]) => ({...o, [k]: v}), {}) },\n                unscheduled: { ...container.tasks.filter(x => x.status.state === 'unscheduled').map(x => [x.status.taskId, null]).reduce((o, [k, v]) => ({...o, [k]: v}), {}) },\n              },\n              image: []\n            });\n          }\n        })\n        .catch(console.log);\n        break;\n    }\n  }\n\n  render() {\n    return (\n      <li>\n        {\n          new Intl.DateTimeFormat('en-GB', {\n            year: 'numeric',\n            month: 'short',\n            day: '2-digit',\n            hour: 'numeric',\n            minute: 'numeric',\n            timeZoneName: 'short'\n          }).format(new Date(this.props.status.updated_at))\n        }\n        &nbsp;\n        {this.props.status.description.toLowerCase()}\n        &nbsp;\n        (\n          {this.state.taskCount} tasks in group\n          &nbsp;\n          <a href={this.props.status.target_url} title={this.state.taskGroupId}>\n            {\n              (this.state.builds.length)\n                ? this.state.taskGroupId\n                : (this.state.taskGroupId && this.state.taskGroupId.slice(0, 7)) + '...'\n            }\n          </a>\n          &nbsp;\n          {\n            Object.keys(StatusBadgeVariantMap).map(status => (\n              (this.state.tasks.filter(t => t.status.state === status).length)\n                ? (\n                    <Badge\n                      key={status}\n                      style={{ margin: '0 1px' }}\n                      variant={StatusBadgeVariantMap[status]}\n                      title={status + ': ' + this.state.tasks.filter(t => t.status.state === status).length}>\n                      {this.state.tasks.filter(t => t.status.state === status).length}\n                    </Badge>\n                  )\n                : ''\n            ))\n          }\n          {\n            [0, 1, null].map((result, rI) => (\n              (this.state.builds.filter(b => b.result === result).length)\n                ? (\n                    <Badge\n                      key={rI}\n                      style={{ margin: '0 1px' }}\n                      variant={(result === null) ? 'info' : StatusBadgeVariantMap[this.travisBuildResults[result]]}\n                      title={this.travisBuildResults[result] + ': ' + this.state.builds.filter(b => b.result === result).length}>\n                      {this.state.builds.filter(b => b.result === result).length}\n                    </Badge>\n                  )\n                : ''\n            ))\n          }\n        )\n        {\n          <Tasks tasks={this.state.tasks} rootUrl={'https://' + (new URL(this.props.status.target_url)).hostname} appender={this.appendToSummary} settings={this.props.settings} />\n        }\n      </li>\n    );\n  }\n}\n\nexport default Status;\n","import React from 'react'\nimport Status from './Status';\n\nclass Statuses extends React.Component {\n  state = {\n    summary: {\n      task: {\n        completed: {},\n        failed: {},\n        exception: {},\n        running: {},\n        pending: {},\n        unscheduled: {}\n      },\n      image: {}\n    }\n  };\n\n  constructor(props) {\n    super(props);\n    this.appendToSummary = this.appendToSummary.bind(this);\n  }\n\n  appendToSummary(summary) {\n    this.setState(state => {\n      let combined = {\n        task: {\n          completed: { ...state.summary.task.completed, ...summary.task.completed },\n          failed: { ...state.summary.task.failed, ...summary.task.failed },\n          exception: { ...state.summary.task.exception, ...summary.task.exception },\n          running: { ...state.summary.task.running, ...summary.task.running },\n          pending: { ...state.summary.task.pending, ...summary.task.pending },\n          unscheduled: { ...state.summary.task.unscheduled, ...summary.task.unscheduled }\n        },\n        image: { ...state.summary.image, ...summary.image }\n      };\n      this.props.appender(combined);\n      return { summary: combined };\n    });\n  }\n\n  render() {\n    return (\n      <ul>\n        {\n          this.props.contexts.map((context, cI) => (\n            <li\n              key={cI}\n              style={{\n                margin: '10px 0 0 0',\n                padding: '0 0 0 40px',\n                listStyle: 'none',\n                backgroundImage: 'url(\"' + this.props.statuses.find(s => s.context === context).avatar_url + '\")',\n                backgroundRepeat: 'no-repeat',\n                backgroundPosition: 'left top',\n                backgroundSize: '30px'\n              }}>\n              { context }\n              <ul>\n              {\n                // only show pending statuses if there are no others (eg: failed/completed)\n                (this.props.statuses.some(s => s.context === context && s.state !== 'pending'))\n                  ? this.props.statuses.filter(s => s.context === context && s.state !== 'pending').map((status) => (\n                    <Status status={status} key={status.id} appender={this.appendToSummary} settings={this.props.settings} />\n                  ))\n                  // todo: add a reducer below to remove duplicate pending statuses\n                  : this.props.statuses.filter(s => s.context === context).map((status) => (\n                    <Status status={status} key={status.id} appender={this.appendToSummary} settings={this.props.settings} />\n                  ))\n              }\n              </ul>\n            </li>\n          ))\n        }\n      </ul>\n    );\n  }\n}\n\nexport default Statuses;\n","import React from 'react'\n\nimport Card from 'react-bootstrap/Card';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\nimport Spinner from 'react-bootstrap/Spinner';\n\nimport CommitMessage from './CommitMessage';\nimport Statuses from './Statuses';\nimport StatusBadgeVariantMap from './StatusBadgeVariantMap';\n//import { useInterval } from './useInterval';\nimport { CaretDown, CaretRight } from 'react-bootstrap-icons';\n\nconst minIntervalMs = 5000; // minimum random refresh interval in milliseconds\nconst maxIntervalMs = 60000; // maximum random refresh interval in milliseconds\n\nclass Commit extends React.Component {\n\n  interval;\n\n  state = {\n    summary: {\n      task: {\n        completed: {},\n        failed: {},\n        exception: {},\n        running: {},\n        pending: {},\n        unscheduled: {}\n      },\n      image: {}\n    },\n    contexts: [],\n    statuses: [],\n    expanded: false\n  };\n\n  constructor(props) {\n    super(props);\n    this.appendToSummary = this.appendToSummary.bind(this);\n  }\n\n  appendToSummary(summary) {\n    this.setState(state => ({\n      summary: {\n        task: {\n          completed: { ...state.summary.task.completed, ...summary.task.completed },\n          failed: { ...state.summary.task.failed, ...summary.task.failed },\n          exception: { ...state.summary.task.exception, ...summary.task.exception },\n          running: { ...state.summary.task.running, ...summary.task.running },\n          pending: { ...state.summary.task.pending, ...summary.task.pending },\n          unscheduled: { ...state.summary.task.unscheduled, ...summary.task.unscheduled }\n        },\n        image: { ...state.summary.image, ...summary.image }\n      }\n    }));\n  }\n\n  /*\n  note: to run locally, a cors proxy is required.\n\n  to install a local cors proxy:\n  $ sudo npm install -g local-cors-proxy\n\n  to run a local cors proxy with authenticated github requests:\n  $ lcp --proxyUrl https://grenade:$(pass github/grenade/token/cloud-image-builder)@api.github.com\n  */\n\n  componentDidMount() {\n    this.setState(state => ({ expanded: this.props.expand }));\n    \n\n    // refresh data in this component at a random interval, in\n    // order to prevent all components updating simultaneously\n    // https://blog.stvmlbrn.com/2019/02/20/automatically-refreshing-data-in-react.html\n    let interval = Math.floor(Math.random() * (maxIntervalMs - minIntervalMs)) + minIntervalMs;\n    this.interval = setInterval(this.getBuildStatuses.bind(this), interval);\n    /*\n    useInterval(async () => {\n      this.getBuildStatuses();\n    }, interval);\n    */\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getBuildStatuses() {\n    fetch(\n      (window.location.hostname === 'localhost')\n        ? 'http://localhost:8010/proxy/repos/mozilla-platform-ops/cloud-image-builder/commits/' + this.props.commit.sha + '/statuses'\n        : 'https://grenade-cors-proxy.herokuapp.com/https://api.github.com/repos/mozilla-platform-ops/cloud-image-builder/commits/' + this.props.commit.sha + '/statuses'\n    )\n    .then(responseGithubApiStatuses => responseGithubApiStatuses.json())\n    .then((githubCommitStatuses) => {\n      if (githubCommitStatuses.length) {\n        this.setState(state => ({\n          contexts: [...new Set(githubCommitStatuses.map(s => s.context))].sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase())),\n          statuses: githubCommitStatuses//.filter(s => s.state !== 'pending')\n        }));\n      }\n    })\n    .catch(console.log);\n  }\n\n  render() {\n    return (\n      <Card style={{ width: '100%', marginTop: '10px' }}>\n        <Card.Header>\n          <Accordion.Toggle as={Button} variant=\"link\" eventKey={this.props.commit.sha} onClick={() => {\n            this.setState(state => ({expanded: !state.expanded}))\n          }}>\n            {(this.state.expanded) ? <CaretDown /> : <CaretRight />}\n          </Accordion.Toggle>\n          {\n            new Intl.DateTimeFormat('en-GB', {\n              year: 'numeric',\n              month: 'short',\n              day: '2-digit',\n              hour: 'numeric',\n              minute: 'numeric',\n              timeZoneName: 'short'\n            }).format(new Date(this.props.commit.committer.date))\n          }\n          &nbsp;\n          <a href={this.props.commit.url}>\n            { this.props.commit.sha.substring(0, 7) }\n          </a>\n          {\n            (Object.keys(this.state.summary.task).some(k => (Object.keys(this.state.summary.task[k]).length > 0)))\n              ? (\n                  Object.keys(this.state.summary.task).filter(k => Object.keys(this.state.summary.task[k]).length > 0).map(k => (\n                    <Badge\n                      key={k}\n                      style={{ marginLeft: '0.3em' }}\n                      variant={StatusBadgeVariantMap[k]}>\n                      {Object.keys(this.state.summary.task[k]).length}\n                    </Badge>\n                  ))\n                )\n              : (\n                  <Spinner\n                    style={{ marginLeft: '0.3em' }}\n                    animation=\"border\"\n                    size=\"sm\"\n                    variant=\"info\" />\n                )\n          }\n          <Image\n            src={this.props.commit.author.avatar}\n            alt={this.props.commit.author.name}\n            title={this.props.commit.author.name}\n            rounded={true}\n            style={{ width: '30px', height: '30px', marginLeft: '10px' }}\n            className=\"float-right\" />\n          <span className=\"float-right\">\n            { this.props.commit.author.username }\n          </span>\n        </Card.Header>\n        {\n          (Object.keys(this.state.summary.image).length)\n          ? (\n              <Card.Body>\n                {\n                  Object.keys(this.state.summary.image).sort().map(pool => (\n                    <Button\n                      key={pool}\n                      style={{ marginLeft: '0.3em' }}\n                      variant=\"outline-info\"\n                      size=\"sm\">\n                      {pool} <Badge variant=\"info\">{this.state.summary.image[pool]}</Badge>\n                    </Button>\n                  ))\n                }\n              </Card.Body>\n            )\n          : ''\n        }\n        <Accordion.Collapse eventKey={this.props.commit.sha}>\n          <Card.Body>\n            <CommitMessage message={this.props.commit.message} />\n            <Statuses contexts={this.state.contexts} statuses={this.state.statuses} appender={this.appendToSummary} settings={this.props.settings} />\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    );\n  }\n}\n\nexport default Commit;\n","import React from 'react'\nimport Commit from './Commit';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Spinner from 'react-bootstrap/Spinner';\n\nclass Commits extends React.Component {\n  /*\n  constructor(props) {\n    super(props);\n    this.state = {\n      defaultActiveKey: props.latest\n    };\n  }\n  componentDidMount() {\n    this.setState(state => ({ defaultActiveKey: (this.props.commits && this.props.commits.length) ? this.props.commits[0].sha : null }));\n  }\n  */\n  render() {\n    return (\n      (this.props.commits.length)\n        ? (\n            <Accordion defaultActiveKey={null/*this.props.latest*/}>\n              {\n                this.props.commits.map(commit => (\n                  <Commit commit={commit} key={commit.sha} expand={false/*(commit.sha === this.props.latest)*/} settings={this.props.settings} />\n                ))\n              }\n            </Accordion>\n          )\n        : (\n            <div style={{textAlign: 'center', width: '100%', padding: '100px'}}>\n              <Spinner animation=\"border\" />\n            </div>\n          )\n    );\n  }\n}\n\nexport default Commits;\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCloud, faImage, faHammer } from '@fortawesome/free-solid-svg-icons'\nimport Commits from './Commits';\nimport Badge from  'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Cookies from 'universal-cookie';\nimport StatusBadgeVariantMap from './StatusBadgeVariantMap';\nimport Slider from 'rc-slider';\n\nclass App extends React.Component {\n\n  interval;\n\n  cookies = new Cookies();\n  state = {\n    commits: [],\n    settings: {\n      fluid: (this.cookies.get('fluid') === null) ? true : (this.cookies.get('fluid') === 'true'),\n      //showAllTasks: (this.cookies.get('showAllTasks') === null) ? false : (this.cookies.get('showAllTasks') === 'true'),\n      limit: {\n        tasks: (this.cookies.get('limitTasks') === null) ? ['03', '04'] : this.cookies.get('limitTasks'),\n        commits: (this.cookies.get('limitCommits') === null) ? 5 : parseInt(this.cookies.get('limitCommits')),\n      },\n      commitLimit: (this.cookies.get('commitLimit') === null) ? 5 : parseInt(this.cookies.get('commitLimit'))\n    }\n  };\n  /*\n  note: to run locally, a cors proxy is required.\n\n  to install a local cors proxy:\n  $ sudo npm install -g local-cors-proxy\n\n  to run a local cors proxy with authenticated github requests:\n  $ lcp --proxyUrl https://grenade:$(pass github/grenade/token/cloud-image-builder)@api.github.com\n  */\n\n  componentDidMount() {\n    if (this.cookies.get('fluid') === undefined) {\n      this.cookies.set('fluid', true, { path: '/', sameSite: 'strict' });\n    }\n    if (this.cookies.get('limit') === undefined) {\n      this.cookies.set(\n        'limit',\n        {\n          commits: 1,\n          tasks: ['03', '04']\n        },\n        {\n          path: '/',\n          sameSite: 'strict'\n        });\n    }\n    if (this.cookies.get('commitLimit') === undefined) {\n      this.cookies.set('commitLimit', 5, { path: '/', sameSite: 'strict' });\n    }\n    this.getCommits();\n\n    // refresh commit list every 5 minutes\n    // https://blog.stvmlbrn.com/2019/02/20/automatically-refreshing-data-in-react.html\n    let intervalMs = (5 * 60 * 1000);\n    this.interval = setInterval(this.getCommits.bind(this), intervalMs);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getCommits() {\n    fetch(\n      (window.location.hostname === 'localhost')\n        ? 'http://localhost:8010/proxy/repos/mozilla-platform-ops/cloud-image-builder/commits'\n        : 'https://grenade-cors-proxy.herokuapp.com/https://api.github.com/repos/mozilla-platform-ops/cloud-image-builder/commits'\n    )\n    .then(responseGithubApiCommits => responseGithubApiCommits.json())\n    .then((githubCommits) => {\n      if (githubCommits.length) {\n        this.setState(state => ({\n          commits: githubCommits.slice(0, state.settings.commitLimit).map(c => ({\n            sha: c.sha,\n            url: c.html_url,\n            author: {...c.commit.author, ...{ id: c.author.id, username: c.author.login, avatar: c.author.avatar_url }},\n            committer: {...c.commit.committer, ...{ id: c.committer.id, username: c.committer.login, avatar: c.committer.avatar_url }},\n            message: c.commit.message.split('\\n').filter(line => line !== ''),\n            verification: c.commit.verification\n          })),\n          latest: githubCommits[0].sha\n        }));\n      } else {\n        //console.log(githubCommits)\n      }\n    })\n    .catch(console.log);\n  }\n\n  render() {\n    return (\n      <Container fluid={this.state.settings.fluid}>\n        <Row>\n          <h1 style={{ padding: '0 1em' }}>\n            <FontAwesomeIcon style={{ marginRight: '0.4em' }} icon={faCloud} />\n            <FontAwesomeIcon style={{ marginRight: '0.4em' }} icon={faImage} />\n            <FontAwesomeIcon style={{ marginRight: '0.4em' }} icon={faHammer} />\n            recent commits and builds\n          </h1>\n        </Row>\n        <Row>\n          <Col>\n            <Commits commits={this.state.commits} latest={this.state.latest} settings={this.state.settings} />\n          </Col>\n          <Col sm=\"2\">\n            <strong>\n              legend\n            </strong>\n            <br style={{ marginTop: '20px' }} />\n            task status:\n            {\n              Object.keys(StatusBadgeVariantMap).map(status => (\n                <Badge\n                  key={status}\n                  style={{ display: 'block', margin: '10px 20px' }}\n                  variant={StatusBadgeVariantMap[status]}>\n                  {status}\n                </Badge>\n              ))\n            }\n            image deployment:\n            <br />\n            <Button\n              style={{ marginLeft: '0.3em' }}\n              variant=\"outline-info\"\n              size=\"sm\">\n              worker pool <Badge variant=\"info\">region count</Badge>\n            </Button>\n            <hr />\n            <strong>\n              display settings:\n            </strong>\n            <br  />\n            <Slider\n              defaultValue={this.state.settings.commitLimit}\n              min={1}\n              max={30}\n              onChange={\n                (commitLimit) => {\n                  this.cookies.set('commitLimit', commitLimit, { path: '/', sameSite: 'strict' });\n                  this.setState(state => ({settings: { commitLimit: commitLimit, fluid: state.settings.fluid, showAllTasks: state.settings.showAllTasks }}));\n                  this.getCommits();\n                }\n              }\n              style={{ marginTop: '20px' }} />\n            limit commits ({this.state.settings.commitLimit})\n            <br style={{ marginBottom: '20px' }} />\n            <Form.Check \n              type=\"switch\"\n              id=\"showAllTasks\"\n              label=\"all tasks\"\n              checked={this.state.settings.showAllTasks}\n              onChange={\n                () => {\n                  this.cookies.set('showAllTasks', (!this.state.settings.showAllTasks), { path: '/', sameSite: 'strict' });\n                  this.setState(state => ({settings: { showAllTasks: !state.settings.showAllTasks, fluid: state.settings.fluid }}));\n                }\n              }\n            />\n            <br />\n            <Form.Check \n              type=\"switch\"\n              id=\"fluid\"\n              label=\"fluid\"\n              checked={this.state.settings.fluid}\n              onChange={\n                () => {\n                  this.cookies.set('fluid', (!this.state.settings.fluid), { path: '/', sameSite: 'strict' });\n                  this.setState(state => ({settings: { fluid: !state.settings.fluid, showAllTasks: state.settings.showAllTasks }}));\n                }\n              }\n            />\n            <hr />\n            <p className=\"text-muted\">\n              this page monitors <a href=\"https://github.com/mozilla-platform-ops/cloud-image-builder/commits/master\">commits</a> to the master branch\n              of the <a href=\"https://github.com/mozilla-platform-ops/cloud-image-builder\">mozilla-platform-ops/cloud-image-builder</a> repository and\n              the resulting travis-ci builds and taskcluster tasks which produce cloud machine images of the various windows operating system editions\n              and configurations used by firefox ci to build and test gecko products on the windows platform.\n            </p>\n            <p className=\"text-muted\">\n              the source code for this page is hosted in the <a href=\"https://github.com/mozilla-platform-ops/cloud-image-builder/tree/react\">react\n              branch</a> of the same repository.\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'rc-slider/assets/index.css';\nimport 'react-image-gallery/styles/css/image-gallery.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}